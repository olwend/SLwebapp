{"version":3,"sources":["assets/img/coding7.jpg","assets/img/coding5.jpg","assets/img/hassle-free.jpg","assets/img/relevant_training.jpg","assets/img/theia-screenshot.png","assets/img/self-paced.png","assets/img/logos/jenkins_logo.png","assets/img/logos/prometheus_logo.png","assets/img/logos/docker.png","assets/img/logos/ansible_logo.png","assets/img/logos/vault_logo.png","assets/img/logos/git_logo.png","assets/img/logos/grafana_logo.png","assets/img/logos/harbor_logo.png","assets/img/logos/synk_logo.png","assets/img/logos/sonarqube_logo.png","assets/img/logos/trivy_logo.png","assets/img/coding6.jpg","components/Headers/AboutUsHeader.js","redux/slices/userSlice.js","redux/slices/sessionSlice.js","redux/slices/labsSlice.js","utils/authentication.js","utils/data/user.js","components/AuthUserNavBar.js","components/NonAuthUserNavBar.js","components/Navbars/ScrollTransparentNavbar.js","components/Footers/Footer.js","views/Home.js","utils/index.js","utils/aws.js","utils/lab.js","utils/constants/tableOptions.js","components/AlertModal.js","components/LoadingModal.js","utils/session.js","utils/data/session.js","utils/http.js","model/task.js","model/user.js","components/ActionButtons.js","components/DestroySessionModal.js","utils/constants/categoryOptions.js","components/FilterSideBar.js","components/NoDataIndication.js","components/Navbars/FixedWhiteNavbar.js","views/Labs.js","config.js","utils/constants/yupAuthSchema.js","components/Navbars/FixedTransparentNavbar.js","components/TosModal.js","components/PrivacyPolicyModal.js","components/PasswordField.js","views/Register.js","views/Login.js","views/Activate.js","utils/constants/initialAchievementValues.js","components/BaseListObjects.js","components/LabsListObjects.js","utils/iframes.js","components/BaseListIframes.js","components/LabsListIframes.js","components/Achievements.js","components/TOC.js","views/Slides.js","views/Sandbox.js","utils/constants/initialFormValues.js","utils/compare.js","utils/constants/zipMimeOptions.js","utils/constants/yupSchema.js","views/Editor.js","utils/admin.js","components/ToggleButton.js","components/GroupSelect.js","utils/constants/adminTableOptions.js","views/Admin.js","components/UsersSelect.js","components/LabsSelect.js","views/GroupsManagement.js","views/UserPreferences.js","routes/AppliedRoute.js","routes/AuthenticatedRoute.js","routes/UnauthenticatedRoute.js","views/ForgotPassword.js","views/ForgotPasswordSubmit.js","routes/Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","AboutUsHeader","pageHeader","React","createRef","useEffect","window","innerWidth","updateScroll","windowScrollTop","pageYOffset","current","style","transform","addEventListener","removeEventListener","className","filter-color","backgroundImage","require","ref","Row","Col","md","userSlice","createSlice","name","initialState","value","isAuthenticated","isLoaded","reducers","setUser","state","action","payload","setIsLoaded","actions","getUser","user","sessionSlice","session","isLabActive","isLabRunning","remainingMins","readme","currentSlide","setReduxSession","setIsLabRunning","setReadme","setRemainingMins","setIsALBRunning","isALBRunning","setCurrentSlide","getSession","labsSlice","data","setLabs","getLabs","labs","setUserData","dispatch","groups","signInUserSession","accessToken","userAdminGroup","includes","userUuid","username","userEmail","attributes","email","userName","userAdmin","userGroups","userDataObject","changingPassword","history","fields","a","Auth","currentAuthenticatedUser","currentUser","changePassword","oldPassword","password","push","logout","signOut","AuthUserNavBar","sessionInfo","useSelector","userInfo","useDispatch","Nav","navbar","NavItem","NavLink","tag","Link","to","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","disabled","onClick","NonAuthUserNavBar","ScrollTransparentNavbar","useState","collapseOpen","setCollapseOpen","document","documentElement","scrollTop","body","navbarColor","setNavbarColor","updateNavbarColor","id","classList","toggle","Navbar","color","expand","Container","NavbarBrand","aria-expanded","Collapse","isOpen","Footer","Date","getFullYear","href","target","Home","Card","alt","objectFit","height","width","src","apiFnc","fnc","header","msg","setApiError","setShowError","message","console","error","surroundWithProgressTrackingPromise","initial","maximum","interval","step","setCurrent","promise","exitOnReachingMaximum","Promise","resolve","reject","progress","intervalID","setInterval","clearInterval","Error","then","catch","reason","finally","s3Upload","folder","file","type","filename","toLowerCase","log","Storage","put","contentType","ACL","stored","key","s3Download","get","download","cacheControl","getUserSession","userId","API","sessions","forEach","index","startDateTime","getTime","getUsers","getGroups","createGroup","json","post","groupName","description","groupDescription","deleteGroup","delLabId","del","getLabId","addLab","uuid","updateLab","labDefinition","labUuid","createdDateTime","getAchievementsId","updateUserSettings","destroyLabSession","LabSessionId","sessionUuid","refreshListOfLabs","undefined","length","filteredLab","filter","lab","types","idx","processZip","JSZip","loadAsync","zip","files","async","fileData","File","checkLabSessionStatus","i","userSession","status","setTimeout","pagination","showTotal","AlertModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","err","Body","Button","onHide","LoadingModal","dpgLoading","ModalHeader","ModalBody","Progress","max","pbValue","fontSize","setSessionData","labId","labMeta","labName","createDateTime","timer","ide","shell","basePorts","cDef","achievements","achievementsId","achievmentsId","achievementsDebug","sessionDataObject","loadSession","isStatusAServerError","statusCode","isUrlAvailable","url","axios","response","result","request","isUrl200","checkUntilUrlIsAvailable","task","run","item","setPbValue","setDpgLoading","sessionData","containerDefinition","now","wettyAndTheiaCheckPromise","wettyURL","process","REACT_APP_URL","theiaURL","promises","all","statusCheckPromise","onError","setProgressValueWithPause","pauseInSeconds","labData","ActionButtons","useHistory","labActive","dataSession","textAlign","variant","row","as","location","reload","DestroySessionModal","show","handleClose","ModalFooter","history_path","categoryOptions","label","resourceOptions","timerOptions","FilterSideBar","SearchBar","Search","setShow","block","ButtonGroup","aria-label","fluid","tableProps","searchProps","Form","FormGroup","controlid","Label","isMulti","classNamePrefix","options","closeMenuOnSelect","onChange","selectCategories","selectTypes","check","Input","defaultChecked","activeFilter","activeClicks","newClicks","NoDataIndication","Spinner","animation","FixedWhiteNavbar","Labs","apiError","showError","setGroups","labsInfo","groupFilter","grps","GroupName","id1","some","map","Description","onLoad","newBadgeFormatter","cell","Badge","LabsTable","categoriesFilter","typeFilter","createdDateTimeFilter","arrayFormatter","sort","join","sessionList","columns","text","dataField","verticalAlign","formatter","headerStyle","column","colIndex","textFilter","getFilter","defaultValue","numberFilter","filterValue","colum","whiteSpace","isDummyField","cellContent","selectRow","mode","backgroundColor","hideSelectColumn","selected","keyField","bootstrap4","search","sm","lg","event","checked","number","comparator","Comparator","GT","baseProps","paginationFactory","filterFactory","noDataIndication","Breadcrumb","BreadcrumbItem","active","MAX_ATTACHMENT_SIZE","s3","BUCKET","REACT_APP_S3_BUCKET_NAME","REGION","REACT_APP_S3_DEFAULT_REGION","apiGateway","REACT_APP_AWS_DEFAULT_REGION","URL","REACT_APP_GATEWAY_URL","X_API_KEY","REACT_APP_GATEWAY_KEY","slsApi","cognito","REACT_APP_COGNITO_AWS_DEFAULT_REGION","USER_POOL_ID","REACT_APP_COGNITO_USER_POOL_ID","APP_CLIENT_ID","REACT_APP_COGNITO_APP_CLIENT_ID","IDENTITY_POOL_ID","REACT_APP_COGNITO_IDENTITY_POOL_ID","CLUSTER_NAME","REACT_APP_ECS_CLUSTER_NAME","SUBNET","REACT_APP_ECS_SUBNET","ZONEID","REACT_APP_ROUTE53_ZONEID","CAPTCHA_SITE_KEY","REACT_APP_CAPTCHA_SITE_KEY","yupRegistrationSchema","Yup","shape","min","required","matches","passwordConfirmation","oneOf","tos","yupLoginSchema","yupActivationSchema","code","yupForgotPasswordSchema","yupForgotPasswordSubmitSchema","yupChangePasswordValidation","confirmPassword","FixedTransparentNavbar","TosModal","PrivacyPolicyModal","PasswordField","passwordType","setPasswordType","faFocus","setFaFocus","setPassword","InputGroup","autoComplete","placeholder","onFocus","handleChange","onBlur","invalid","touched","InputGroupAddon","addonType","InputGroupText","borderTopRightRadius","borderBottomRightRadius","borderColor","FormFeedback","Registration","recaptchaToken","setRecaptchaToken","tosShow","setTosShow","ppShow","setPpShow","submitForm","values","setSubmitting","setFieldError","setStatus","signUp","validationData","Name","Value","pathname","captchaChange","borderRadius","CardBody","CardTitle","validationSchema","initialValues","onSubmit","errors","handleBlur","handleSubmit","setFieldValue","isSubmitting","noValidate","sitekey","config","display","CardFooter","Login","signIn","Alert","Activate","urlParams","URLSearchParams","confirmSignUp","alert","resendCode","resendSignUp","initialAchievementValues","maxpoints","actualpoints","BaseListObjects","v","baseUrl","port","visible","Item","eventKey","LabsListObjects","ports","serviceUrl","shortName","populateTabs","tabs","available","populateBaseTabs","checkUrlInAvailabilityList","urlAvailability","_","isAvailable","refresh","tab","currentRefreshNumber","setTabs","isDelayedRefreshAlreadyActivated","prepareRefresh","updatedTabs","labsFetchData","fetchData","urls","populateUrls","baseFetchData","populateBaseUrls","populateTabsFunction","newTabs","BaseListIframes","Tab","Pane","LabsListIframes","Achievements","initialAchievements","setInitialAchievements","ms","alertErrorFnc","b","d","acquired","fontStyle","title","date","points","TOC","toc","slides","slide","split","line","trimmedLine","trim","startsWith","position","substring","direction","overflow","handleJumpTo","Slides","AWS_BUCKET_URL","setSlides","setFontSize","handleChangeClickNext","handleChangeClickPrev","source","renderers","image","maxWidth","maxHeight","transformImageUri","uri","onKeyUp","parsedValue","parseInt","keyCode","isNaN","animated","onKeyDown","Sandbox","defaultActiveKey","Content","Text","sessionId","initialFormValues","categories","resourcesCPUMEM","baseGitUrl","achievementsImage","compare","bandA","toUpperCase","bandB","comparison","zipMimeOptions","zipValidation","fileNames","readmeFound","new_zip","yupSchema","notRequired","nullable","of","when","is","test","EditItem","showAlert","setShowAlert","loadingData","setLoadingData","appError","setAppError","setInitialState","hTabs","setHTabs","setDisabled","match","params","returnToLabs","saveItem","pills","e","preventDefault","enableReinitialize","TabContent","activeTab","TabPane","tabId","FormText","Boolean","isDisabled","onBlue","CustomInput","currentTarget","render","insert","remove","baseIndex","String","float","envVars","path","mountPoints","volumeIndex","directory","portIndex","sessionFormatter","statusFormatter","fill","ToggleButton","setChecked","unactive","setUnactive","enableDisableUser","handleToggleChange","taskId","Username","Check","GroupSelect","change","setChange","processing","setProcessing","obj","groupUpdate","grp","handleUpdateGroups","xs","newGroups","actualGroups","JSON","stringify","handleStateChange","expandRow","renderer","toFixed","showExpandColumn","expandByColumnOnly","sortValue","Admin","users","setUsers","AdminTable","UsersSelect","selectedUsers","setSelectedUsers","addUsersToGroup","setAddUsersToGroup","removeUsersFromGroup","setRemoveUsersFromGroup","savedUsers","setSavedUsers","Attributes","group","nameEmail","handleUpdateLabs","actualItems","addUsersTmp","removeUsersTmp","addUsers","removeUsers","LabsSelect","labsInGroup","setLabsInGroup","savedLabs","setSavedLabs","addLabsToGroup","setAddLabsToGroup","removeLabsFromGroup","setRemoveLabsFromGroup","allLabs","updatedLabValues","setLabValue","labsSelected","addLabsTmp","removeLabsTmp","addLabs","removeLabs","GroupsManagement","processingCreating","setProcessingCreating","schema","yup","newGroupName","newGroupDesc","destroyGroup","confirm","createGroupColumn","AdminGrpTable","isValid","Group","Control","isInvalid","Feedback","role","aria-hidden","UserPreferences","validationMessage","setValidationMessage","AppliedRoute","C","component","appProps","rest","AuthenticatedRoute","AdminRoute","ActiveLabRoute","UnauthenticatedRoute","redirect","replace","results","RegExp","exec","decodeURIComponent","querystring","ForgotPassword","passwordRedirect","forgotPassword","ForgotPasswordSubmit","forgotPasswordSubmit","Routes","exact","Editor","withRouter","isAuthenticating","setIsAuthenticating","wasCalled","setWasCalled","firstCall","setFirstCall","bypassCache","remainingTime","endTime","timeNow","mins","timerVal","timerSec","hostname","configureStore","reducer","userReducer","sessionReducer","labsReducer","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","custom_header","currentSession","getIdToken","getJwtToken","Authorization","ReactDOM","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6039cc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coding7.8f3cf98c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coding5.ec6a9451.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hassle-free.76eb5ae4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/relevant_training.4a185a25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theia-screenshot.54bceef3.png\";","module.exports = __webpack_public_path__ + \"static/media/self-paced.48490ef9.png\";","module.exports = __webpack_public_path__ + \"static/media/jenkins_logo.5a46819d.png\";","module.exports = __webpack_public_path__ + \"static/media/prometheus_logo.8cb7f158.png\";","module.exports = __webpack_public_path__ + \"static/media/docker.09cd2834.png\";","module.exports = __webpack_public_path__ + \"static/media/ansible_logo.7c6716ed.png\";","module.exports = __webpack_public_path__ + \"static/media/vault_logo.6cf14890.png\";","module.exports = __webpack_public_path__ + \"static/media/git_logo.3e93c75c.png\";","module.exports = __webpack_public_path__ + \"static/media/grafana_logo.33f520f1.png\";","module.exports = __webpack_public_path__ + \"static/media/harbor_logo.f5b69ea7.png\";","module.exports = __webpack_public_path__ + \"static/media/synk_logo.4d7aaf29.png\";","module.exports = __webpack_public_path__ + \"static/media/sonarqube_logo.4e99ce35.png\";","module.exports = __webpack_public_path__ + \"static/media/trivy_logo.b8c68928.png\";","module.exports = __webpack_public_path__ + \"static/media/coding6.09a2a8d5.jpg\";","import React from \"react\";\n\n// reactstrap components\nimport { Row, Col } from \"reactstrap\";\n\n// core components\n\nfunction AboutUsHeader() {\n  let pageHeader = React.createRef();\n  React.useEffect(() => {\n    if (window.innerWidth > 991) {\n      const updateScroll = () => {\n        let windowScrollTop = window.pageYOffset / 3;\n        pageHeader.current.style.transform =\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\n      };\n      window.addEventListener(\"scroll\", updateScroll);\n      return function cleanup() {\n        window.removeEventListener(\"scroll\", updateScroll);\n      };\n    }\n  });\n  return (\n    <>\n      <div className=\"page-header page-header-small background-image\" filter-color=\"blue\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage:\n              \"url(\" + require(\"assets/img/coding5.jpg\") + \")\",\n          }}\n          ref={pageHeader}\n        ></div>\n        <div className=\"content-center\">\n          <Row>\n            <Col className=\"ml-auto mr-auto\" md=\"8\">\n              <h1 className=\"title\">SkillsLounge</h1>\n              <h4>\n                An instant, on demand, private, ephemeral learning classroom\n              </h4>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AboutUsHeader;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    value: {\n      isAuthenticated: false,\n      isLoaded: false\n    },\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.value = action.payload;\n    },\n    setIsLoaded: (state, action) => {\n      state.value.isLoaded = action.payload\n    },\n  },\n});\n\nexport const { setUser } = userSlice.actions;\n\nexport const { setIsLoaded } = userSlice.actions;\n\nexport const getUser = state => state.user.value;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst sessionSlice = createSlice({\n  name: 'session',\n  initialState: {\n    value: {\n      session: {},\n      isLabActive: false,\n      isLabRunning: false,\n      isLoaded: false,\n      remainingMins: 0,\n      readme: \"\",\n      currentSlide: 1,\n    },\n  },\n  reducers: {\n    setReduxSession: (state, action) => {\n      state.value = action.payload;\n    },\n    setIsLabRunning: (state, action) => {\n      state.value.isLabRunning = action.payload\n    },\n    setIsLoaded: (state, action) => {\n      state.value.isLoaded = action.payload\n    },\n    setReadme: (state, action) => {\n      state.value.readme = action.payload\n    },\n    setRemainingMins: (state, action) => {\n      state.value.remainingMins = action.payload\n    },\n    setIsALBRunning: (state, action) => {\n      state.value.isALBRunning = action.payload\n    },\n    setCurrentSlide: (state, action) => {\n      state.value.currentSlide = action.payload\n    }\n  },\n});\n\nexport const { setReduxSession } = sessionSlice.actions;\n\nexport const { setIsLabRunning } = sessionSlice.actions;\n\nexport const { setRemainingMins } = sessionSlice.actions;\n\nexport const { setIsLoaded } = sessionSlice.actions;\n\nexport const { setReadme } = sessionSlice.actions;\n\nexport const { setIsALBRunning } = sessionSlice.actions;\n\nexport const { setCurrentSlide } = sessionSlice.actions;\n\nexport const getSession = state => state.session.value;\n\nexport default sessionSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nconst labsSlice = createSlice({\n  name: 'labs',\n  initialState: {\n    data: [],\n    isLoaded: false\n  },\n  reducers: {\n    setLabs: (state, action) => {\n      state.data = action.payload;\n    },\n    setIsLoaded: (state, action) => {\n      state.isLoaded = action.payload\n    },\n  },\n});\n\nexport const { setLabs } = labsSlice.actions;\n\nexport const { setIsLoaded } = labsSlice.actions;\n\nexport const getLabs = state => state.labs;\n\nexport default labsSlice.reducer;","import { setUser } from '../redux/slices/userSlice'\nimport { Auth } from 'aws-amplify'\nimport { setLabs } from '../redux/slices/labsSlice'\nimport { setReduxSession } from '../redux/slices/sessionSlice'\n\nimport userDataObject from './data/user'\n\nexport const setUserData = (dispatch, user) => {\n  let groups = user.signInUserSession.accessToken.payload[\"cognito:groups\"] || []\n  let userAdminGroup = groups.includes(\"Admin\")\n  dispatch(setUser(userDataObject(user, groups, userAdminGroup)))\n}\n\nexport const changingPassword = async (history, fields) => {\n  const currentUser = await Auth.currentAuthenticatedUser()\n  await Auth.changePassword(currentUser, fields.oldPassword, fields.password)\n  history.push(\"/\")\n}\n\nexport const logout = dispatch => async () => {\n  await Auth.signOut()\n  dispatch(setUser({ isAuthenticated: false }))\n  dispatch(setReduxSession({ session: {}, isLabActive: false }))\n  dispatch(setLabs([]))\n}\n","export default function (user, groups, userAdminGroup) {\n  return {\n    userUuid: user.username,\n    userEmail: user.attributes.email,\n    userName: user.attributes.name,\n    userAdmin: userAdminGroup,\n    userGroups: groups,\n    isAuthenticated: true,\n    isLoaded: true,\n    attributes: user.attributes\n  };\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\nimport { getUser } from '../redux/slices/userSlice'\nimport { BeakerIcon, PersonIcon, TerminalIcon } from '@primer/octicons-react'\n\n\n// Import utils\nimport { logout } from '../utils/authentication'\n\n// Import reactstrap components\nimport {\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    NavItem,\n    NavLink,\n    Nav,\n  } from \"reactstrap\";\n\nconst AuthUserNavBar = () => {\n\n    const sessionInfo = useSelector(getSession)\n    const userInfo = useSelector(getUser)\n    const dispatch = useDispatch()\n\n    return(\n        <Nav navbar>\n            <NavItem>\n                <NavLink tag={ Link } to=\"/labs\">{ <BeakerIcon/> } Labs</NavLink>\n            </NavItem>\n            { sessionInfo.isLabActive && <NavItem><NavLink tag={ Link } to=\"/sandbox\">{ <TerminalIcon/> } Sandbox</NavLink></NavItem>}\n            <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                    <PersonIcon/>\n                </DropdownToggle>\n                <DropdownMenu right>\n                    <DropdownItem tag={ Link } to=\"/userdetails\">\n                        User preferences\n                    </DropdownItem>\n                    {userInfo.userAdmin ? (<>\n                    <DropdownItem divider />\n                    <DropdownItem tag={ Link } disabled to=\"/\" >Admin Panel</DropdownItem> \n                    <DropdownItem tag={ Link } to=\"/usersmgmt\">User Management</DropdownItem> \n                    <DropdownItem tag={ Link } to=\"/groupsmgmt\">Groups Management</DropdownItem> \n                    </>)\n                    : null\n                }\n                 <DropdownItem divider />\n                    <DropdownItem onClick={ logout(dispatch) }>\n                        Logout\n                    </DropdownItem>\n                </DropdownMenu>\n            </UncontrolledDropdown>\n        </Nav>\n    )\n}\n\nexport default AuthUserNavBar\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Nav,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport { PersonIcon } from \"@primer/octicons-react\";\n\nconst NonAuthUserNavBar = () => (\n  <Nav navbar>\n    <UncontrolledDropdown nav inNavbar>\n      <DropdownToggle nav caret>\n        <PersonIcon />\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem tag={Link} to=\"/login\">\n          Login\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  </Nav>\n);\n\nexport default NonAuthUserNavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport { getUser } from 'redux/slices/userSlice'\nimport AuthUserNavBar from 'components/AuthUserNavBar'\nimport NonAuthUserNavBar from 'components/NonAuthUserNavBar'\nimport {\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  Container,\n} from \"reactstrap\";\n\nfunction ScrollTransparentNavbar() {\n  const userInfo = useSelector(getUser)\n\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [navbarColor, setNavbarColor] = React.useState(\n    (document.documentElement.scrollTop > 499 || document.body.scrollTop) > 499\n      ? \"\"\n      : \" navbar-transparent\"\n  );\n\n  React.useEffect(() => {\n    const updateNavbarColor = () => {\n      if (\n        document.documentElement.scrollTop > 499 ||\n        document.body.scrollTop > 499\n      ) {\n        setNavbarColor(\"\");\n      } else if (\n        document.documentElement.scrollTop < 500 ||\n        document.body.scrollTop < 500\n      ) {\n        setNavbarColor(\" navbar-transparent\");\n      }\n    };\n    window.addEventListener(\"scroll\", updateNavbarColor);\n    return function cleanup() {\n      window.removeEventListener(\"scroll\", updateNavbarColor);\n    };\n  });\n  return (\n    <>\n      {collapseOpen ? (\n        <div\n          id=\"bodyClick\"\n          onClick={() => {\n            document.documentElement.classList.toggle(\"nav-open\");\n            setCollapseOpen(false);\n          }}\n        />\n      ) : null}\n      \n      <Navbar className={\"fixed-top \" + navbarColor} color=\"white\" expand=\"lg\">\n        <Container>\n          \n          <div className=\"navbar-translate\">\n            <NavbarBrand\n              tag={ Link } \n              to=\"/\"\n              id=\"navbar-brand\"\n            >\n              SkillsLounge\n            </NavbarBrand>\n          \n          <button\n              onClick={() => {\n                document.documentElement.classList.toggle(\"nav-open\");\n                setCollapseOpen(!collapseOpen);\n              }}\n              aria-expanded={collapseOpen}\n              className=\"navbar-toggler\"\n            >\n              <span className=\"navbar-toggler-bar top-bar\"></span>\n              <span className=\"navbar-toggler-bar middle-bar\"></span>\n              <span className=\"navbar-toggler-bar bottom-bar\"></span>\n            </button>\n            </div>\n          <Collapse\n            className=\"justify-content-end\"\n            isOpen={collapseOpen}\n            navbar\n          >\n              { userInfo.isAuthenticated ? <AuthUserNavBar /> : <NonAuthUserNavBar /> }\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default ScrollTransparentNavbar;\n","/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\n// core components\n\nfunction Footer() {\n  return (\n    <>\n      <footer className=\"footer\">\n        <Container>\n          <div className=\"copyright\" id=\"copyright\">\n            SkillsLounge © {new Date().getFullYear()}, Designed and Created by{\" \"}\n            <a\n              href=\"https://ecs.co.uk/digital-engineering\"\n              target=\"_blank\"\n            >\n              ECS\n            </a>\n          </div>\n        </Container>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n// Import components\nimport AboutUsHeader from \"components/Headers/AboutUsHeader.js\";\nimport ScrollTransparentNavbar from \"components/Navbars/ScrollTransparentNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\n\n// Import reactstrap components\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n} from \"reactstrap\";\n\nfunction Home() {\n  return (\n    <div className=\"landing-page\">\n      <ScrollTransparentNavbar />\n      <div className=\"wrapper\">\n        <AboutUsHeader />\n        <div className=\"features-8 section-image\">\n          <Col className=\"ml-auto mr-auto text-center\" md=\"8\">\n            <h2 className=\"title\">Feature rich training environments</h2>\n            <h4 className=\"description\">\n              <p>Whether you are trying to improve your skills in a particular programming language, or trying to master the latest products on the market, SkillsLounge gives you a training environment with all the learning materials and tools you need to make learning a breeze.\n              When you're done, SkillsLounge cleans it all up for you. No fuss, no muss.\n              </p>\n              <p>SkillsLounge makes learning fun and easy.</p>\n            </h4>\n          </Col>\n          <Container>\n            <Row>\n              <Col md=\"3\" className=\"d-flex align-items-stretch\">\n                <Card>\n                  <div className=\"card-image\">\n                    <img\n                      alt=\"...\"\n                      className=\"rounded\"\n                      style={{objectFit: \"cover\", height: \"20vh\", width: \"100%\"}}\n                      src={require(\"assets/img/hassle-free.jpg\")}\n                    ></img>\n                  </div>\n                  <div className=\"info text-center\">\n                    <div className=\"icon\">\n                      <i className=\"now-ui-icons objects_spaceship\"></i>\n                    </div>\n                    <h4 className=\"info-title\">Hassle Free</h4>\n                    <p className=\"description\">\n                    No installation steps neccessary.\nAll tools and dependencies are automatically provisioned.<br></br><br></br><br></br><br></br>\n                    </p>\n                  </div>\n                </Card>\n              </Col>\n              <Col md=\"3\" className=\"d-flex align-items-stretch\">\n                <Card>\n                  <div className=\"card-image\">\n                    <img\n                      alt=\"...\"\n                      className=\"rounded\"\n                      style={{objectFit: \"cover\", height: \"20vh\", width: \"100%\"}}\n                      src={require(\"assets/img/relevant_training.jpg\")}\n                    ></img>\n                  </div>\n                  <div className=\"info text-center\">\n                    <div className=\"icon\">\n                      <i className=\"now-ui-icons education_glasses\"></i>\n                    </div>\n                    <h4 className=\"info-title\">Relevant Training</h4>\n                    <p className=\"description\">\n                    Choose from a vast library of labs that have been specifically designed to guide you through scenarios that resemble real world challenges.\n                    </p><br></br>\n                  </div>\n                </Card>\n              </Col>\n              <Col md=\"3\" className=\"d-flex align-items-stretch\">\n                <Card>\n                  <div className=\"card-image\">\n                    <img\n                      alt=\"...\"\n                      className=\"rounded\"\n                      style={{objectFit: \"cover\", height: \"20vh\", width: \"100%\"}}\n                      src={require(\"assets/img/theia-screenshot.png\")}\n                    ></img>\n                  </div>\n                  <div className=\"info text-center\">\n                    <div className=\"icon\">\n                      <i className=\"now-ui-icons tech_tv\"></i>\n                    </div>\n                    <h4 className=\"info-title\">Enriched Workspace</h4>\n                    <p className=\"description\">\n                      SkillsLounge labs are provisioned with Eclipse Theia that supports a varity of plugins and programming languages that offers a more realstic, enriched, working environment.\n                    </p>\n                  </div>\n                </Card>\n              </Col>\n              <Col md=\"3\" className=\"d-flex align-items-stretch\">\n                <Card>\n                  <div className=\"card-image\">\n                    <img\n                      alt=\"...\"\n                      className=\"rounded\"\n                      style={{objectFit: \"cover\", height: \"20vh\", width: \"100%\"}}\n                      src={require(\"assets/img/self-paced.png\")}\n                    ></img>\n                  </div>\n                  <div className=\"info text-center\">\n                    <div className=\"icon\">\n                      <i className=\"now-ui-icons tech_watch-time\"></i>\n                    </div>\n                    <h4 className=\"info-title\">Self Paced Learning</h4>\n                    <p className=\"description\">\n                     Learn at a pace that is managable and convient for you.\n                    </p>\n                  </div>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <div className=\"about-description text-center pb-0\">\n          <div className=\"features-3 pt-0\">\n            <Container>\n              <Row>\n                <Col className=\"mr-auto ml-auto\" md=\"8\">\n                  <h2 className=\"title\">Technologies</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon icon-circle\">\n                    <i ><img alt=\"jenkins logo\" src={require(\"assets/img/logos/jenkins_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Jenkins</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"prometheus logo\" src={require(\"assets/img/logos/prometheus_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Prometheus</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                      <i ><img alt=\"docker logo\" src={require(\"assets/img/logos/docker.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Docker</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"ansible logo\" src={require(\"assets/img/logos/ansible_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Ansible</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"vault logo\" src={require(\"assets/img/logos/vault_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Vault</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"git logo\" src={require(\"assets/img/logos/git_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Git</h4>\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"grafana logo\" src={require(\"assets/img/logos/grafana_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Grafana</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"harbor logo\" src={require(\"assets/img/logos/harbor_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Harbor</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"snyk logo\" src={require(\"assets/img/logos/synk_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Snyk</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"sonaqube logo\" src={require(\"assets/img/logos/sonarqube_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">SonarQube</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon  icon-circle\">\n                    <i ><img alt=\"trivy logo\" src={require(\"assets/img/logos/trivy_logo.png\")} className=\"p-4\"></img></i>\n                    </div>\n                    <h4 className=\"info-title\">Trivy</h4>\n                  </div>\n                </Col>\n                <Col md=\"2\">\n                  <div className=\"info info-hover\">\n                    <div className=\"icon icon-circle\">\n                      <i className=\"now-ui-icons design_bullet-list-67\"></i>\n                    </div>\n                    <h4 className=\"info-title\">... and more</h4>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export const querystring = (name, url) => {\n    name = name.replace(/[[]]/g, \"\\\\$&\")\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\")\n    const results = regex.exec(url)\n    if (!results) return null\n    if (!results[2]) return ''\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"))\n}\n\nexport const apiFnc = async (fnc, header, msg, setApiError, setShowError) => {\n    try {\n        await fnc\n    } catch (error) {\n        setApiError({ header: header, message: msg, data: error})\n        console.error(error)\n        setShowError(true)\n    }\n}\n\nexport const arrayFormatter = (cell) => {\n    if (cell !== undefined ) {\n        try {\n            return cell.map(a => a.value).sort().join(',')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport const surroundWithProgressTrackingPromise = (initial, maximum, interval, step = 1, setCurrent, promise, exitOnReachingMaximum = false) => new Promise((resolve, reject) => {\n    let progress = initial\n    const intervalID = setInterval(() => {\n        if (progress < maximum) {\n            progress = progress + step\n            if (progress > maximum)\n                progress = maximum\n            setCurrent(progress)\n        } else {\n            clearInterval(intervalID)\n            if (exitOnReachingMaximum)\n                reject(new Error('Timeout reached with the promise/s unsolved'))\n        }\n    }, interval)\n    promise\n        .then(value => resolve(value))\n        .catch(reason => reject(reason))\n        .finally(async () => {\n            clearInterval(intervalID)\n        })\n})\n","import { Storage, API } from 'aws-amplify'\n\nexport const s3UploadText = async (folder, file, text) => {\n  const filename = `${folder}/${file.toLowerCase()}`\n  const stored = await Storage.put(filename, text)\n  console.log(\"stored key\", stored)\n  return stored.key\n}\n\nexport const s3Upload = async (folder, file, type) => {\n  const filename = `${folder}/${file.name.toLowerCase()}`\n  console.log(filename)\n  const stored = await Storage.put(filename, file, { contentType: type, ACL: \"public-read\" })\n  console.log(\"stored key\", stored)\n  return stored.key\n}\n\nexport const s3Download = async folder => await Storage.get(`${folder}/readme.md`, { download: true, cacheControl: 'no-cache' })\n\nexport const getUserSession = async (userId) => {\n  let sessions = await API.get(\"dpg-v2\", \"/v1/self/labs/sessions\")\n  \n  // Convert iso 8601 timestamp to unixtime milliseconds\n  // Move this to server side or stick to key 0\n  sessions.forEach(function (session, index) {\n    let startDateTime = new Date(session['startDateTime'])\n    session['startDateTime'] = startDateTime.getTime()\n    sessions[index] = session\n  })\n\n  return sessions[0]\n}\n\nexport const getLabStatus = function(labUuid) {\n  let UserSession = getUserSession()\n  return UserSession\n}\n\nexport const getSfnStatus = (sfnExecutionArn) => API.get(\"dpg\", `/api/v2/status/sfn/${sfnExecutionArn}`)\n\nexport const getUsers = () => API.get(\"dpg\", \"/api/v2/users\")\n\n\nexport const deleteSession = sessionUuid => API.del(\"dpg-v2\", `/v1/self/labs/sessions/${sessionUuid}`)\n\nexport const getGroups = () => API.get(\"dpg\", \"/groups\")\n\nexport const createGroup = async json => {\n  return await API.post(\"dpg\", \"/groups\", {\n    body: {\n      action: 'create',\n      groupName: json.groupName,\n      description: json.groupDescription\n    }\n  })\n}\n\nexport const deleteGroup = async json => {\n  return await API.post(\"dpg\", \"/groups\", {\n    body: {\n      action: 'delete',\n      groupName: json.groupName\n    }\n  })\n}\n\nexport const deleteS3Folder = async (folder) => (await Storage.list(folder)).forEach(element => Storage.remove(element.key))\n\nexport const getAPILabs = () => API.get(\"dpg-v2\", \"/v1/labs\")\n\nexport const delLabId = async id => await API.del(\"dpg-v2\", `/v1/labs/${id}`, {})\n\nexport const getLabId = async id => await API.get(\"dpg-v2\", `/v1/labs/${id}`)\n\nexport const addLab = async json => { console.log(json); delete json.uuid; await API.post(\"dpg-v2\", '/v1/labs', { body: json }) }\n\nexport const updateLab = async (labDefinition) => {\n  let labUuid = labDefinition.uuid;\n  // The api will populate this now\n  delete labDefinition.uuid;\n  delete labDefinition.createdDateTime;\n  return await API.put(\"dpg-v2\", `/v1/labs/${labUuid}`, { body: labDefinition })\n}\n\nexport const getAchievementsId = async id => API.get(\"dpg\", `/api/v2/achievements/${id}`)\n\nexport const createSession = json => {\n  return API.post(\"dpg-v2\", \"/v1/self/labs/sessions\", {\n    body: {\n      labUuid: json.labId,\n    }\n  })\n}\n\nexport const updateUserSettings = async json => {\n  let header = {\n    \"Access-Control-Allow-Origin\": '*'\n  }\n  return await API.put(\"dpg\", `/api/v2/users/${json.userId}`, {\n    header: header,\n    body: json\n  })\n}\n","import { s3Upload, getAPILabs, delLabId, deleteSession, deleteS3Folder, getSfnStatus, getLabStatus, getUserSession } from './aws'\nimport { setReduxSession, setIsLabRunning } from '../redux/slices/sessionSlice'\nimport { setLabs, setIsLoaded } from '../redux/slices/labsSlice'\nimport JSZip from 'jszip'\n\n// Calls session_destroy_step_function\nexport const destroyLabSession = async (dispatch, LabSessionId) => {\n  deleteSession(LabSessionId)\n  if (dispatch !== null)\n    dispatch(setReduxSession({ session: {}, isLabActive: false, isLabRunning: false, isALBRunning: false, remainingMins: 0, readme: '', currentSlide: 1 }))\n}\n\nexport const refreshListOfLabs = async (dispatch, userGroups) => {\n  let defaultGroup = \"devopsplayground\";\n  await getAPILabs()\n    .then((labs) => {\n      // For some reason usergroups can be a string or an array apparently or undefined (...)\n      // TODO: HANDLE THIS !\n      if (userGroups !== undefined) {\n        if (userGroups.includes(\"Admin\") || userGroups ===\"Admin\") {\n          dispatch(setLabs(labs))\n        } else {\n          let groups = [...userGroups];\n          if (\n            (groups.length === 1 && groups.includes(\"Developer\"))\n            || (groups === \"Developer\")\n            || (groups.length === 0)) {\n            groups.push(defaultGroup);\n          }\n          let filteredLab = labs.filter(function (lab) {\n            let labType = lab.types.filter(type => {\n              for (let idx in groups) {\n                if (type.value === groups[idx]) {\n                  return true\n                }\n              }\n              return false\n            })\n            if (labType.length > 0) {\n              return lab;\n            }\n            else\n              return null;\n          });\n          dispatch(setLabs(filteredLab))\n        }\n      }\n      dispatch(setIsLoaded(true))\n    })\n}\n\nexport const deleteLab = async (dispatch, uuid, labName) => {\n  if (window.confirm(\"Are you sure you want to delete '\" + labName.toString() + \"' ?\")) {\n    await delLabId(uuid)\n    await deleteS3Folder(uuid)\n    await refreshListOfLabs(dispatch)\n  }\n}\n\nexport const processZip = async (folder, file) => {\n  let new_zip = new JSZip()\n  new_zip.loadAsync(file)\n    .then(async function (zip) {\n      zip.forEach(function (file) {\n        let type = 'text/markdown'\n        if (file.includes('.png')) type = 'image/png'\n        if (file.includes('.jpg')) type = 'image/jpg'\n        if (file.includes('.gif')) type = 'image/gif'\n        zip.files[file].async('blob')\n          .then(fileData => s3Upload(folder, new File([fileData], file), type))\n      })\n    })\n}\n\nexport const checkZipFile = async file => {\n  let retVal = false\n  await new JSZip().loadAsync(file.current)\n    .then(zip => {\n      if (zip.filter(file => file.toLowerCase() === 'readme.md').length > 0) retVal = true\n    })\n    .catch(err => {\n      console.error(\"zipAsync Error:\", err)\n      retVal = false\n    })\n  return retVal\n}\n\n// Check the status of a task to ensure it is running\nexport const checkTaskStatus = async (taskExecutionArn, dispatch) => {\n  for (let i = 0; i < 30; i++) {\n    let taskInfo = (await getLabStatus(taskExecutionArn))\n    let status = taskInfo.tasks[0]['lastStatus']\n\n    if (status === \"RUNNING\") {\n      dispatch(setIsLabRunning(true))\n      return\n    } else if (status === \"FAILED\") {\n      console.log(taskInfo)\n      throw new Error('Task failed to start');\n    }\n    await new Promise(resolve => setTimeout(resolve, 5000))\n  }\n}\n\n\n// Check a step function status/execution result\nexport const checkSfnStatus = async (sfnExecutionArn, dispatch) => {\n  for (let i = 0; i < 30; i++) {\n    let status = (await getSfnStatus(sfnExecutionArn)).status\n    if (status === \"SUCCEEDED\") {\n      dispatch(setIsLabRunning(true))\n      return\n    } else if (status === \"FAILED\") {\n      throw new Error('Task failed to start');\n    }\n    await new Promise(resolve => setTimeout(resolve, 5000))\n  }\n}\n\n// Check a step function status/execution result\nexport const checkLabSessionStatus = async (dispatch) => {\n  for (let i = 0; i < 30; i++) {\n    let userSession = await getUserSession()\n    let status = userSession.status\n    if (status === \"CREATE_COMPLETE\") {\n      dispatch(setIsLabRunning(true))\n      return\n    } else if (status.includes(\"FAILED\")) {\n      throw new Error('Lab failed to start');\n    }\n    await new Promise(resolve => setTimeout(resolve, 5000))\n  }\n}\n","export const pagination = {\n    showTotal: true,\n};\n","import React from 'react'\n\nimport { Modal, Button } from 'react-bootstrap'\n\nconst AlertModal = props =>\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          { props.err ? props.err.header : '' }\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          { props.err ? props.err.message : '' }\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={ props.onHide }>Close</Button>\n      </Modal.Footer>\n    </Modal>\n\nexport default AlertModal\n","import React from 'react'\n\nimport { Modal, ModalHeader, ModalBody, Progress } from 'reactstrap'\n\nconst LoadingModal = (props) => (\n  <Modal isOpen={props.dpgLoading}>\n    <ModalHeader>Labs Setup</ModalHeader>\n    <ModalBody className=\"mb-3\">\n      <div className=\"progress-container\">\n        <Progress max=\"100\" value={props.pbValue}>\n          <span className=\"progress-value\" style={{fontSize: \"10px\"}}>{props.pbValue}%</span>\n        </Progress>\n      </div>\n    </ModalBody>\n  </Modal>\n);\n\n\nexport default LoadingModal\n","import { getUserSession } from './aws'\nimport { setReduxSession, setIsLoaded } from '../redux/slices/sessionSlice'\nimport sessionDataObject from './data/session'\n\nexport const setSessionData = (dispatch, session) => dispatch(setReduxSession(sessionDataObject(session)))\n\nexport const loadSession = async (dispatch, userUuid) => {\n    const session = await getUserSession(userUuid)\n    if (session !== undefined) {\n        setSessionData(dispatch, session)\n    } else {\n        dispatch(setIsLoaded(true));\n    }\n    \n}\n","export default function (session) {\n  return {\n    session: {\n      uuid: session.uuid,\n      // taskId: session.taskId,\n      labId: session.labMeta.labId,\n      // userUuid: session.userUuid,\n      labName: session.labMeta.labName,\n      startDateTime: session.startDateTime,\n      createDateTime: session.startDateTime,\n      // Not needed anymore\n      // containerDefinition: session.containerDefinition,\n      timer: session.labMeta.timer,\n      ide: session.labMeta.ide,\n      shell: session.labMeta.shell,\n      basePorts: session.labMeta.basePorts,\n      cDef: session.labMeta.cDef,\n      // TODO: api v2 not sending it for now\n      achievements: false,\n      achievementsId: session.achievmentsId,\n      // TODO: api v2 not sending it for now\n      achievementsDebug: false\n    },\n    isLabActive: true,\n    isLabRunning: false,\n    isLoaded: true,\n    remainingMins: 0,\n    readme: \"\",\n    currentSlide: 1,\n  };\n}\n","import axios from 'axios'\n\nexport const isStatusAServerError = statusCode => (statusCode && statusCode >= 500) ? true : false\n\nexport const isUrlAvailable = async url => {\n    let result\n    try {\n        let response = await axios.get(url)\n        response && !isStatusAServerError(response.status) ? result = true : result = false\n    } catch(e) {\n        !isStatusAServerError(e.request.status) ? result = true : result = false\n    }\n    return result\n}\n\nexport const isUrl200 = async url => {\n    let result = false\n    try {\n        let response = await axios.get(url)\n        response && response.status === 200 ? result = true : result = false\n    } catch(e) {}\n    return result\n}\n\nexport const checkUntilUrlIsAvailable = url => new Promise(resolve => {\n    const intervalID = setInterval(async () => {\n        if (await isUrl200(url)) {\n            clearInterval(intervalID)\n            resolve(true)\n        }\n    }, 10000)\n})\n","import { createSession, getUserSession } from '../utils/aws'\nimport { checkLabSessionStatus } from '../utils/lab'\nimport { setSessionData } from '../utils/session'\nimport { surroundWithProgressTrackingPromise } from '../utils'\nimport { checkUntilUrlIsAvailable } from '../utils/http'\n\nconst run = async (item, userUuid, setPbValue, dispatch, setDpgLoading, setApiError, setShowError, history) => {\n    \n    let sessionData = {\n        labId: item.uuid,\n        labName: item.labName,\n        containerDefinition: item.containerDefinition,\n        timer: item.timer,\n        startDateTime: Date.now(),\n        userUuid: userUuid,\n        ide: item.ide,\n        shell: item.shell,\n        basePorts: item.basePorts\n    }\n\n    const wettyAndTheiaCheckPromise = async (sessionData) => {\n        let wettyURL = `https://${sessionData.uuid}-9998.sessions.${process.env.REACT_APP_URL}/`\n        let theiaURL = `https://${sessionData.uuid}-9999.sessions.${process.env.REACT_APP_URL}/`\n\n        const promises = []\n        if (sessionData.ide) promises.push(checkUntilUrlIsAvailable(wettyURL))\n        if (sessionData.shell) promises.push(checkUntilUrlIsAvailable(theiaURL))\n        return surroundWithProgressTrackingPromise(80, 100, 20000, 1, setPbValue, Promise.all(promises), true)\n    }\n\n    const statusCheckPromise = sessionUuid =>\n        // surroundWithProgressTrackingPromise(0, 80, 1800, 1, setPbValue, checkSfnStatus(sessionUuid, dispatch))\n        surroundWithProgressTrackingPromise(0, 80, 4000, 1, setPbValue, checkLabSessionStatus(dispatch)\n        )\n\n    const onError = error => {\n        setDpgLoading(false)\n        setPbValue(0)\n        setApiError({\n            header: 'Problem with Start Labs',\n            message: 'There is some problems with starting Lab, please refresh page or try it later.',\n            data: error\n        })\n        console.error(error)\n        setShowError(true)\n    }\n\n    const setProgressValueWithPause = (value, pauseInSeconds) => {\n        setPbValue(value)\n        return new Promise(resolve => setTimeout(resolve, pauseInSeconds * 1000))\n    }\n\n    try {\n        setPbValue(0)\n\n        await createSession(sessionData)\n\n        try {\n            // Check for the task to finish provisioning\n            await statusCheckPromise() \n            \n            // refresh sessionData with new created lab data\n            sessionData = await getUserSession(userUuid);\n\n            setSessionData(dispatch, sessionData)\n            await setProgressValueWithPause(80, 1.5)          \n\n            // Wait for IDE and terminal to come up\n            await wettyAndTheiaCheckPromise(sessionData)\n            history.push(\"/sandbox\")\n            setDpgLoading(false)\n            setPbValue(0)\n        } catch (e) {\n            onError(e)\n        }\n    } catch (e) {\n        onError(e)\n    }\n}\n\nexport const task = { run }","const isAdminOrDeveloper = (userInfo, labData) => {\n    if (userInfo.userAdmin) {\n        return true\n    } else {\n        if (userInfo.userGroups && userInfo.userGroups.includes('Developer') && labData.userUuid === userInfo.userUuid) {\n            return true\n        }\n    }\n    return false\n}\n\nexport const user = { isAdminOrDeveloper }\n","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUser } from '../redux/slices/userSlice'\n\nimport { Button, Container } from 'react-bootstrap'\n\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { ChevronRightIcon, GearIcon, XCircleIcon } from '@primer/octicons-react'\n\nimport { task } from '../model/task'\nimport { user } from '../model/user'\n\nimport { delLabId } from \"../utils/aws\"\n\nconst ActionButtons = props => {\n\n    // DestroySessionModal states\n    const userInfo = useSelector(getUser)\n\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n\n    const labActive = props.dataSession !== undefined ? props.dataSession.isLabActive : false\n\n    return (\n        <Container className=\"p-0\" style={{ textAlign: 'center' }}>\n            <Button variant=\"outline-success\" disabled={labActive} onClick={() => { props.setDpgLoading(true); task.run(props.row, userInfo.userUuid, props.setPbValue, dispatch, props.setDpgLoading, props.setApiError, props.setShowError, history) }}>\n                <ChevronRightIcon />\n            </Button>\n            { user.isAdminOrDeveloper(userInfo, props.row) ? <>\n                <Button variant=\"outline-warning\" className=\"mx-3\" as={Link} to={`/edititem/${props.row.uuid}`} >\n                    <GearIcon />\n                </Button>\n                <Button color=\"danger\" onClick={() => {delLabId(props.row.uuid); window.location.reload(false);}}>\n                    <XCircleIcon /> Delete Lab\n        </Button>\n                {/* <Button variant=\"outline-danger\"onClick={ () => {\n                            apiFnc(deleteLab(dispatch,props.row.uuid,props.row.labName),\n                                'Problem with Deleting Lab',\n                                'There is some problems with Delete Lab, please refresh page or try it later.',\n                                props.setApiError,\n                                props.setShowError)}}>\n                            <XCircleIcon/>\n                        </Button> */}\n            </> : null\n            }\n        </Container>\n    )\n}\n\nexport default ActionButtons\n","\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { apiFnc } from '../utils'\nimport { destroyLabSession } from '../utils/lab'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\n\nexport const DestroySessionModal = props => {\n  const dispatch = useDispatch()\n\n  return (\n    <Modal isOpen={props.show} toggle={props.handleClose}>\n      <ModalHeader toggle={props.handleClose}>End this lab ?</ModalHeader>\n      <ModalBody>Are you sure you want to end your current lab?</ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={props.handleClose}>\n          Cancel\n        </Button>\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            apiFnc(destroyLabSession(dispatch, props.sessionInfo.session.uuid));\n            if (props.history) {\n              props.history.push(props.history_path);\n            }\n          }}\n        >\n          Yes\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\nexport default DestroySessionModal\n","export const categoryOptions = [\n    { value: 'containerisation', label: 'Containerisation' },\n    { value: 'infrastructureascode', label: 'Infrastructure-as-Code' },\n    { value: 'configmanagement', label: 'Config Management' },\n    { value: 'sourcecontrol', label: 'Source Control' },\n    { value: 'cloud', label: 'Cloud' },\n    { value: 'monitoring', label: 'Monitoring' },\n    { value: 'database', label: 'Database' },\n    { value: 'testing', label: 'Testing' },\n    { value: 'security', label: 'Security' },\n    { value: 'continuousintegration', label: 'Continuous Integration' },\n    { value: 'releasemanagement', label: 'Release Management' },\n    { value: 'serverless', label: 'Serverless' },\n    { value: 'artifactmanagement', label: 'Artifact Management' },\n    { value: 'programming', label: 'Programming' },\n    { value: 'scripting', label: 'Scripting' },\n]\n\nexport const resourceOptions = [\n    { value:'256:512', label:'256 / 512 : (vCPU; units) / (Memory; MiB)' },\n    { value:'256:1024', label:'256 / 1024 : (vCPU; units) / (Memory; MiB)' },\n    { value:'256:2048', label:'256 / 2048 : (vCPU; units) / (Memory; MiB)' },\n    { value:'512:1024', label:'512 / 1024 : (vCPU; units) / (Memory; MiB)' },\n    { value:'512:2048', label:'512 / 2048 : (vCPU; units) / (Memory; MiB)' },\n    { value:'512:3072', label:'512 / 3072 : (vCPU; units) / (Memory; MiB)' },\n    { value:'1024:2048', label:'1024 / 2048 : (vCPU; units) / (Memory; MiB)' },\n    { value:'1024:3072', label:'1024 / 3072 : (vCPU; units) / (Memory; MiB)' }\n]\n\nexport const timerOptions = [\n    { value: '30', label: '30 minutes' },\n    { value: '60', label: '60 minutes' },\n    { value: '90', label: '90 minutes' },\n    { value: '120', label: '120 minutes' },\n    { value: '150', label: '150 minutes' },\n    { value: '180', label: '180 minutes' }\n]\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/slices/userSlice\";\nimport { getSession } from \"../redux/slices/sessionSlice\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Container,\n  Form,\n  FormGroup,\n  Label,\n} from \"reactstrap\";\nimport { Input } from \"reactstrap\";\nimport { Search } from \"react-bootstrap-table2-toolkit\";\n\nimport { PlusCircleIcon, SyncIcon, XCircleIcon } from \"@primer/octicons-react\";\n\nimport Select from \"react-select\";\n\nimport { apiFnc } from \"../utils\";\nimport DestroySessionModal from \"../components/DestroySessionModal\";\nimport { refreshListOfLabs } from \"../utils/lab\";\nimport { categoryOptions } from \"../utils/constants/categoryOptions\";\n\nconst FilterSideBar = (props) => {\n  const sessionInfo = useSelector(getSession);\n  const userInfo = useSelector(getUser);\n\n  const dispatch = useDispatch();\n\n  const { SearchBar } = Search;\n  const labActive =\n    props.dataSession !== undefined ? props.dataSession.isLabActive : false;\n\n  const [setShowError] = useState(false);\n  const [setApiError] = useState({});\n\n  // DestroySessionModal states\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <Container className=\"p-0\">\n      {userInfo.userAdmin || userInfo.userGroups.includes(\"Developer\") ? (\n        <Button\n          className=\"mb-3\"\n          color=\"success\"\n          block\n          tag={Link}\n          to={`/additem`}\n        >\n          <PlusCircleIcon /> New Lab\n        </Button>\n      ) : null}\n      <ButtonGroup className=\"d-flex\" aria-label=\"Basic 2\">\n        <Button\n          variant=\"primary\"\n          onClick={async () => {\n            await apiFnc(\n              refreshListOfLabs(dispatch),\n              \"Problem with Loading Labs\",\n              \"Loading Labs Table failed, please refresh page or try again later.\",\n              setApiError,\n              setShowError\n            );\n          }}\n        >\n          <SyncIcon /> Refresh\n        </Button>\n        <Button color=\"danger\" disabled={!labActive} onClick={handleShow}>\n          <XCircleIcon /> End Lab\n        </Button>\n      </ButtonGroup>\n      <hr />\n      <Container fluid className=\"p-0\" aria-label=\"Basic example\">\n        <SearchBar\n          className=\"form-control-lg\"\n          {...props.tableProps.searchProps}\n        />\n      </Container>\n      <hr />\n      <Form>\n        <FormGroup controlid=\"exampleForm.ControlSelect2\">\n          <Label>Category</Label>\n          <Select\n            isMulti\n            className=\"react-select\"\n            classNamePrefix=\"react-select\"\n            options={categoryOptions}\n            closeMenuOnSelect={false}\n            onChange={props.selectCategories}\n          />\n        </FormGroup>\n        <FormGroup controlid=\"exampleForm.ControlSelect2\">\n          <Label>Content Type</Label>\n          <Select\n            isMulti\n            className=\"react-select\"\n            classNamePrefix=\"react-select\"\n            options={props.types}\n            closeMenuOnSelect={false}\n            onChange={props.selectTypes}\n          />\n        </FormGroup>\n        <hr />\n        {userInfo.userAdmin ? (\n          <FormGroup check>\n            <Label check>\n              <Input\n                type=\"checkbox\"\n                defaultChecked={props.activeFilter}\n                onChange={props.activeClicks}\n              ></Input>\n              <span className=\"form-check-sign\"></span>\n              Active?\n            </Label>\n          </FormGroup>\n        ) : null}\n        <FormGroup check>\n          <Label check>\n            <Input type=\"checkbox\" onChange={props.newClicks}></Input>\n            <span className=\"form-check-sign\"></span>\n            New?\n          </Label>\n        </FormGroup>\n      </Form>\n      <DestroySessionModal\n        sessionInfo={sessionInfo}\n        show={show}\n        handleClose={handleClose}\n      />\n    </Container>\n  );\n};\n\nexport default FilterSideBar;\n","import React from 'react'\n\nimport { Container, Spinner } from 'react-bootstrap'\n\nconst NoDataIndication = () => (\n    <Container className=\"text-center\"> \n      <Spinner animation=\"grow\" /> \n      <Spinner animation=\"grow\" /> \n      <Spinner animation=\"grow\" />\n    </Container>\n  )\n\nexport default NoDataIndication\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport { getUser } from 'redux/slices/userSlice'\n\nimport AuthUserNavBar from 'components/AuthUserNavBar'\nimport NonAuthUserNavBar from 'components/NonAuthUserNavBar'\n\n// reactstrap components\nimport {\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  Container,\n} from \"reactstrap\";\n\nfunction FixedWhiteNavbar() {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n\n  const userInfo = useSelector(getUser)\n\n  return (\n    <>\n      {collapseOpen ? (\n        <div\n          id=\"bodyClick\"\n          onClick={() => {\n            document.documentElement.classList.toggle(\"nav-open\");\n            setCollapseOpen(false);\n          }}\n        />\n      ) : null}\n      <Navbar className=\"bg-white  mb-0\" expand=\"lg\">\n        <Container>\n          \n          <div className=\"navbar-translate\">\n            <NavbarBrand\n              tag={ Link } \n              to=\"/\"\n              id=\"navbar-brand\"\n            >\n              SkillsLounge\n            </NavbarBrand>\n          </div>\n          <Collapse\n            className=\"justify-content-end\"\n            isOpen={collapseOpen}\n            navbar\n          >\n              { userInfo.isAuthenticated ? <AuthUserNavBar /> : <NonAuthUserNavBar /> }\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default FixedWhiteNavbar;\n","import React, { useState, useEffect } from \"react\";\n\n// Import redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getLabs } from \"../redux/slices/labsSlice\";\nimport { getSession } from \"../redux/slices/sessionSlice\";\nimport { getUser } from '../redux/slices/userSlice'\n\n// Import utils\nimport { apiFnc } from '../utils'\nimport { refreshListOfLabs } from '../utils/lab'\nimport { getGroups } from '../utils/aws'\nimport { pagination } from '../utils/constants/tableOptions'\n\n// Import components \nimport AlertModal from \"../components/AlertModal\";\nimport LoadingModal from \"../components/LoadingModal\";\nimport ActionButtons from \"../components/ActionButtons\";\nimport FilterSideBar from \"../components/FilterSideBar\";\nimport NoDataIndication from \"../components/NoDataIndication\";\nimport FixedWhiteNavbar from \"components/Navbars/FixedWhiteNavbar.js\";\n\n// Import reactstrap\nimport { Container, Row, Col, Badge, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\n// Import table components\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport filterFactory, { textFilter, numberFilter, Comparator } from \"react-bootstrap-table2-filter\";\n\n// Import CSS\nimport \"./Labs.css\";\n\nconst Labs = () => {\n  \n  const [ pbValue, setPbValue ] = useState(0)\n  const [ dpgLoading, setDpgLoading ] = useState(false)\n  const [ apiError, setApiError ] = useState({})\n  const [ showError, setShowError ] = useState(false)\n  const [ groups, setGroups ] = useState([])\n\n  const sessionInfo = useSelector(getSession)\n  const labsInfo = useSelector(getLabs)\n  const userInfo = useSelector(getUser)\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const groupFilter = (data) => {\n      let grps = []\n      data = data.filter(item => item.GroupName !== \"Admin\" );\n      data = data.filter(item => item.GroupName !== \"Developer\" );\n      if (userInfo.userGroups.length === 0 || (userInfo.userGroups.length === 1 && userInfo.userGroups.includes(\"Developer\")) ) {\n        data = data.filter(item => item.GroupName === \"devopsplayground\" );\n      }else if(userInfo.userGroups.includes(\"Admin\")){\n        // nothing to do in Admin\n      } else {\n        data = data.filter(({GroupName: id1}) => userInfo.userGroups.some((item) => item === id1));\n      }\n      data.map(item => grps.push({value:item.GroupName, label:item.Description}))\n      setGroups(grps)\n    }\n\n    const onLoad = async () => \n      await Promise.all([ \n        getGroups().then((groups) => groupFilter(groups)),\n        apiFnc(\n        refreshListOfLabs(dispatch, userInfo.userGroups),\n        'Problem with Loading Labs','Loading Labs Table failed, please refresh page or try again later.',\n        setApiError,\n        setShowError) \n      ]);\n    onLoad()\n  },[dispatch, userInfo.userGroups])\n\n  const newBadgeFormatter = (cell, row) => {\n    if (Date.now() - row.createdDateTime < 604800000) {\n      return (\n        <div>\n          {cell}{\" \"}\n          <Badge color=\"primary\">\n            New\n          </Badge>\n        </div>\n      );\n    } else {\n      return cell;\n\n    }\n  };\n\n  const activeClicks = (event, activeFilter) =>\n    activeFilter(event.target.checked);\n\n  const selectTypes = (event, typeFilter) =>\n    typeFilter(\n      event !== null\n        ? event\n            .map((a) => a.value)\n            .sort()\n            .join(\",\")\n        : \"\"\n    );\n\n  const selectCategories = (event, categoriesFilter) =>\n    categoriesFilter(\n      event !== null\n        ? event\n            .map((a) => a.value)\n            .sort()\n            .join(\",\")\n        : \"\"\n    );\n\n  const newClicks = (event, createdDateTimeFilter) => {\n    if (event.target.checked) {\n      createdDateTimeFilter({\n        number: Date.now() - 604800000,\n        comparator: Comparator.GT,\n      });\n    } else {\n      createdDateTimeFilter({});\n    }\n  };\n\n  const LabsTable = (props) => {\n    const arrayFormatter = (cell, row) => {\n      if (cell !== undefined) {\n        try {\n          return cell\n            .map((a) => a.value)\n            .sort()\n            .join(\",\");\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    const sessionList = props.sessionList;\n\n    let activeFilter = \"true\";\n    let categoriesFilter;\n    let typeFilter;\n    let createdDateTimeFilter;\n\n    const columns = [\n      { text: 'Name', dataField: 'labName', sort:true, style: {verticalAlign: 'middle'}, formatter: newBadgeFormatter },\n      { text: 'Active', dataField: 'active', headerStyle: (column, colIndex) => ({ width: 0 , 'display': 'none' }),\n          style: { 'display': 'none' }, filter: textFilter({getFilter: (filter) => {activeFilter = filter}, style: {'display': 'none','height':'20px'}, defaultValue: activeFilter})},\n      { text: 'Created', dataField: 'createdDateTime', headerStyle: (column, colIndex) => ({ width: 0 , 'display': 'none' }),\n          style: { 'display': 'none' }, filter: numberFilter({ getFilter: filter => { createdDateTimeFilter = filter }, style: { 'display': 'none', 'height': '20px' }})},\n      { text: 'Categories', dataField: 'categories', headerStyle: (column, colIndex) => ({ width: 0 , 'display': 'none' }),\n        style: { 'display': 'none' }, filterValue: arrayFormatter, formatter: arrayFormatter,\n        filter: textFilter({ getFilter: filter => { categoriesFilter = filter }, style: { 'display': 'none','height':'20px' }})},\n      { text: 'Type', dataField: 'types', headerStyle: (column, colIndex) => ({ width: 0 , 'display': 'none'}),\n        style: { 'display': 'none'}, filterValue: arrayFormatter, formatter: arrayFormatter,\n        filter: textFilter({ getFilter: filter => { typeFilter = filter }, style: { 'display': 'none','height':'20px' }})},\n      { text: 'Actions', dataField: 'df1', style: {'whiteSpace': 'nowrap', width: '5%'}, headerStyle: (colum, colIndex) => {return { width: '5%', textAlign: 'left', whiteSpace: 'nowrap' };}, isDummyField: true, sort: false,\n        formatter: (cellContent, row) => <ActionButtons row={row} dataSession={sessionList} setDpgLoading={setDpgLoading} setPbValue={setPbValue} setApiError={setApiError} setShowError={setShowError} userInfo={userInfo} />}\n    ]\n\n    const selectRow = { mode: 'radio', style: { backgroundColor: '#c8e6c9' }, hideSelectColumn: true, selected: [ sessionList.session.labName ]}\n\n      return (\n          <ToolkitProvider keyField='uuid' data={props.labs.data} bootstrap4 search columns={columns}>\n            {\n              tableProps => (\n                  <Container className=\"m-0 mt-3\" fluid>\n                    <Row>\n                      <Col sm={5} md={6} lg={2}>\n                        <FilterSideBar\n                            types={groups}\n                            tableProps={tableProps}\n                            activeFilter={activeFilter}\n                            activeClicks={(event) => activeClicks(event, activeFilter)}\n                            newClicks={(event) => newClicks(event, createdDateTimeFilter)}\n                            selectCategories={(event) => selectCategories(event, categoriesFilter)}\n                            selectTypes={(event) => selectTypes(event, typeFilter)}\n                            dataSession={sessionList}\n                            userInfo={userInfo}\n                        />\n                      </Col>\n                      <Col sm={7} md={6} lg={10} >\n                        <BootstrapTable { ...tableProps.baseProps } \n                          key={sessionList.session.uuid} \n                          pagination={ paginationFactory(pagination) } \n                          filter={ filterFactory() } \n                          selectRow={ selectRow }       \n                          noDataIndication={ () =>\n                            labsInfo.isLoaded\n                            ? <Container>No data found!</Container>\n                            : <NoDataIndication /> \n                          }\n                        />\n                      </Col>\n                    </Row>\n                  </Container>\n              )\n            }\n          </ToolkitProvider>\n      )\n  }\n\n  return (\n    <>\n      <FixedWhiteNavbar />\n      <Container className=\"px-0\" fluid>\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <a href=\"/\">Home</a>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>Labs</BreadcrumbItem>\n      </Breadcrumb>\n        <LoadingModal dpgLoading={dpgLoading} pbValue={pbValue} />\n        <LabsTable labs={labsInfo} sessionList={sessionInfo} />\n        {apiError !== {} ? (\n          <AlertModal\n            err={apiError}\n            show={showError}\n            onHide={() => {\n              setShowError(false);\n              setApiError({});\n            }}\n          />\n        ) : null}\n      </Container>\n    </>\n  );\n};\n\nexport default Labs;\n","export default {\n    MAX_ATTACHMENT_SIZE:20000000,\n    s3: {\n        BUCKET: process.env.REACT_APP_S3_BUCKET_NAME,\n        REGION: process.env.REACT_APP_S3_DEFAULT_REGION\n    },\n    apiGateway: {\n        REGION: process.env.REACT_APP_AWS_DEFAULT_REGION,\n        URL: process.env.REACT_APP_GATEWAY_URL,\n        X_API_KEY: process.env.REACT_APP_GATEWAY_KEY\n    },\n    slsApi: {\n        URL: \"https://api-dev.skillslounge.io\"\n    },\n    cognito: {\n        REGION: process.env.REACT_APP_COGNITO_AWS_DEFAULT_REGION,\n        USER_POOL_ID: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n        APP_CLIENT_ID: process.env.REACT_APP_COGNITO_APP_CLIENT_ID,\n        IDENTITY_POOL_ID: process.env.REACT_APP_COGNITO_IDENTITY_POOL_ID\n    },\n    CLUSTER_NAME: process.env.REACT_APP_ECS_CLUSTER_NAME,\n    SUBNET: process.env.REACT_APP_ECS_SUBNET,\n    ZONEID: process.env.REACT_APP_ROUTE53_ZONEID,\n    CAPTCHA_SITE_KEY: process.env.REACT_APP_CAPTCHA_SITE_KEY\n};\n\n","import * as Yup from \"yup\";\n\nexport const yupRegistrationSchema = (props) => Yup.object().shape({\n    name: Yup.string()\n      .min(2, \"Names must have at least 2 characters\")\n      .max(30, \"Names can't be longer than 100 characters\")\n      .required(\"Name is required\"),\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Must be a valid email\"),\n    password: Yup.string()\n      .required('Password is required')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      ),\n    passwordConfirmation: Yup.string()\n        .required('Confirm password is required')\n        .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n    tos: Yup.bool()\n      .oneOf([true], \"Agree to terms and conditions\"),\n  });\n\n  export const yupLoginSchema = (props) => Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Must be a valid email\"),\n    password: Yup.string()\n      .required('Password is required')\n  });\n\n  export const yupActivationSchema = (props) => Yup.object().shape({\n    code: Yup.string()\n      .required(\"An activation code is required\")\n  });\n\n  export const yupForgotPasswordSchema = (props) => Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Must be a valid email\"),\n  });\n\n  export const yupForgotPasswordSubmitSchema = (props) => Yup.object().shape({\n    code: Yup.string()\n      .required(\"An activation code is required\"),\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Must be a valid email\"),\n    password: Yup.string()\n      .required('Password is required')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      ),\n    passwordConfirmation: Yup.string()\n      .required('Confirm password is required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  });\n\n  export const yupChangePasswordValidation = (props) => Yup.object().shape({\n    oldPassword: Yup.string()\n      .required(\"Current password is required\"),\n    password: Yup.string()\n      .required('Password is required')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      ),\n      confirmPassword: Yup.string()\n      .required('Confirm password is required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  });\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport { getUser } from 'redux/slices/userSlice'\n\nimport AuthUserNavBar from 'components/AuthUserNavBar'\nimport NonAuthUserNavBar from 'components/NonAuthUserNavBar'\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  Nav,\n  Container,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\nfunction FixedTransparentNavbar() {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const userInfo = useSelector(getUser)\n\n  return (\n    <>\n      {collapseOpen ? (\n        <div\n          id=\"bodyClick\"\n          onClick={() => {\n            document.documentElement.classList.toggle(\"nav-open\");\n            setCollapseOpen(false);\n          }}\n        />\n      ) : null}\n      <Navbar className=\"navbar-absolute navbar-transparent\" expand=\"lg\">\n      <Container>\n          \n          <div className=\"navbar-translate\">\n            <NavbarBrand\n              tag={ Link } \n              to=\"/\"\n              id=\"navbar-brand\"\n            >\n              SkillsLounge\n            </NavbarBrand>\n          </div>\n          <Collapse\n            className=\"justify-content-end\"\n            isOpen={collapseOpen}\n            navbar\n          >\n              { userInfo.isAuthenticated ? <AuthUserNavBar /> : <NonAuthUserNavBar /> }\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default FixedTransparentNavbar;\n","import React from \"react\";\n\nimport { Modal, ModalHeader, ModalBody  } from \"reactstrap\";\n\nconst TosModal = (props) => (\n  <Modal\n    isOpen={props.show}\n    toggle={props.onHide}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n  >\n    <ModalHeader  toggle={props.onHide}>\n        Terms and Conditions\n    </ModalHeader>\n    <ModalBody\n      style={{ \"maxHeight\": \"calc(100vh - 210px)\", \"overflowY\": \"auto\" }}\n    >\n      <p>AGREEMENT TO TERMS</p>\n      <p>\n        These Terms of Use constitute a legally binding agreement made between\n        you, whether personally or on behalf of an entity (&quot;you&quot;) and\n        SkillsLounge (&quot;Company&quot;, &quot;we&quot;, &quot;us&quot;, or\n        &quot;our&quot;), concerning your access to and use of the\n        skillslounge.io website as well as any other media form, media channel,\n        mobile website or mobile application related, linked, or otherwise\n        connected thereto (collectively, the &quot;Site&quot;). You agree that\n        by accessing the Site, you have read, understood, and agree to be bound\n        by all of these Terms of Use. IF YOU DO NOT AGREE WITH ALL OF THESE\n        TERMS OF USE, THEN YOU ARE EXPRESSLY PROHIBITED FROM USING THE SITE AND\n        YOU MUST DISCONTINUE USE IMMEDIATELY.\n      </p>\n      <p>\n        Supplemental terms and conditions or documents that may be posted on the\n        Site from time to time are hereby expressly incorporated herein by\n        reference. We reserve the right, in our sole discretion, to make changes\n        or modifications to these Terms of Use at any time and for any reason.\n        We will alert you about any changes by updating the &quot;Last\n        updated&quot; date of these Terms of Use, and you waive any right to\n        receive specific notice of each such change. It is your responsibility\n        to periodically review these Terms of Use to stay informed of updates.\n        You will be subject to, and will be deemed to have been made aware of\n        and to have accepted, the changes in any revised Terms of Use by your\n        continued use of the Site after the date such revised Terms of Use are\n        posted. &nbsp;\n      </p>\n      <p>\n        The information provided on the Site is not intended for distribution to\n        or use by any person or entity in any jurisdiction or country where such\n        distribution or use would be contrary to law or regulation or which\n        would subject us to any registration requirement within such\n        jurisdiction or country. Accordingly, those persons who choose to access\n        the Site from other locations do so on their own initiative and are\n        solely responsible for compliance with local laws, if and to the extent\n        local laws are applicable.&nbsp;\n      </p>\n      <p>\n        The Site is intended for users who are at least 18 years old. Persons\n        under the age of 18 are not permitted to use or register for the\n        Site.&nbsp;\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>INTELLECTUAL PROPERTY RIGHTS</p>\n      <p>\n        Unless otherwise indicated, the Site is our proprietary property and all\n        source code, databases, functionality, software, website designs, audio,\n        video, text, photographs, and graphics on the Site (collectively, the\n        &quot;Content&quot;) and the trademarks, service marks, and logos\n        contained therein (the &quot;Marks&quot;) are owned or controlled by us\n        or licensed to us, and are protected by copyright and trademark laws and\n        various other intellectual property rights and unfair competition laws\n        of the United States, international copyright laws, and international\n        conventions. The Content and the Marks are provided on the Site &quot;AS\n        IS&quot; for your information and personal use only. Except as expressly\n        provided in these Terms of Use, no part of the Site and no Content or\n        Marks may be copied, reproduced, aggregated, republished, uploaded,\n        posted, publicly displayed, encoded, translated, transmitted,\n        distributed, sold, licensed, or otherwise exploited for any commercial\n        purpose whatsoever, without our express prior written permission.\n      </p>\n      <p>\n        Provided that you are eligible to use the Site, you are granted a\n        limited license to access and use the Site and to download or print a\n        copy of any portion of the Content to which you have properly gained\n        access solely for your personal, non-commercial use. We reserve all\n        rights not expressly granted to you in and to the Site, the Content and\n        the Marks.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>USER REPRESENTATIONS</p>\n      <p>\n        By using the Site, you represent and warrant that: (1) all registration\n        information you submit will be true, accurate, current, and complete;\n        (2) you will maintain the accuracy of such information and promptly\n        update such registration information as necessary; (3) you have the\n        legal capacity and you agree to comply with these Terms of Use; (4) you\n        are not a minor in the jurisdiction in which you reside; (5) you will\n        not access the Site through automated or non-human means, whether\n        through a bot, script or otherwise; (6) you will not use the Site for\n        any illegal or unauthorized purpose; and (7) your use of the Site will\n        not violate any applicable law or regulation.\n      </p>\n      <p>\n        If you provide any information that is untrue, inaccurate, not current,\n        or incomplete, we have the right to suspend or terminate your account\n        and refuse any and all current or future use of the Site (or any portion\n        thereof).&nbsp;\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>USER REGISTRATION</p>\n      <p>\n        You may be required to register with the Site. You agree to keep your\n        password confidential and will be responsible for all use of your\n        account and password. We reserve the right to remove, reclaim, or change\n        a username you select if we determine, in our sole discretion, that such\n        username is inappropriate, obscene, or otherwise objectionable.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>PROHIBITED ACTIVITIES&nbsp;</p>\n      <p>\n        You may not access or use the Site for any purpose other than that for\n        which we make the Site available. The Site may not be used in connection\n        with any commercial endeavors except those that are specifically\n        endorsed or approved by us. &nbsp;\n      </p>\n      <p>As a user of the Site, you agree not to:</p>\n      <ol>\n        <li>\n          Systematically retrieve data or other content from the Site to create\n          or compile, directly or indirectly, a collection, compilation,\n          database, or directory without written permission from us.\n        </li>\n        <li>\n          Make any unauthorized use of the Site, including collecting usernames\n          and/or email addresses of users by electronic or other means for the\n          purpose of sending unsolicited email, or creating user accounts by\n          automated means or under false pretenses.\n        </li>\n        <li>\n          Circumvent, disable, or otherwise interfere with security-related\n          features of the Site, including features that prevent or restrict the\n          use or copying of any Content or enforce limitations on the use of the\n          Site and/or the Content contained therein.\n        </li>\n        <li>Engage in unauthorized framing of or linking to the Site.</li>\n        <li>\n          Trick, defraud, or mislead us and other users, especially in any\n          attempt to learn sensitive account information such as user passwords.\n        </li>\n        <li>\n          Make improper use of our support services or submit false reports of\n          abuse or misconduct.\n        </li>\n        <li>\n          Engage in any automated use of the system, such as using scripts to\n          send comments or messages, or using any data mining, robots, or\n          similar data gathering and extraction tools.\n        </li>\n        <li>\n          Interfere with, disrupt, or create an undue burden on the Site or the\n          networks or services connected to the Site.\n        </li>\n        <li>\n          Attempt to impersonate another user or person or use the username of\n          another user.\n        </li>\n        <li>Sell or otherwise transfer your profile.</li>\n        <li>\n          Use any information obtained from the Site in order to harass, abuse,\n          or harm another person.\n        </li>\n        <li>\n          Use the Site as part of any effort to compete with us or otherwise use\n          the Site and/or the Content for any revenue-generating endeavor or\n          commercial enterprise.\n        </li>\n        <li>\n          Decipher, decompile, disassemble, or reverse engineer any of the\n          software comprising or in any way making up a part of the Site.\n        </li>\n        <li>\n          Attempt to bypass any measures of the Site designed to prevent or\n          restrict access to the Site, or any portion of the Site.\n        </li>\n        <li>\n          Harass, annoy, intimidate, or threaten any of our employees or agents\n          engaged in providing any portion of the Site to you.\n        </li>\n        <li>\n          Delete the copyright or other proprietary rights notice from any\n          Content.\n        </li>\n        <li>\n          Copy or adapt the Site&#39;s software, including but not limited to\n          Flash, PHP, HTML, JavaScript, or other code.\n        </li>\n        <li>\n          Except as may be the result of standard search engine or Internet\n          browser usage, use, launch, develop, or distribute any automated\n          system, including without limitation, any spider, robot, cheat\n          utility, scraper, or offline reader that accesses the Site, or using\n          or launching any unauthorized script or other software.\n        </li>\n        <li>\n          Disparage, tarnish, or otherwise harm, in our opinion, us and/or the\n          Site.\n        </li>\n        <li>\n          Use the Site in a manner inconsistent with any applicable laws or\n          regulations.\n        </li>\n      </ol>\n      <p>\n        <br />\n      </p>\n      <p>USER GENERATED CONTRIBUTIONS</p>\n      <p>\n        The Site does not offer users to submit or post content. We may provide\n        you with the opportunity to create, submit, post, display, transmit,\n        perform, publish, distribute, or broadcast content and materials to us\n        or on the Site, including but not limited to text, writings, video,\n        audio, photographs, graphics, comments, suggestions, or personal\n        information or other material (collectively, &quot;Contributions&quot;).\n        Contributions may be viewable by other users of the Site and through\n        third-party websites. As such, any Contributions you transmit may be\n        treated in accordance with the Site Privacy Policy. When you create or\n        make available any Contributions, you thereby represent and warrant\n        that:\n      </p>\n      <ol>\n        <li>\n          The creation, distribution, transmission, public display, or\n          performance, and the accessing, downloading, or copying of your\n          Contributions do not and will not infringe the proprietary rights,\n          including but not limited to the copyright, patent, trademark, trade\n          secret, or moral rights of any third party.\n        </li>\n        <li>\n          You are the creator and owner of or have the necessary licenses,\n          rights, consents, releases, and permissions to use and to authorize\n          us, the Site, and other users of the Site to use your Contributions in\n          any manner contemplated by the Site and these Terms of Use.\n        </li>\n        <li>\n          You have the written consent, release, and/or permission of each and\n          every identifiable individual person in your Contributions to use the\n          name or likeness of each and every such identifiable individual person\n          to enable inclusion and use of your Contributions in any manner\n          contemplated by the Site and these Terms of Use.\n        </li>\n        <li>Your Contributions are not false, inaccurate, or misleading.</li>\n        <li>\n          Your Contributions are not unsolicited or unauthorized advertising,\n          promotional materials, pyramid schemes, chain letters, spam, mass\n          mailings, or other forms of solicitation.\n        </li>\n        <li>\n          Your Contributions are not obscene, lewd, lascivious, filthy, violent,\n          harassing, libelous, slanderous, or otherwise objectionable (as\n          determined by us).\n        </li>\n        <li>\n          Your Contributions do not ridicule, mock, disparage, intimidate, or\n          abuse anyone.\n        </li>\n        <li>\n          Your Contributions are not used to harass or threaten (in the legal\n          sense of those terms) any other person and to promote violence against\n          a specific person or class of people.\n        </li>\n        <li>\n          Your Contributions do not violate any applicable law, regulation, or\n          rule.\n        </li>\n        <li>\n          Your Contributions do not violate the privacy or publicity rights of\n          any third party.\n        </li>\n        <li>\n          Your Contributions do not contain any material that solicits personal\n          information from anyone under the age of 18 or exploits people under\n          the age of 18 in a sexual or violent manner.\n        </li>\n        <li>\n          Your Contributions do not violate any applicable law concerning child\n          pornography, or otherwise intended to protect the health or well-being\n          of minors.\n        </li>\n        <li>\n          Your Contributions do not include any offensive comments that are\n          connected to race, national origin, gender, sexual preference, or\n          physical handicap.\n        </li>\n        <li>\n          Your Contributions do not otherwise violate, or link to material that\n          violates, any provision of these Terms of Use, or any applicable law\n          or regulation.\n        </li>\n      </ol>\n      <p>\n        Any use of the Site in violation of the foregoing violates these Terms\n        of Use and may result in, among other things, termination or suspension\n        of your rights to use the Site.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>CONTRIBUTION LICENSE</p>\n      <p>\n        You and the Site agree that we may access, store, process, and use any\n        information and personal data that you provide following the terms of\n        the Privacy Policy and your choices (including settings).\n      </p>\n      <p>\n        By submitting suggestions or other feedback regarding the Site, you\n        agree that we can use and share &nbsp;such feedback for any purpose\n        without compensation to you.\n      </p>\n      <p>\n        We do not assert any ownership over your Contributions. You retain full\n        ownership of all of your Contributions and any intellectual property\n        rights or other proprietary rights associated with your Contributions.\n        We are not liable for any statements or representations in your\n        Contributions provided by you in any area on the Site. You are solely\n        responsible for your Contributions to the Site and you expressly agree\n        to exonerate us from any and all responsibility and to refrain from any\n        legal action against us regarding your Contributions.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>SOCIAL MEDIA</p>\n      <p>\n        As part of the functionality of the Site, you may link your account with\n        online accounts you have with third-party service providers (each such\n        account, a &quot;Third-Party Account&quot;) by either: (1) providing\n        your Third-Party Account login information through the Site; or (2)\n        allowing us to access your Third-Party Account, as is permitted under\n        the applicable terms and conditions that govern your use of each\n        Third-Party Account. You represent and warrant that you are entitled to\n        disclose your Third-Party Account login information to us and/or grant\n        us access to your Third-Party Account, without breach by you of any of\n        the terms and conditions that govern your use of the applicable\n        Third-Party Account, and without obligating us to pay any fees or making\n        us subject to any usage limitations imposed by the third-party service\n        provider of the Third-Party Account. By granting us access to any\n        Third-Party Accounts, you understand that (1) we may access, make\n        available, and store (if applicable) any content that you have provided\n        to and stored in your Third-Party Account (the &quot;Social Network\n        Content&quot;) so that it is available on and through the Site via your\n        account, including without limitation any friend lists and (2) we may\n        submit to and receive from your Third-Party Account additional\n        information to the extent you are notified when you link your account\n        with the Third-Party Account. Depending on the Third-Party Accounts you\n        choose and subject to the privacy settings that you have set in such\n        Third-Party Accounts, personally identifiable information that you post\n        to your Third-Party Accounts may be available on and through your\n        account on the Site. Please note that if a Third-Party Account or\n        associated service becomes unavailable or our access to such Third-Party\n        Account is terminated by the third-party service provider, then Social\n        Network Content may no longer be available on and through the Site. You\n        will have the ability to disable the connection between your account on\n        the Site and your Third-Party Accounts at any time. PLEASE NOTE THAT\n        YOUR RELATIONSHIP WITH THE THIRD-PARTY SERVICE PROVIDERS ASSOCIATED WITH\n        YOUR THIRD-PARTY ACCOUNTS IS GOVERNED SOLELY BY YOUR AGREEMENT(S) WITH\n        SUCH THIRD-PARTY SERVICE PROVIDERS. We make no effort to review any\n        Social Network Content for any purpose, including but not limited to,\n        for accuracy, legality, or non-infringement, and we are not responsible\n        for any Social Network Content. You acknowledge and agree that we may\n        access your email address book associated with a Third-Party Account and\n        your contacts list stored on your mobile device or tablet computer\n        solely for purposes of identifying and informing you of those contacts\n        who have also registered to use the Site. You can deactivate the\n        connection between the Site and your Third-Party Account by contacting\n        us using the contact information below or through your account settings\n        (if applicable). We will attempt to delete any information stored on our\n        servers that was obtained through such Third-Party Account, except the\n        username and profile picture that become associated with your account.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>SUBMISSIONS</p>\n      <p>\n        You acknowledge and agree that any questions, comments, suggestions,\n        ideas, feedback, or other information regarding the Site\n        (&quot;Submissions&quot;) provided by you to us are non-confidential and\n        shall become our sole property. We shall own exclusive rights, including\n        all intellectual property rights, and shall be entitled to the\n        unrestricted use and dissemination of these Submissions for any lawful\n        purpose, commercial or otherwise, without acknowledgment or compensation\n        to you. You hereby waive all moral rights to any such Submissions, and\n        you hereby warrant that any such Submissions are original with you or\n        that you have the right to submit such Submissions. You agree there\n        shall be no recourse against us for any alleged or actual infringement\n        or misappropriation of any proprietary right in your Submissions.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>SITE MANAGEMENT</p>\n      <p>\n        We reserve the right, but not the obligation, to: (1) monitor the Site\n        for violations of these Terms of Use; (2) take appropriate legal action\n        against anyone who, in our sole discretion, violates the law or these\n        Terms of Use, including without limitation, reporting such user to law\n        enforcement authorities; (3) in our sole discretion and without\n        limitation, refuse, restrict access to, limit the availability of, or\n        disable (to the extent technologically feasible) any of your\n        Contributions or any portion thereof; (4) in our sole discretion and\n        without limitation, notice, or liability, to remove from the Site or\n        otherwise disable all files and content that are excessive in size or\n        are in any way burdensome to our systems; and (5) otherwise manage the\n        Site in a manner designed to protect our rights and property and to\n        facilitate the proper functioning of the Site.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>PRIVACY POLICY</p>\n      <p>\n        We care about data privacy and security. By using the Site, you agree to\n        be bound by our Privacy Policy posted on the Site, which is incorporated\n        into these Terms of Use. Please be advised the Site is hosted in the\n        United Kingdom. If you access the Site from any other region of the\n        world with laws or other requirements governing personal data\n        collection, use, or disclosure that differ from applicable laws in the\n        United Kingdom, then through your continued use of the Site, you are\n        transferring your data to the United Kingdom, and you agree to have your\n        data transferred to and processed in the United Kingdom.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>COPYRIGHT INFRINGEMENTS</p>\n      <p>\n        We respect the intellectual property rights of others. If you believe\n        that any material available on or through the Site infringes upon any\n        copyright you own or control, please immediately notify us using the\n        contact information provided below (a &quot;Notification&quot;). A copy\n        of your Notification will be sent to the person who posted or stored the\n        material addressed in the Notification. Please be advised that pursuant\n        to applicable law you may be held liable for damages if you make\n        material misrepresentations in a Notification. Thus, if you are not sure\n        that material located on or linked to by the Site infringes your\n        copyright, you should consider first contacting an attorney.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>TERM AND TERMINATION</p>\n      <p>\n        These Terms of Use shall remain in full force and effect while you use\n        the Site. WITHOUT LIMITING ANY OTHER PROVISION OF THESE TERMS OF USE, WE\n        RESERVE THE RIGHT TO, IN OUR SOLE DISCRETION AND WITHOUT NOTICE OR\n        LIABILITY, DENY ACCESS TO AND USE OF THE SITE (INCLUDING BLOCKING\n        CERTAIN IP ADDRESSES), TO ANY PERSON FOR ANY REASON OR FOR NO REASON,\n        INCLUDING WITHOUT LIMITATION FOR BREACH OF ANY REPRESENTATION, WARRANTY,\n        OR COVENANT CONTAINED IN THESE TERMS OF USE OR OF ANY APPLICABLE LAW OR\n        REGULATION. WE MAY TERMINATE YOUR USE OR PARTICIPATION IN THE SITE OR\n        DELETE YOUR ACCOUNT AND ANY CONTENT OR INFORMATION THAT YOU POSTED AT\n        ANY TIME, WITHOUT WARNING, IN OUR SOLE DISCRETION.&nbsp;\n      </p>\n      <p>\n        If we terminate or suspend your account for any reason, you are\n        prohibited from registering and creating a new account under your name,\n        a fake or borrowed name, or the name of any third party, even if you may\n        be acting on behalf of the third party. In addition to terminating or\n        suspending your account, we reserve the right to take appropriate legal\n        action, including without limitation pursuing civil, criminal, and\n        injunctive redress.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>MODIFICATIONS AND INTERRUPTIONS</p>\n      <p>\n        We reserve the right to change, modify, or remove the contents of the\n        Site at any time or for any reason at our sole discretion without\n        notice. However, we have no obligation to update any information on our\n        Site. We also reserve the right to modify or discontinue all or part of\n        the Site without notice at any time. We will not be liable to you or any\n        third party for any modification, price change, suspension, or\n        discontinuance of the Site. &nbsp;\n      </p>\n      <p>\n        We cannot guarantee the Site will be available at all times. We may\n        experience hardware, software, or other problems or need to perform\n        maintenance related to the Site, resulting in interruptions, delays, or\n        errors. We reserve the right to change, revise, update, suspend,\n        discontinue, or otherwise modify the Site at any time or for any reason\n        without notice to you. You agree that we have no liability whatsoever\n        for any loss, damage, or inconvenience caused by your inability to\n        access or use the Site during any downtime or discontinuance of the\n        Site. Nothing in these Terms of Use will be construed to obligate us to\n        maintain and support the Site or to supply any corrections, updates, or\n        releases in connection therewith.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>GOVERNING LAW</p>\n      <p>\n        These conditions are governed by and interpreted following the laws of\n        the United Kingdom, and the use of the United Nations Convention of\n        Contracts for the International Sale of Goods is expressly excluded. If\n        your habitual residence is in the EU, and you are a consumer, you\n        additionally possess the protection provided to you by obligatory\n        provisions of the law of your country of residence. SkillsLounge and\n        yourself both agree to submit to the non-exclusive jurisdiction of the\n        courts of __________, which means that you may make a claim to defend\n        your consumer protection rights in regards to these Conditions of Use in\n        the United Kingdom, or in the EU country in which you reside.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>CORRECTIONS</p>\n      <p>\n        There may be information on the Site that contains typographical errors,\n        inaccuracies, or omissions, including descriptions, pricing,\n        availability, and various other information. We reserve the right to\n        correct any errors, inaccuracies, or omissions and to change or update\n        the information on the Site at any time, without prior notice.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>DISCLAIMER</p>\n      <p>\n        THE SITE IS PROVIDED ON AN AS-IS AND AS-AVAILABLE BASIS. YOU AGREE THAT\n        YOUR USE OF THE SITE AND OUR SERVICES WILL BE AT YOUR SOLE RISK. TO THE\n        FULLEST EXTENT PERMITTED BY LAW, WE DISCLAIM ALL WARRANTIES, EXPRESS OR\n        IMPLIED, IN CONNECTION WITH THE SITE AND YOUR USE THEREOF, INCLUDING,\n        WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\n        FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. WE MAKE NO WARRANTIES OR\n        REPRESENTATIONS ABOUT THE ACCURACY OR COMPLETENESS OF THE SITE&#39;S\n        CONTENT OR THE CONTENT OF ANY WEBSITES LINKED TO THE SITE AND WE WILL\n        ASSUME NO LIABILITY OR RESPONSIBILITY FOR ANY (1) ERRORS, MISTAKES, OR\n        INACCURACIES OF CONTENT AND MATERIALS, (2) PERSONAL INJURY OR PROPERTY\n        DAMAGE, OF ANY NATURE WHATSOEVER, RESULTING FROM YOUR ACCESS TO AND USE\n        OF THE SITE, (3) ANY UNAUTHORIZED ACCESS TO OR USE OF OUR SECURE SERVERS\n        AND/OR ANY AND ALL PERSONAL INFORMATION AND/OR FINANCIAL INFORMATION\n        STORED THEREIN, (4) ANY INTERRUPTION OR CESSATION OF TRANSMISSION TO OR\n        FROM THE SITE, (5) ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE WHICH\n        MAY BE TRANSMITTED TO OR THROUGH THE SITE BY ANY THIRD PARTY, AND/OR (6)\n        ANY ERRORS OR OMISSIONS IN ANY CONTENT AND MATERIALS OR FOR ANY LOSS OR\n        DAMAGE OF ANY KIND INCURRED AS A RESULT OF THE USE OF ANY CONTENT\n        POSTED, TRANSMITTED, OR OTHERWISE MADE AVAILABLE VIA THE SITE. WE DO NOT\n        WARRANT, ENDORSE, GUARANTEE, OR ASSUME RESPONSIBILITY FOR ANY PRODUCT OR\n        SERVICE ADVERTISED OR OFFERED BY A THIRD PARTY THROUGH THE SITE, ANY\n        HYPERLINKED WEBSITE, OR ANY WEBSITE OR MOBILE APPLICATION FEATURED IN\n        ANY BANNER OR OTHER ADVERTISING, AND WE WILL NOT BE A PARTY TO OR IN ANY\n        WAY BE RESPONSIBLE FOR MONITORING ANY TRANSACTION BETWEEN YOU AND ANY\n        THIRD-PARTY PROVIDERS OF PRODUCTS OR SERVICES. AS WITH THE PURCHASE OF A\n        PRODUCT OR SERVICE THROUGH ANY MEDIUM OR IN ANY ENVIRONMENT, YOU SHOULD\n        USE YOUR BEST JUDGMENT AND EXERCISE CAUTION WHERE APPROPRIATE.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>LIMITATIONS OF LIABILITY</p>\n      <p>\n        IN NO EVENT WILL WE OR OUR DIRECTORS, EMPLOYEES, OR AGENTS BE LIABLE TO\n        YOU OR ANY THIRD PARTY FOR ANY DIRECT, INDIRECT, CONSEQUENTIAL,\n        EXEMPLARY, INCIDENTAL, SPECIAL, OR PUNITIVE DAMAGES, INCLUDING LOST\n        PROFIT, LOST REVENUE, LOSS OF DATA, OR OTHER DAMAGES ARISING FROM YOUR\n        USE OF THE SITE, EVEN IF WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH\n        DAMAGES. NOTWITHSTANDING ANYTHING TO THE CONTRARY CONTAINED HEREIN, OUR\n        LIABILITY TO YOU FOR ANY CAUSE WHATSOEVER AND REGARDLESS OF THE FORM OF\n        THE ACTION, WILL AT ALL TIMES BE LIMITED TO &nbsp;THE LESSER OF THE\n        AMOUNT PAID, IF ANY, BY YOU TO US OR __________. CERTAIN US STATE LAWS\n        AND INTERNATIONAL LAWS DO NOT ALLOW LIMITATIONS ON IMPLIED WARRANTIES OR\n        THE EXCLUSION OR LIMITATION OF CERTAIN DAMAGES. IF THESE LAWS APPLY TO\n        YOU, SOME OR ALL OF THE ABOVE DISCLAIMERS OR LIMITATIONS MAY NOT APPLY\n        TO YOU, AND YOU MAY HAVE ADDITIONAL RIGHTS.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>INDEMNIFICATION</p>\n      <p>\n        You agree to defend, indemnify, and hold us harmless, including our\n        subsidiaries, affiliates, and all of our respective officers, agents,\n        partners, and employees, from and against any loss, damage, liability,\n        claim, or demand, including reasonable attorneys&#39; fees and expenses,\n        made by any third party due to or arising out of: (1) use of the Site;\n        (2) breach of these Terms of Use; (3) any breach of your representations\n        and warranties set forth in these Terms of Use; (4) your violation of\n        the rights of a third party, including but not limited to intellectual\n        property rights; or (5) any overt harmful act toward any other user of\n        the Site with whom you connected via the Site. Notwithstanding the\n        foregoing, we reserve the right, at your expense, to assume the\n        exclusive defense and control of any matter for which you are required\n        to indemnify us, and you agree to cooperate, at your expense, with our\n        defense of such claims. We will use reasonable efforts to notify you of\n        any such claim, action, or proceeding which is subject to this\n        indemnification upon becoming aware of it.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>USER DATA</p>\n      <p>\n        We will maintain certain data that you transmit to the Site for the\n        purpose of managing the performance of the Site, as well as data\n        relating to your use of the Site. Although we perform regular routine\n        backups of data, you are solely responsible for all data that you\n        transmit or that relates to any activity you have undertaken using the\n        Site. You agree that we shall have no liability to you for any loss or\n        corruption of any such data, and you hereby waive any right of action\n        against us arising from any such loss or corruption of such data.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>ELECTRONIC COMMUNICATIONS, TRANSACTIONS, AND SIGNATURES</p>\n      <p>\n        Visiting the Site, sending us emails, and completing online forms\n        constitute electronic communications. You consent to receive electronic\n        communications, and you agree that all agreements, notices, disclosures,\n        and other communications we provide to you electronically, via email and\n        on the Site, satisfy any legal requirement that such communication be in\n        writing. YOU HEREBY AGREE TO THE USE OF ELECTRONIC SIGNATURES,\n        CONTRACTS, ORDERS, AND OTHER RECORDS, AND TO ELECTRONIC DELIVERY OF\n        NOTICES, POLICIES, AND RECORDS OF TRANSACTIONS INITIATED OR COMPLETED BY\n        US OR VIA THE SITE. You hereby waive any rights or requirements under\n        any statutes, regulations, rules, ordinances, or other laws in any\n        jurisdiction which require an original signature or delivery or\n        retention of non-electronic records, or to payments or the granting of\n        credits by any means other than electronic means.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>MISCELLANEOUS</p>\n      <p>\n        These Terms of Use and any policies or operating rules posted by us on\n        the Site or in respect to the Site constitute the entire agreement and\n        understanding between you and us. Our failure to exercise or enforce any\n        right or provision of these Terms of Use shall not operate as a waiver\n        of such right or provision. These Terms of Use operate to the fullest\n        extent permissible by law. We may assign any or all of our rights and\n        obligations to others at any time. We shall not be responsible or liable\n        for any loss, damage, delay, or failure to act caused by any cause\n        beyond our reasonable control. If any provision or part of a provision\n        of these Terms of Use is determined to be unlawful, void, or\n        unenforceable, that provision or part of the provision is deemed\n        severable from these Terms of Use and does not affect the validity and\n        enforceability of any remaining provisions. There is no joint venture,\n        partnership, employment or agency relationship created between you and\n        us as a result of these Terms of Use or use of the Site. You agree that\n        these Terms of Use will not be construed against us by virtue of having\n        drafted them. You hereby waive any and all defenses you may have based\n        on the electronic form of these Terms of Use and the lack of signing by\n        the parties hereto to execute these Terms of Use.\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>CONTACT US</p>\n      <p>\n        In order to resolve a complaint regarding the Site or to receive further\n        information regarding use of the Site, please contact us at:\n      </p>\n      <p>\n        <br />\n      </p>\n      <p>SkillsLounge</p>\n      <p>2 More London Riverside</p>\n      <p>London SE1 2JP</p>\n      <p>United Kingdom</p>\n    </ModalBody>\n  </Modal>\n);\n\nexport default TosModal;\n","import React from 'react'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst PrivacyPolicyModal = props =>\n    <Modal\n        isOpen={props.show}\n        toggle={props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n    >\n        <ModalHeader toggle={props.onHide}>\n            Terms and Conditions\n        </ModalHeader>\n        <ModalBody style={{'maxHeight': 'calc(100vh - 210px)', 'overflowY': 'auto'}}>\n            <p>Thank you for choosing to be part of our community at SkillsLounge (&ldquo;company&rdquo;, &ldquo;we&rdquo;, &ldquo;us&rdquo;, or &ldquo;our&rdquo;). We are committed to protecting your personal information and your right to privacy. If you have any questions or concerns about our policy, or our practices with regards to your personal information, please contact us at __________.</p>\n            <p>When you visit our website skillslounge.io, and use our services, you trust us with your personal information. We take your privacy very seriously. In this privacy notice, we describe our privacy policy. We seek to explain to you in the clearest way possible what information we collect, how we use it and what rights you have in relation to it. We hope you take some time to read through it carefully, as it is important. If there are any terms in this privacy policy that you do not agree with, please discontinue use of our Sites and our services.</p>\n            <p>This privacy policy applies to all information collected through our website (such as skillslounge.io), and/or any related services, sales, marketing or events (we refer to them collectively in this privacy policy as the <strong>&quot;Sites&quot;</strong>).</p>\n            <p><strong>Please read this privacy policy carefully as it will help you make informed decisions about sharing your personal information with us.</strong></p>\n            <p><br/></p>\n            <p><strong>1. WHAT INFORMATION DO WE COLLECT?</strong></p>\n            <p><strong>Personal information you disclose to us</strong></p>\n            <p><strong>In Short:</strong> We collect personal information that you provide to us such as name, address, contact information, passwords and security data, payment information, and social media login data.</p>\n            <p>We collect personal information that you voluntarily provide to us when registering at the Sites expressing an interest in obtaining information about us or our products and services, when participating in activities on the Sites or otherwise contacting us.</p>\n            <p>The personal information that we collect depends on the context of your interactions with us and the Sites, the choices you make and the products and features you use. The personal information we collect can include the following:</p>\n            <p><strong>Name and Contact Data.</strong> We collect your first and last name, email address, postal address, phone number, and other similar contact data.</p>\n            <p><strong>Credentials.</strong> We collect passwords, password hints, and similar security information used for authentication and account access.</p>\n            <p><strong>Payment Data.</strong> We collect data necessary to process your payment if you make purchases, such as your payment instrument number (such as a credit card number), and the security code associated with your payment instrument. All payment data is stored by our payment processor and you should review its privacy policies and contact the payment processor directly to respond to your questions.</p>\n            <p><strong>Social Media Login Data.</strong> We provide you with the option to register using social media account details, like your Facebook, Twitter or other social media account. If you choose to register in this way, we will collect the Information described in the section called &quot;HOW DO WE HANDLE YOUR SOCIAL LOGINS&quot; below.</p>\n            <p>All personal information that you provide to us must be true, complete and accurate, and you must notify us of any changes to such personal information.</p>\n            <p><br/></p>\n            <p><strong>Information collected from other sources</strong></p>\n            <p><strong>In Short:</strong> We may collect limited data from public databases, marketing partners, social media platforms, and other outside sources.</p>\n            <p>We may obtain information about you from other sources, such as public databases, joint marketing partners, social media platforms (such as Facebook), as well as from other third parties. Examples of the information we receive from other sources include: social media profile information (your name, gender, birthday, email, current city, state and country, user identification numbers for your contacts, profile picture URL and any other information that you choose to make public); marketing leads and search results and links, including paid listings (such as sponsored links).</p>\n            <p><br/></p>\n            <p><strong>2. HOW DO WE USE YOUR INFORMATION?</strong></p>\n            <p><strong>In Short:</strong> We process your information for purposes based on legitimate business interests, the fulfillment of our contract with you, compliance with our legal obligations, and/or your consent.</p>\n            <p>We use personal information collected via our Sites for a variety of business purposes described below. We process your personal information for these purposes in reliance on our legitimate business interests (&quot;Business Purposes&quot;), in order to enter into or perform a contract with you (&quot;Contractual&quot;), with your consent (&quot;Consent&quot;), and/or for compliance with our legal obligations (&quot;Legal Reasons&quot;). We indicate the specific processing grounds we rely on next to each purpose listed below.</p>\n            <p>We use the information we collect or receive:</p>\n            <ul>\n                <li><strong>To facilitate account creation and logon process.</strong> If you choose to link your account with us to a third party account *(such as your Google or Facebook account), we use the information you allowed us to collect from those third parties to facilitate account creation and logon process. See the section below headed &quot;HOW DO WE HANDLE YOUR SOCIAL LOGINS&quot; for further information.</li>\n                <li><strong>To protect our Sites.</strong> We may use your information as part of our efforts to keep our Sites safe and secure (for example, for fraud monitoring and prevention).</li>\n            </ul>\n            <p><br/></p>\n            <p><strong>3. WILL YOUR INFORMATION BE SHARED WITH ANYONE?</strong></p>\n            <p><strong>In Short:</strong> We only share information with your consent, to comply with laws, to protect your rights, or to fulfill business obligations.</p>\n            <p>We may process or share data based on the following legal basis:</p>\n            <ul>\n                <li><strong>Consent:</strong> We may process your data if you have given us specific consent to use your personal information in a specific purpose.</li>\n                <li><strong>Legitimate Interests:</strong> We may process your data when it is reasonably necessary to achieve our legitimate business interests.</li>\n                <li><strong>Performance of a Contract:</strong> Where we have entered into a contract with you, we may process your personal information to fulfill the terms of our contract.</li>\n                <li><strong>Legal Obligations:</strong> We may disclose your information where we are legally required to do so in order to comply with applicable law, governmental requests, a judicial proceeding, court order, or legal process, such as in response to a court order or a subpoena (including in response to public authorities to meet national security or law enforcement requirements).</li>\n                <li><strong>Vital Interests:</strong> We may disclose your information where we believe it is necessary to investigate, prevent, or take action regarding potential violations of our policies, suspected fraud, situations involving potential threats to the safety of any person and illegal activities, or as evidence in litigation in which we are involved.</li>\n            </ul>\n            <p>More specifically, we may need to process your data or share your personal information in the following situations:</p>\n            <ul>\n                <li><strong>Business Transfers.</strong> We may share or transfer your information in connection with, or during negotiations of, any merger, sale of company assets, financing, or acquisition of all or a portion of our business to another company.</li>\n                <li><strong>Third-Party Advertisers.</strong> We may use third-party advertising companies to serve ads when you visit the Sites. These companies may use information about your visits to our Website(s) and other websites that are contained in web cookies and other tracking technologies in order to provide advertisements about goods and services of interest to you.</li>\n            </ul>\n            <p><strong>4. DO WE USE COOKIES AND OTHER TRACKING TECHNOLOGIES?</strong></p>\n            <p><strong>In Short:</strong> We may use cookies and other tracking technologies to collect and store your information.</p>\n            <p>We may use cookies and similar tracking technologies (like web beacons and pixels) to access or store information. Specific information about how we use such technologies and how you can refuse certain cookies is set out in our Cookie Policy.</p>\n            <p><br/></p>\n            <p><strong>5. HOW DO WE HANDLE YOUR SOCIAL LOGINS?</strong></p>\n            <p><strong>In Short:</strong> If you choose to register or log in to our websites using a social media account, we may have access to certain information about you.</p>\n            <p>Our Sites offer you the ability to register and login using your third party social media account details (like your Facebook or Twitter logins). Where you choose to do this, we will receive certain profile information about you from your social media provider. The profile Information we receive may vary depending on the social media provider concerned, but will often include your name, e-mail address, friends list, profile picture as well as other information you choose to make public.</p>\n            <p>We will use the information we receive only for the purposes that are described in this privacy policy or that are otherwise made clear to you on the Sites. Please note that we do not control, and are not responsible for, other uses of your personal information by your third party social media provider. We recommend that you review their privacy policy to understand how they collect, use and share your personal information, and how you can set your privacy preferences on their sites and apps.</p>\n            <p><br/></p>\n            <p><strong>6. HOW LONG DO WE KEEP YOUR INFORMATION?</strong></p>\n            <p><strong>In Short:</strong> We keep your information for as long as necessary to fulfill the purposes outlined in this privacy policy unless otherwise required by law.</p>\n            <p>We will only keep your personal information for as long as it is necessary for the purposes set out in this privacy policy, unless a longer retention period is required or permitted by law (such as tax, accounting or other legal requirements). No purpose in this policy will require us keeping your personal information for longer than the period of time in which users have an account with us.</p>\n            <p>When we have no ongoing legitimate business need to process your personal information, we will either delete or anonymize it, or, if this is not possible (for example, because your personal information has been stored in backup archives), then we will securely store your personal information and isolate it from any further processing until deletion is possible.</p>\n            <p><br/></p>\n            <p><strong>7. HOW DO WE KEEP YOUR INFORMATION SAFE?</strong></p>\n            <p><strong>In Short:</strong> We aim to protect your personal information through a system of organisational and technical security measures.</p>\n            <p>We have implemented appropriate technical and organisational security measures designed to protect the security of any personal information we process. However, please also remember that we cannot guarantee that the internet itself is 100% secure. Although we will do our best to protect your personal information, transmission of personal information to and from our Sites is at your own risk. You should only access the services within a secure environment.</p>\n            <p><br/></p>\n            <p><strong>8. DO WE COLLECT INFORMATION FROM MINORS?</strong></p>\n            <p><strong>In Short:</strong> We do not knowingly collect data from or market to children under 18 years of age.</p>\n            <p>We do not knowingly solicit data from or market to children under 18 years of age. By using the Sites, you represent that you are at least 18 or that you are the parent or guardian of such a minor and consent to such minor dependent&rsquo;s use of the Sites. If we learn that personal information from users less than 18 years of age has been collected, we will deactivate the account and take reasonable measures to promptly delete such data from our records. If you become aware of any data we have collected from children under age 18, please contact us at billy.michael@ecs-digital.co.uk.</p>\n            <p><br/></p>\n            <p><strong>9. WHAT ARE YOUR PRIVACY RIGHTS?</strong></p>\n            <p><strong>In Short:</strong> In some regions, such as the European Economic Area, you have rights that allow you greater access to and control over your personal information. You may review, change, or terminate your account at any time.</p>\n            <p>In some regions (like the European Economic Area), you have certain rights under applicable data protection laws. These may include the right (i) to request access and obtain a copy of your personal information, (ii) to request rectification or erasure; (iii) to restrict the processing of your personal information; and (iv) if applicable, to data portability. In certain circumstances, you may also have the right to object to the processing of your personal information. To make such a request, please use the contact details provided below. We will consider and act upon any request in accordance with applicable data protection laws.</p>\n            <p>If we are relying on your consent to process your personal information, you have the right to withdraw your consent at any time. Please note however that this will not affect the lawfulness of the processing before its withdrawal.</p>\n            <p>If you are resident in the European Economic Area and you believe we are unlawfully processing your personal information, you also have the right to complain to your local data protection supervisory authority. You can find their contact details here: http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm</p>\n            <p><strong>Account Information</strong></p>\n            <p>If you would at any time like to review or change the information in your account or terminate your account, you can:</p>\n            <ul>\n                <li>Log into your account settings and update your user account.</li>\n                <li>Contact us using the contact information provided.</li>\n            </ul>\n            <p>Upon your request to terminate your account, we will deactivate or delete your account and information from our active databases. However, some information may be retained in our files to prevent fraud, troubleshoot problems, assist with any investigations, enforce our Terms of Use and/or comply with legal requirements.</p>\n            <p><strong><u>Cookies and similar technologies:</u></strong> Most Web browsers are set to accept cookies by default. If you prefer, you can usually choose to set your browser to remove cookies and to reject cookies. If you choose to remove cookies or reject cookies, this could affect certain features or services of our Sites. To opt-out of interest-based advertising by advertisers on our Sites visit http://www.aboutads.info/choices/.</p>\n            <p><strong><u>Opting out of email marketing:</u></strong> You can unsubscribe from our marketing email list at any time by clicking on the unsubscribe link in the emails that we send or by contacting us using the details provided below. You will then be removed from the marketing email list &ndash; however, we will still need to send you service-related emails that are necessary for the administration and use of your account. To otherwise opt-out, you may:</p>\n            <ul>\n                <li>Contact us using the contact information provided.</li>\n            </ul>\n            <p><br/></p>\n            <p><strong>10. CONTROLS FOR DO-NOT-TRACK FEATURES</strong></p>\n            <p>Most web browsers and some mobile operating systems and mobile applications include a Do-Not-Track (&ldquo;DNT&rdquo;) feature or setting you can activate to signal your privacy preference not to have data about your online browsing activities monitored and collected. No uniform technology standard for recognizing and implementing DNT signals has been finalized. As such, we do not currently respond to DNT browser signals or any other mechanism that automatically communicates your choice not to be tracked online. If a standard for online tracking is adopted that we must follow in the future, we will inform you about that practice in a revised version of this Privacy Policy.</p>\n            <p><br/></p>\n            <p><strong>11. DO CALIFORNIA RESIDENTS HAVE SPECIFIC PRIVACY RIGHTS?</strong></p>\n            <p><strong>In Short:</strong> Yes, if you are a resident of California, you are granted specific rights regarding access to your personal information.</p>\n            <p>California Civil Code Section 1798.83, also known as the &ldquo;Shine The Light&rdquo; law, permits our users who are California residents to request and obtain from us, once a year and free of charge, information about categories of personal information (if any) we disclosed to third parties for direct marketing purposes and the names and addresses of all third parties with which we shared personal information in the immediately preceding calendar year. If you are a California resident and would like to make such a request, please submit your request in writing to us using the contact information provided below.</p>\n            <p>If you are under 18 years of age, reside in California, and have a registered account with the Sites, you have the right to request removal of unwanted data that you publicly post on the Sites. To request removal of such data, please contact us using the contact information provided below, and include the email address associated with your account and a statement that you reside in California. We will make sure the data is not publicly displayed on the Sites, but please be aware that the data may not be completely or comprehensively removed from our systems.</p>\n            <p><br/></p>\n            <p><strong>12. DO WE MAKE UPDATES TO THIS POLICY?</strong></p>\n            <p><strong>In Short:</strong> Yes, we will update this policy as necessary to stay compliant with relevant laws.</p>\n            <p>We may update this privacy policy from time to time. The updated version will be indicated by an updated &ldquo;Revised&rdquo; date and the updated version will be effective as soon as it is accessible. If we make material changes to this privacy policy, we may notify you either by prominently posting a notice of such changes or by directly sending you a notification. We encourage you to review this privacy policy frequently to be informed of how we are protecting your information.</p>\n            <p><br/></p>\n            <p><strong>13. HOW CAN YOU CONTACT US ABOUT THIS POLICY?</strong></p>\n            <p>If you have questions or comments about this policy, you may email us at billy.michael@ecs-digital.co.uk or by post to:</p>\n            <p>SkillsLounge<br/>2 More London Riverside, <br/>SE1 2JP<br/>United Kingdom</p>\n            <p><br/></p>\n            <p><strong>HOW CAN YOU REVIEW, UPDATE, OR DELETE THE DATA WE COLLECT FROM YOU?</strong></p>\n            <p>Based on the applicable laws of your country, you may have the right to request access to the personal information we collect from you, change that information, or delete it in some circumstances. To request to review, update, or delete your personal information, please submit a request form by clicking here. We will respond to your request within 30 days.</p>\n            </ModalBody>\n    </Modal>\n\nexport default PrivacyPolicyModal","import React, { useState } from \"react\";\n\nimport {\n  FormGroup,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from \"reactstrap\";\nimport { EyeIcon, EyeClosedIcon } from \"@primer/octicons-react\";\n\nimport \"./PasswordField.css\";\n\nconst PasswordField = (props) => {\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [faFocus, setFaFocus] = React.useState(false);\n\n  const setPassword = () =>\n    passwordType === \"password\"\n      ? setPasswordType(\"text\")\n      : setPasswordType(\"password\");\n\n  return (\n    <FormGroup className={\"input-lg\"}>\n      <InputGroup className={faFocus ? \"input-group-focus\" : \"\"}>\n        <Input\n          autoComplete=\"password\"\n          placeholder=\"Password\"\n          name={props.name}\n          type={passwordType}\n          onFocus={() => setFaFocus(true)}\n          onChange={props.handleChange}\n          onBlur={() => setFaFocus(false)}\n          invalid={props.touched && props.error}\n        ></Input>\n        <InputGroupAddon addonType=\"append\">\n          {passwordType === \"password\" ? (\n            <InputGroupText\n              style={{\n                borderTopRightRadius: \"30px\",\n                borderBottomRightRadius: \"30px\",\n                borderColor: props.touched && props.error ? \"red\" : \"\",\n              }}\n              onClick={() => setPassword()}\n            >\n              <EyeIcon size={16} onClick={() => setPassword()} />\n            </InputGroupText>\n          ) : (\n            <InputGroupText\n              style={{\n                borderTopRightRadius: \"30px\",\n                borderBottomRightRadius: \"30px\",\n                borderColor: props.touched && props.error ? \"red\" : \"\",\n              }}\n              onClick={() => setPassword()}\n            >\n              <EyeClosedIcon size={16} onClick={() => setPassword()} />\n            </InputGroupText>\n          )}\n        </InputGroupAddon>\n        <FormFeedback type=\"invalid\">{props.error}</FormFeedback>\n      </InputGroup>\n    </FormGroup>\n  );\n};\n\nexport default PasswordField;\n","import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport config from \"../config\";\n\n// Import utils\nimport { yupRegistrationSchema } from \"../utils/constants/yupAuthSchema\";\n\n// Import components\nimport FixedTransparentNavbar from \"components/Navbars/FixedTransparentNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\nimport TosModal from \"../components/TosModal\";\nimport PrivacyPolicyModal from \"../components/PrivacyPolicyModal\";\nimport PasswordField from \"../components/PasswordField\";\n\n// Import reactstrap components\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Label,\n  FormGroup,\n  Form,\n  FormFeedback,\n  Input,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst Registration = () => {\n  const [recaptchaToken, setRecaptchaToken] = useState();\n  const [tosShow, setTosShow] = useState(false);\n  const [ppShow, setPpShow] = useState(false);\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    tos: \"false\",\n  };\n\n  const history = useHistory();\n\n  const submitForm = async (\n    values,\n    { setSubmitting, setFieldError, setStatus }\n  ) => {\n    // Set form as submitting\n    setSubmitting(true);\n    setStatus();\n\n    // Register the user\n    try {\n      await Auth.signUp({\n        username: values.email,\n        password: values.password,\n        validationData: [\n          {\n            Name: \"recaptchaToken\",\n            Value: recaptchaToken,\n          },\n        ],\n        attributes: {\n          name: values.name,\n        },\n      });\n      setSubmitting(false);\n      history.push({\n        pathname: \"/activate\",\n        search: \"?email=\" + values.email,\n      });\n    } catch (e) {\n      if (e.code === \"UsernameExistsException\") {\n        setFieldError(\n          \"email\",\n          \"This email already exists. Please use the login page instead\"\n        );\n      } else {\n        setStatus(e.code);\n      }\n      setSubmitting(false);\n    }\n  };\n\n  const captchaChange = (value) => {\n    setRecaptchaToken(value);\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <FixedTransparentNavbar />\n      <div className=\"page-header header-filter\" filter-color=\"blue-solid\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage: \"url(\" + require(\"assets/img/coding6.jpg\") + \")\",\n          }}\n        ></div>\n        <div className=\"content\">\n          <Container>\n            <Row>\n              <Col className=\"ml-auto mr-auto\" md=\"6\" lg=\"7\">\n                <div className=\"info info-horizontal\">\n                  <div className=\"icon icon-info\">\n                    <i className=\"now-ui-icons tech_tv\"></i>\n                  </div>\n                  <div className=\"description\">\n                    <h5 className=\"info-title\">Enriched Workspace</h5>\n                    <p className=\"description\">\n                      SkillsLounge labs are provisioned with Eclipse Theia that\n                      supports a varity of plugins and programming languages\n                      that offers a more realstic, enriched, working\n                      environment.\n                    </p>\n                  </div>\n                </div>\n                <div className=\"info info-horizontal\">\n                  <div className=\"icon icon-info\">\n                    <i className=\"now-ui-icons tech_watch-time\"></i>\n                  </div>\n                  <div className=\"description\">\n                    <h5 className=\"info-title\">Self Paced Learning</h5>\n                    <p className=\"description\">\n                      Learn at a pace that is managable and convient for you.\n                    </p>\n                  </div>\n                </div>\n                <div className=\"info info-horizontal\">\n                  <div className=\"icon icon-info\">\n                    <i className=\"now-ui-icons objects_spaceship\"></i>\n                  </div>\n                  <div className=\"description\">\n                    <h5 className=\"info-title\">Hassle Free</h5>\n                    <p className=\"description\">\n                      No installation steps neccessary. All tools and\n                      dependencies are automatically provisioned.\n                    </p>\n                  </div>\n                </div>\n              </Col>\n              <Col className=\"mr-auto\" md=\"6\" lg=\"5\">\n                <Card\n                  className=\"card-signup\"\n                  style={{\n                    borderRadius: \".5rem\",\n                  }}\n                >\n                  <CardBody>\n                    <CardTitle className=\"text-center\" tag=\"h4\">\n                      Register\n                    </CardTitle>\n                    <Formik\n                      validationSchema={yupRegistrationSchema}\n                      initialValues={initialState}\n                      onSubmit={submitForm}\n                    >\n                      {({\n                        values,\n                        status,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        setFieldError,\n                        handleSubmit,\n                        isSubmitting,\n                      }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                          {console.log(errors)}\n                          {console.log(values)}\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"fullname\"\n                              placeholder=\"Name\"\n                              type=\"text\"\n                              name=\"name\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              invalid={touched.name && errors.name}\n                            />\n                            <FormFeedback type=\"invalid\">\n                              {errors.name}\n                            </FormFeedback>\n                          </FormGroup>\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"email\"\n                              placeholder=\"Email\"\n                              type=\"text\"\n                              name=\"email\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              invalid={touched.email && errors.email}\n                            />\n                            <FormFeedback type=\"invalid\">\n                              {errors.email}\n                            </FormFeedback>\n                          </FormGroup>\n                          <PasswordField\n                            name=\"password\"\n                            value={values.password}\n                            handleChange={handleChange}\n                            handleBlur={handleBlur}\n                            touched={touched.password}\n                            error={errors.password}\n                          />\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"password\"\n                              placeholder=\"Confirm Password\"\n                              type=\"password\"\n                              name=\"passwordConfirmation\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              invalid={\n                                touched.passwordConfirmation &&\n                                errors.passwordConfirmation\n                              }\n                            />\n                            <FormFeedback type=\"invalid\">\n                              {errors.passwordConfirmation}\n                            </FormFeedback>\n                          </FormGroup>\n                          <FormGroup check>\n                            <Label check>\n                              <Input\n                                type=\"checkbox\"\n                                name=\"tos\"\n                                value={values.tos}\n                                onChange={handleChange}\n                              ></Input>\n                              <span className=\"form-check-sign\"></span>I agree to\n                              the&nbsp;\n                              <Button\n                                color=\"info\"\n                                className=\"p-0 m-0 btn-link\"\n                                onClick={() => setTosShow(true)}\n                              >\n                                terms of service\n                              </Button>\n                              &nbsp;&amp;&nbsp;\n                              <Button\n                                color=\"info\"\n                                className=\"p-0 m-0 btn-link\"\n                                onClick={() => setPpShow(true)}\n                              >\n                                privacy policy\n                              </Button>\n                              .\n                            </Label>\n                          </FormGroup>\n                          <ReCAPTCHA\n                            className=\"mt-3\"\n                            sitekey={config.CAPTCHA_SITE_KEY}\n                            onChange={captchaChange}\n                            style={{ display: \"inline-block\" }}\n                          />\n                          <CardFooter className=\"text-center m-0\">\n                            <Button\n                              className=\"btn-round\"\n                              color=\"info\"\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                            >\n                              Get Started\n                            </Button>\n                          </CardFooter>\n                          <div className=\"pull-right\" style={{ color: \"#444\" }}>\n                            <h6>\n                              Already have an account?{\" \"}\n                              <a className=\"link footer-link\" href=\"/login\">\n                                Sign In\n                              </a>\n                            </h6>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <Footer />\n        <TosModal show={tosShow} onHide={() => setTosShow(false)} />\n        <PrivacyPolicyModal show={ppShow} onHide={() => setPpShow(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Registration;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\n// Import utils\nimport { yupLoginSchema } from \"../utils/constants/yupAuthSchema\";\nimport { setUserData } from \"../utils/authentication\";\nimport { loadSession } from \"../utils/session\";\n\n// Import components\nimport FixedTransparentNavbar from \"components/Navbars/FixedTransparentNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\nimport PasswordField from \"../components/PasswordField\";\n\n// Import reactstrap components\nimport {\n  Button,\n  FormGroup,\n  Card,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Form,\n  FormFeedback,\n  Input,\n  Container,\n  Col,\n  Row,\n  Alert,\n} from \"reactstrap\";\n\nconst Login = () => {\n  const initialState = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const submitForm = async (\n    values,\n    { setSubmitting, setFieldError, setStatus }\n  ) => {\n    // Set form as submitting\n    setSubmitting(true);\n    setStatus();\n\n    // Register the user\n    try {\n      const user = await Auth.signIn({\n        username: values.email,\n        password: values.password,\n      });\n      setUserData(dispatch, user);\n      loadSession(dispatch, user.username);\n      setSubmitting(false)\n    } catch (e) {\n      if (e.code === \"UserNotConfirmedException\") {\n        setSubmitting(false);\n        history.push({\n          pathname: \"/activate\",\n          search: \"?email=\" + values.email,\n        });\n      } else {\n        if (\n          e.code === \"UserNotFoundException\" ||\n          e.code === \"NotAuthorizedException\"\n        ) {\n          setStatus(\"Incorrect username or password.\");\n        } else {\n          setStatus(e.message);\n        }\n        setSubmitting(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <FixedTransparentNavbar />\n      <div className=\"page-header header-filter\" filter-color=\"blue-solid\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage: \"url(\" + require(\"assets/img/coding7.jpg\") + \")\",\n          }}\n        ></div>\n        <div className=\"content\">\n          <Container>\n            <Row>\n              <Col />\n              <Col className=\"mr-auto\" md=\"6\" lg=\"5\">\n                <Card\n                  className=\"card-signup\"\n                  style={{\n                    borderRadius: \".5rem\",\n                  }}\n                >\n                  <CardBody>\n                    <CardTitle className=\"text-center\" tag=\"h4\">\n                      Login\n                    </CardTitle>\n                    <Formik\n                      validationSchema={yupLoginSchema}\n                      initialValues={initialState}\n                      onSubmit={submitForm}\n                    >\n                      {({\n                        values,\n                        status,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        setFieldError,\n                        handleSubmit,\n                        isSubmitting,\n                      }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                          <Alert\n                            color=\"danger\"\n                            style={{ borderRadius: \"1rem\" }}\n                            isOpen={status !== undefined}\n                          >\n                            {status}\n                          </Alert>\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"email\"\n                              placeholder=\"Email\"\n                              type=\"text\"\n                              name=\"email\"\n                              onChange={handleChange}\n                              invalid={touched.email && errors.email}\n                            ></Input>\n                            <FormFeedback type=\"invalid\">\n                              {errors.email}\n                            </FormFeedback>\n                          </FormGroup>\n                          <PasswordField\n                            name=\"password\"\n                            value={values.password}\n                            handleChange={handleChange}\n                            handleBlur={handleBlur}\n                            touched={touched.password}\n                            error={errors.password}\n                          />\n\n                          <CardFooter className=\"text-center m-0\">\n                            <Button\n                              className=\"btn-round\"\n                              color=\"info\"\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                            >\n                              Login\n                            </Button>\n                          </CardFooter>\n                          <div className=\"pull-left\">\n                            <h6>\n                              <a\n                                className=\"link footer-link\"\n                                href={`/register`}\n                              >\n                                Create Account\n                              </a>\n                            </h6>\n                          </div>\n                          <div className=\"pull-right\">\n                            <h6>\n                              <a\n                                className=\"link footer-link\"\n                                href={`/forgotpassword`}\n                              >\n                                Forgotten password?\n                              </a>\n                            </h6>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col />\n            </Row>\n          </Container>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react'\nimport { Formik } from \"formik\";\nimport { Auth } from 'aws-amplify'\nimport './Global.css'\nimport { yupActivationSchema } from \"../utils/constants/yupAuthSchema\";\nimport { useHistory } from \"react-router-dom\";\nimport { alert } from 'react-bootstrap-confirmation';\nimport FixedTransparentNavbar from \"components/Navbars/FixedTransparentNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\nimport { Container, Col, Row, Card, CardBody, CardFooter, CardTitle, Form, FormGroup, FormFeedback, Input, Button, Alert } from 'reactstrap'\n\n\nconst Activate = (props) => {\n\n    const urlParams = new URLSearchParams(props.location.search)\n\n    const initialState = {\n        code: \"\",\n    }\n\n    const history = useHistory();\n\n    const submitForm = async (values, { setSubmitting, setFieldError, setStatus }) => {\n        // Set form as submitting\n        setSubmitting(true);\n        setStatus()\n\n        // Register the user\n        try{\n            await Auth.confirmSignUp(urlParams.get('email'),values.code)\n\n            await alert('Account activation was successful. Please login on the next screen.');\n\n            history.push({\n                pathname: \"/login\",\n            });\n        } catch (e) {\n            setStatus(e.message)\n        }\n        setSubmitting(false);\n    }\n\n    const resendCode = async (email) => {\n        try{\n            await Auth.resendSignUp(urlParams.get('email'))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n  return (\n    <div className=\"signup-page\">\n      <FixedTransparentNavbar />\n      <div className=\"page-header header-filter\" filter-color=\"blue-solid\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage: \"url(\" + require(\"assets/img/coding7.jpg\") + \")\",\n          }}\n        ></div>\n        <div className=\"content\">\n          <Container>\n            <Row>\n              <Col />\n              <Col className=\"mr-auto\" md=\"6\" lg=\"5\">\n                <Card\n                  className=\"card-signup\"\n                  style={{\n                    borderRadius: \".5rem\",\n                  }}\n                >\n                  <CardBody>\n                    <CardTitle className=\"text-center\" tag=\"h4\">\n                      Activate\n                    </CardTitle>\n                    <Formik\n                      validationSchema={yupActivationSchema}\n                      initialValues={initialState}\n                      onSubmit={submitForm}\n                    >\n                      {({\n                        values,\n                        status,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        setFieldError,\n                        handleSubmit,\n                        isSubmitting,\n                      }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                          <Alert\n                            color=\"danger\"\n                            style={{ borderRadius: \"1rem\" }}\n                            isOpen={status !== undefined}\n                          >\n                            {status}\n                          </Alert>\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              name=\"code\"\n                              type=\"text\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              placeholder=\"Activation Code\"\n                              invalid={touched.code && errors.code}\n                            ></Input>\n                            <FormFeedback type=\"invalid\">\n                              {errors.code}\n                            </FormFeedback>\n                          </FormGroup>\n\n                          <CardFooter className=\"text-center m-0\">\n                            <Button\n                              className=\"btn-round\"\n                              color=\"info\"\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                            >\n                              Activate Account\n                            </Button>\n                          </CardFooter>\n                          <div className=\"pull-right\" style={{ color: \"#444\" }}>\n                            <h6>\n                              Lost the email?&nbsp;?{\" \"}\n                              <a\n                                className=\"link footer-link\"\n                                href=\"#!\"\n                                onClick={() =>\n                                  resendCode(urlParams.get(\"email\"))\n                                }\n                              >\n                                Send another\n                              </a>\n                            </h6>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col />\n            </Row>\n          </Container>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Activate\n","export const initialAchievementValues = {\n      maxpoints: '',\n      actualpoints: '',\n      achievements: []\n  }\n","import React from 'react'\n\nimport { Nav } from 'react-bootstrap'\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { ClippyIcon, LinkExternalIcon } from '@primer/octicons-react'\n\nimport { useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\n\nconst BaseListObjects = () => {\n\n    const sessionInfo = useSelector(getSession)\n\n    return sessionInfo.session.basePorts.map((v, i) => {\n        let baseUrl = 'https://' + sessionInfo.session.uuid + '-base' + v.port + '.sessions.' + process.env.REACT_APP_URL\n        if ( v.visible === true)\n            return <Nav.Item className=\"flex\" key={i}>\n                <Nav.Link eventKey={'base:' + v.port}>base:{v.port}</Nav.Link>\n                <CopyToClipboard text={baseUrl}>\n                    <Nav.Link className=\"px-0\"><ClippyIcon size={18}/></Nav.Link>\n                </CopyToClipboard>\n                <Nav.Link className=\"px-0 pl-2\" href={baseUrl} target=\"_blank\"><LinkExternalIcon  size={18}/></Nav.Link>\n            </Nav.Item>\n        else return null\n    })\n}\n\nexport default BaseListObjects\n","import React from 'react'\n\nimport { Nav } from 'react-bootstrap'\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { ClippyIcon, LinkExternalIcon } from '@primer/octicons-react'\n\nimport { useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\n\nconst LabsListObjects = () => {\n    const sessionInfo = useSelector(getSession);\n    try {\n        return sessionInfo.session.cDef.map(v =>\n            v.ports.map((a, i) => {\n                let serviceUrl = 'https://' + sessionInfo.session.uuid + '-' + v.shortName + a.port + '.sessions.' + process.env.REACT_APP_URL\n                if (a.visible === true)\n                    return <Nav.Item className=\"flex\" key={i}>\n                        <Nav.Link eventKey={v.shortName + ':' + a.port}>{v.shortName}:{a.port}</Nav.Link>\n                        <CopyToClipboard text={serviceUrl}>\n                            <Nav.Link className=\"px-0\"><ClippyIcon size={18} /></Nav.Link>\n                        </CopyToClipboard>\n                        <Nav.Link className=\"px-0 pl-2\" href={serviceUrl} target=\"_blank\"><LinkExternalIcon size={18} /></Nav.Link>\n                    </Nav.Item>\n                else return null\n            })\n        )\n    } catch (err) {\n        return null\n    }\n}\n\nexport default LabsListObjects\n","import { isUrlAvailable } from './http'\n\nconst REFRESH_FREQUENCY_IN_SGS = 15 * 1000\nconst REFRESH_MAX_NUMBER = 12\n\nexport const populateTabs = sessionInfo => {\n    const tabs = []\n    try {\n        const containerDefinition = sessionInfo.session.cDef\n        containerDefinition.map(containerDefinition =>\n            containerDefinition.ports.map((a, i) => a.visible ? tabs.push(\n                {\n                    key: i,\n                    shortName: containerDefinition.shortName,\n                    port: a.port,\n                    url: 'https://' + sessionInfo.session.uuid + '-' + containerDefinition.shortName + a.port + '.sessions.' + process.env.REACT_APP_URL,\n                    available: false\n                }) : ''))\n    } catch { }\n    return tabs\n}\n\nexport const populateBaseTabs = sessionInfo => {\n    const tabs = []\n    try {\n        sessionInfo.session.basePorts.map((a, i) => a.visible ? tabs.push(\n            {\n                key: i,\n                port: a.port,\n                url: 'https://' + sessionInfo.session.uuid + '-base' + a.port + '.sessions.' + process.env.REACT_APP_URL,\n                available: false\n            }) : '')\n    } catch { }\n    return tabs\n}\n\nconst populateUrls = sessionInfo => {\n    const urls = []\n    try {\n        const containerDefinition = sessionInfo.session.cDef\n        containerDefinition.map(containerDefinition =>\n            containerDefinition.ports.map((a, i) => a.visible ?\n                urls.push('https://' + sessionInfo.session.uuid + '-' + containerDefinition.shortName + a.port + '.sessions.' + process.env.REACT_APP_URL) : ''))\n    } catch { }\n    return urls\n}\n\nconst populateBaseUrls = sessionInfo => {\n    const urls = []\n    try {\n    sessionInfo.session.basePorts.map((a, i) => a.visible ?\n        urls.push('https://' + sessionInfo.session.uuid + '-base' + a.port + '.sessions.' + process.env.REACT_APP_URL) : '')\n    } catch {}\n    return urls\n}\n\nconst checkUrlInAvailabilityList = (url, urlAvailability) => {\n    let result = false\n    urlAvailability.map(_ => _.url === url ? result = _.isAvailable : '')\n    return result\n}\n\nconst refresh = async (tab, index, currentRefreshNumber, tabs, setTabs, isDelayedRefreshAlreadyActivated) => {\n    let available\n    if (currentRefreshNumber !== REFRESH_MAX_NUMBER) {\n        available = await isUrlAvailable(tab.url)\n        if (!available)\n            prepareRefresh(isDelayedRefreshAlreadyActivated, currentRefreshNumber, tabs, setTabs)\n    } else {\n        available = true\n    }\n    const updatedTabs = []\n    tabs.map(_ => updatedTabs.push(_))\n    updatedTabs[index].available = available\n    setTabs(updatedTabs)\n}\n\nconst prepareRefresh = (isDelayedRefreshAlreadyActivated, currentRefreshNumber, tabs, setTabs) => {\n    if (!isDelayedRefreshAlreadyActivated) {\n        setTimeout(() => {\n            isDelayedRefreshAlreadyActivated = false\n            tabs.map((value, index) => !value.available ? refresh(value, index, currentRefreshNumber, tabs, setTabs, isDelayedRefreshAlreadyActivated) : '')\n            currentRefreshNumber++\n        }, REFRESH_FREQUENCY_IN_SGS)\n        isDelayedRefreshAlreadyActivated = true\n    }\n}\n\nexport const labsFetchData = (sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber) =>\n    fetchData(sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber, populateUrls(sessionInfo), populateTabs)\n\nexport const baseFetchData = (sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber) =>\n    fetchData(sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber, populateBaseUrls(sessionInfo), populateBaseTabs)\n\n\nconst fetchData = async (sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber, urls, populateTabsFunction) => {\n    const urlAvailability = await Promise.all(urls.map(async url => {\n        const isAvailable = await isUrlAvailable(url)\n        if (!isAvailable && currentRefreshNumber <= REFRESH_MAX_NUMBER)\n            prepareRefresh(isDelayedRefreshAlreadyActivated, currentRefreshNumber, tabs, setTabs)\n        return ({ url, isAvailable })\n    }))\n    const newTabs = populateTabsFunction(sessionInfo)\n    newTabs.map(_ => _.available = checkUrlInAvailabilityList(_.url, urlAvailability))\n    setTabs(newTabs)\n}\n","import React, { useState, useEffect } from 'react'\nimport { Tab } from 'react-bootstrap'\nimport Iframe from 'react-iframe'\n\nimport { useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\n\nimport NoDataIndication from './NoDataIndication'\n\nimport { baseFetchData, populateBaseTabs } from '../utils/iframes'\n\nimport './BaseListIframes.css'\n\nconst BaseListIframes = () => {\n\n    const sessionInfo = useSelector(getSession)\n\n    const [tabs, setTabs] = useState(populateBaseTabs(sessionInfo))\n\n    let isDelayedRefreshAlreadyActivated = false\n    let currentRefreshNumber = 1\n\n    useEffect(() => {\n        baseFetchData(sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber) // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            { tabs.map(_ => {\n                return(\n                    <Tab.Pane key={'base:' + _.port + '-' + _.key} className=\"full-size-no-padding\" eventKey={'base:' + _.port}>\n                        { sessionInfo.isLabRunning && _.available ? <Iframe id=\"theia\" className=\"full-size-no-padding\" url={_.url}/> : <div className={'no-data-indication'}><NoDataIndication /></div> }\n                    </Tab.Pane>\n                )\n            })}\n        </>\n    )\n}\n\nexport default BaseListIframes\n","import React, { useState, useEffect } from 'react'\nimport { Tab } from 'react-bootstrap'\nimport Iframe from 'react-iframe'\n\nimport { useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\n\nimport NoDataIndication from './NoDataIndication'\n\nimport { populateTabs, labsFetchData } from '../utils/iframes'\n\nimport './LabsListIframes.css'\n\nconst LabsListIframes = () => {\n\n    const sessionInfo = useSelector(getSession)\n\n    const [tabs, setTabs] = useState(populateTabs(sessionInfo))\n\n    let isDelayedRefreshAlreadyActivated = false\n    let currentRefreshNumber = 1\n\n    useEffect(() => {\n        labsFetchData(sessionInfo, tabs, setTabs, isDelayedRefreshAlreadyActivated, currentRefreshNumber) // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n    <>\n        { tabs.map(_ => {\n            return(\n                <Tab.Pane key={_.shortName + ':' + _.port + '-' + _.key} className=\"full-size-no-padding\" eventKey={_.shortName + ':' + _.port}>\n                    { sessionInfo.isLabRunning && _.available ? <Iframe id=\"theia\" className=\"full-size-no-padding\" url={_.url}/> : <div className={'no-data-indication'}><NoDataIndication /></div> }\n                </Tab.Pane>\n            )\n        })}\n    </>\n    )\n}\n\nexport default LabsListIframes\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\nimport { initialAchievementValues } from '../utils/constants/initialAchievementValues'\nimport NoDataIndication from './NoDataIndication'\nimport { getAchievementsId } from '../utils/aws'\nimport './Achievements.css'\n\nimport { Progress } from 'reactstrap'\n\n// Import CSS\nimport '../views/Sandbox.css'\n\nimport { LockIcon } from '@primer/octicons-react'\n\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    CardFooter,\n    CardTitle\n  } from \"reactstrap\";\n\nconst Achievements = () => {\n\n    const sessionInfo = useSelector(getSession)\n\n    const [setShowError] = useState(false)\n    const [setApiError] = useState({})\n\n    const [initialAchievements, setInitialAchievements] = useState(initialAchievementValues);\n\n    const alertErrorFnc = (header, message, error) => {\n        setApiError({ header: header, message: message, data: error })\n        console.error(error)\n        setShowError(true)\n      }\n\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n      \n      \n    \n\n    useEffect(() => {\n        \n            // Load Achievements\n            if ( (sessionInfo.session.achievements === true) ) {\n                try {\n                  getAchievementsId(sessionInfo.session.achievementsId).then((item) => {\n                    if (typeof item === 'undefined' || item !== null) {\n                        // Get Achievements every 60 seconds\n                        sleep(60000).then(() => { setInitialAchievements(item); });\n                    }\n                  });\n                } catch (error) {\n                  alertErrorFnc(\n                    \"Getting Lab Achievements Failed\",\n                    \"Getting Lab Achievements Failed, please refresh page or try again later.\",\n                    error\n                  );\n                  console.error(error);\n                }\n              }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [initialAchievements])\n\n    if (typeof initialAchievements.achievements === 'undefined' || initialAchievements.achievements.length === 0) {  \n                return(\n                    <>\n                        <div className={'no-data-indication'}><NoDataIndication /></div>\n                    </>\n                )\n    } else {\n\n                return(\n                    <>\n                    <div className=\"progress-container progress-info\">\n                    <h4 className=\"info-title\">Score</h4>\n                        <Progress max={initialAchievements.maxpoints} value={initialAchievements.actualpoints}>\n                            <span className=\"progress-value\" style={{fontSize: \"20px\"}}>{initialAchievements.actualpoints} / {initialAchievements.maxpoints}</span>\n                        </Progress>\n                        <br></br><br></br>\n                    </div>\n                    <h4 className=\"info-title\">Details</h4>\n                    <Container className=\"achievement-container\">\n                    {\n\n                    initialAchievements.achievements && initialAchievements.achievements\n                            .sort((a, b) => a.number - b.number).map((d)=>{\n                                return(\n                \n                                        <Row key={d.number}>\n                                        <Col>\n                                            <Card>\n                                                <CardBody>\n                                                <h6 className=\"category text-danger\" style={d.acquired ? { fontStyle: 'strong'} : { fontStyle: 'italic'}}>\n                                                    \n                                                    {d.acquired ? <i className=\"now-ui-icons sport_trophy\"></i> : <LockIcon/> }\n                                                    \n                                                    &nbsp;&nbsp;Achievement {d.number} {d.acquired ? \"\" : \" - LOCKED\"}\n                                                </h6>\n                                                <CardTitle style={d.acquired ? { fontStyle: 'strong'} : { fontStyle: 'italic'}}>\n                                                    {d.title}\n                                                </CardTitle>\n                                                <p className=\"card-description\" style={d.acquired ? { fontStyle: 'strong'} : { fontStyle: 'italic'}}>\n                                                {d.description}\n                                                </p>\n                                                <CardFooter>\n                                                <div className=\"stats stats-left\">\n                                                <i className={d.acquired ?  \"now-ui-icons ui-1_check\" : \"now-ui-icons ui-1_simple-remove\"} \n                                                        style={d.acquired ? { color: \"green\" } : { color: \"red\" }}></i>\n                                                </div>\n                                                    <div className=\"stats stats-right\" style={d.acquired ? { fontStyle: 'strong'} : { fontStyle: 'italic'}}>\n                                                    <i className=\"now-ui-icons ui-1_calendar-60\"></i>\n                                                    {d.date}<br></br>\n                                                    <i className=\"now-ui-icons location_bookmark\"></i>\n                                                    {d.points} / {d.maxpoints}\n                                                    </div>\n                                                </CardFooter>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                        </Row>\n                                )\n                        })\n                    }\n                    </Container>\n                    </>\n                )\n    }\n}\n\nexport default Achievements\n","import React from 'react'\n\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nimport './TOC.css'\n\nconst TOC = props => {\n\n    const toc = []\n\n    if (props.slides) {\n        props.slides.forEach((slide, index) => {\n            slide.split('\\n').forEach(line => {\n                let trimmedLine = line.trim()\n                if (trimmedLine.startsWith('# ')) {\n                    toc.push({ position: index + 1, text: trimmedLine.substring(1) })\n                }\n            })\n        })\n    }\n\n    return (\n        <UncontrolledDropdown direction=\"up\">\n            <DropdownToggle caret color=\"primary\" id=\"dropdown-basic\">\n                Table of Contents\n            </DropdownToggle>\n\n            <DropdownMenu style={{overflow: \"none\"}}>\n                { toc.map( (_, index) =>\n                    <DropdownItem key={index} onClick={() => { props.handleJumpTo(_.position) }}>{_.text}</DropdownItem>\n                    \n                )}\n            </DropdownMenu>\n        </UncontrolledDropdown>\n    )\n}\n\nexport default TOC\n","import React, { useEffect, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { ChevronRightIcon, ChevronLeftIcon } from '@primer/octicons-react'\n\n// Import redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSession } from '../redux/slices/sessionSlice'\nimport { setCurrentSlide } from '../redux/slices/sessionSlice'\n\n// Import reactstrap\nimport { Container, Row, Col, Button, Progress, Input } from 'reactstrap'\n\n// Import components\nimport TOC from '../components/TOC'\nimport config from '../config'\n\n// Import CSS\nimport './Slides.css'\n\nconst Slides = props => {\n\n    const AWS_BUCKET_URL = `https://${config.s3.BUCKET}.s3-${config.s3.REGION}.amazonaws.com/public/`\n\n    const dispatch = useDispatch()\n\n    const session = useSelector(getSession)\n\n    const [ current, setCurrent ] = useState(session.currentSlide)\n    const [ slides, setSlides ]= useState([])\n    const [ fontSize, setFontSize ] = useState(18)\n\n    useEffect(() => {\n      setSlides(props.readme.trim().split(\"---\"))\n      return () => dispatch(setCurrentSlide(current))\n    }, [current, dispatch, props.readme])\n\n    const handleChangeClickNext = () => { if (current < slides.length) setCurrent(current + 1)}\n\n    const handleChangeClickPrev = () => { if (1 < current) setCurrent(current - 1)}\n\n    const handleKeyUpJumpTo = event => {\n      const parsedValue = parseInt(event.target.value)\n      if (event.key === 'Enter' || event.keyCode === 13) {\n          if ((parsedValue >= 1) && (parsedValue <= slides.length) && !isNaN(parsedValue)) {\n            setCurrent(parsedValue)\n            event.target.value = ''\n          } else {\n            event.target.value = current\n          }\n      }\n    }\n\n    const handleKeyUpFontSize = event => {\n        const parsedValue = parseInt(event.target.value)\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            if ((parsedValue >= 1) && !isNaN(parsedValue)) {\n                setFontSize(parsedValue)\n                event.target.value = ''\n            } else {\n                event.target.value = current\n            }\n        }\n    }\n\n    const handleKeyDown = event => {\n        switch (event.keyCode) {\n            case 37:\n                handleChangeClickPrev()\n                break\n            case 39:\n                handleChangeClickNext()\n                break\n            default:\n        }\n    }\n\n    const handleJumpTo = _ => setCurrent(_)\n\n    return (\n      <Container\n        className=\"container-fluid d-flex flex-column align-items-center justify-content-center p-0 h-100\"\n        fluid\n      >\n        <Row className=\"w-100 markdown flex-fill\" md={12}>\n          <Col\n            className=\"slides align-items-center justify-content-center m-0\"\n            style={{ fontSize: fontSize }}\n          >\n            <ReactMarkdown\n              source={slides ? slides[current - 1] : \"\"} // eslint-disable-next-line\n              renderers={{\n                image: (props) => (\n                  <img\n                    {...props}\n                    alt=\"\"\n                    style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n                  />\n                ),\n              }}\n              transformImageUri={(uri) =>\n                uri.startsWith(\"http\" || \"https\")\n                  ? uri\n                  : uri.startsWith(\"/\")\n                  ? `${AWS_BUCKET_URL}${session.session.labId}${uri}`.toLowerCase()\n                  : `${AWS_BUCKET_URL}${session.session.labId}/${uri}`.toLowerCase()\n              }\n            />\n          </Col>\n        </Row>\n\n        <div className=\"progressBar d-flex flex-row align-items-center justify-content-center p-2 w-100\">\n          <div className=\"px-2\">\n            <TOC slides={slides} handleJumpTo={handleJumpTo} />\n          </div>\n          <div className=\"fontSizeContainer align-items-center justify-content-center d-flex px-2\">\n            <label className=\"m-0\">Font Size</label>\n            <Input\n              placeholder={fontSize}\n              onKeyUp={handleKeyUpFontSize}\n            />\n          </div>\n          <div className=\"progress-container progress-primary px-3 flex-fill\">\n            <Progress animated min={0} max={slides.length} value={current}>\n              <span className=\"progress-value pr-3\">{`${current} / ${slides.length}`}</span>\n            </Progress>\n          </div>\n\n          <div className=\"jumpToContainer align-items-center justify-content-center d-flex px-2\">\n            <label className=\"m-0\">Go to</label>\n            <Input\n              placeholder={current}\n              onKeyUp={handleKeyUpJumpTo}\n              onKeyDown={handleKeyDown}\n            />\n          </div>\n          <div>\n            <Button\n              className=\"p-2 btn-link\"\n              style={{color:\"#f96332\"}}\n              color=\"info\"\n              onClick={handleChangeClickPrev}\n            >\n              <ChevronLeftIcon size={30} />\n            </Button>\n            <Button\n              className=\"p-2 btn-link\"\n              style={{color:\"#f96332\"}}\n              color=\"info\"\n              onClick={handleChangeClickNext}\n            >\n              <ChevronRightIcon size={30} />\n            </Button>\n          </div>\n        </div>\n      </Container>\n    );\n}\n\nexport default Slides\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getSession, setReadme } from '../redux/slices/sessionSlice'\nimport { getUser } from '../redux/slices/userSlice'\nimport Iframe from 'react-iframe'\nimport { TrashcanIcon } from '@primer/octicons-react'\n\n// Import utils\nimport { s3Download } from '../utils/aws'\nimport { checkLabSessionStatus } from '../utils/lab'\nimport { initialAchievementValues } from '../utils/constants/initialAchievementValues'\n\n\n// Import components\nimport FixedWhiteNavbar from \"components/Navbars/FixedWhiteNavbar.js\";\nimport AlertModal from '../components/AlertModal'\nimport BaseListObjects from '../components/BaseListObjects'\nimport LabsListObjects from '../components/LabsListObjects'\nimport BaseListIframes from '../components/BaseListIframes'\nimport LabsListIframes from '../components/LabsListIframes'\nimport Achievements from '../components/Achievements'\nimport DestroySessionModal from '../components/DestroySessionModal'\nimport Slides from \"./Slides\";\n\n// Import reactstrap\nimport { Container, Tab, Card, Row, Nav, Col, Button } from 'react-bootstrap'\n\n// Import CSS\nimport './Sandbox.css'\n\nconst Sandbox = () => {\n\n  const sessionInfo = useSelector(getSession)\n\n  const [initialAchievements] = useState(initialAchievementValues);\n  const userInfo = useSelector(getUser)\n\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  const [showError, setShowError] = useState(false)\n  const [apiError, setApiError] = useState({})\n\n  // DestroySessionModal states\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      if (sessionInfo.isLoaded && sessionInfo.isLabActive) {\n        if (!sessionInfo.isLabRunning && (sessionInfo.session.cDef.length > 0 || sessionInfo.session.shell || sessionInfo.session.ide)) {\n          await checkLabSessionStatus(dispatch)\n            .catch(error => {\n              alertErrorFnc('Problem with Check Status', 'There is some problems with Check Status task, please refresh page or try it later.', error)\n            })\n\n        }\n\n        if (sessionInfo.readme === '') {\n          try {\n            await s3Download(sessionInfo.session.labId)\n              .then(data => data.Body.text()\n                .then(text => dispatch(setReadme(text))))\n          } catch (error) {\n            dispatch(setReadme('Downloading of README.md went wrong!'))\n            alertErrorFnc('Problem with Loading Readme', 'There is some problems with Loading Readme, please refresh page or try it later.', error)\n          }\n        }\n      }\n    }\n    onLoad()\n  }, [sessionInfo, history, dispatch, userInfo, initialAchievements]);\n\n  const alertErrorFnc = (header, message, error) => {\n    setApiError({ header: header, message: message, data: error })\n    console.error(error)\n    setShowError(true)\n  }\n\n\n  return (\n    <div className=\"vh-100\">\n      <FixedWhiteNavbar />\n      <Container style={{ height: \"calc(100vh - 53px)\" }} fluid>\n        <Tab.Container defaultActiveKey=\"general\">\n          <Row className=\"h-100\">\n            <Col className=\"h-100 p-3 side-menu\" sm={2}>\n              <Button variant=\"danger\" className=\"my-2\" block onClick={handleShow}>\n                <TrashcanIcon /> End Lab</Button>\n              <hr className=\"half-rule\" />\n              <Nav className=\"flex-column\" defaultActiveKey=\"general\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"general\">General</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link disabled={!sessionInfo.session.achievements} eventKey=\"achievements\">Achievements <i className=\"now-ui-icons sport_trophy\"></i></Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"slides\">Slides</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link disabled={!sessionInfo.session.shell} eventKey=\"terminal\">Terminal</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link disabled={!sessionInfo.session.ide} eventKey=\"ide\">IDE</Nav.Link>\n                </Nav.Item>\n                {sessionInfo.session.achievementsDebug ?\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"debug\"><i>* DEBUG *</i></Nav.Link>\n                  </Nav.Item> : null\n                }\n                <hr className=\"half-rule\" />\n                <Nav.Item>\n                  <Nav.Link disabled>Available Services</Nav.Link>\n                </Nav.Item>\n                {sessionInfo.isLabRunning ? <BaseListObjects /> : null}\n                {sessionInfo.isLabRunning ? <LabsListObjects /> : null}\n              </Nav>\n            </Col>\n            <Col className=\"p-0 h-100\" sm={10}>\n              <Tab.Content className=\"h-100\">\n                <Tab.Pane className=\"p-3\" eventKey=\"general\">\n                  <Card>\n                    <Card.Header>Name</Card.Header>\n                    <Card.Body>\n                      <Card.Text>{sessionInfo.session.labName}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                  <br />\n                  <Card>\n                    <Card.Header>Time reamining</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        {sessionInfo.remainingMins} min remaining\n                    </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Tab.Pane>\n\n\n                <Tab.Pane className=\"p-3\" eventKey=\"achievements\">\n                  <h1>Achievements</h1>\n                  <div>(Page will automatically refresh every 60 seconds)</div>\n                  <Achievements />\n                </Tab.Pane>\n                <Tab.Pane className=\"full-size-no-padding\" eventKey=\"slides\">\n                  <Slides readme={sessionInfo.readme} />\n                </Tab.Pane>\n                <Tab.Pane className=\"full-size-no-padding\" eventKey=\"terminal\">\n                  {sessionInfo.isLabRunning && sessionInfo.session.shell ? <Iframe id=\"wetty\" className=\"full-size-no-padding\" url={'https://' + (sessionInfo.session.uuid || sessionInfo.sessionId) + '-9999.sessions.' + process.env.REACT_APP_URL} /> : null}\n                </Tab.Pane>\n                <Tab.Pane className=\"full-size-no-padding\" eventKey=\"ide\">\n                  {sessionInfo.isLabRunning && sessionInfo.session.ide ? <Iframe id=\"theia\" className=\"full-size-no-padding\" url={'https://' + (sessionInfo.session.uuid || sessionInfo.sessionId) + '-9998.sessions.' + process.env.REACT_APP_URL} /> : null}\n                </Tab.Pane>\n                <Tab.Pane className=\"full-size-no-padding\" eventKey=\"debug\">\n                  {sessionInfo.isLabRunning && sessionInfo.session.achievementsDebug ? <Iframe id=\"achDebug\" className=\"full-size-no-padding\" url={'https://' + (sessionInfo.session.uuid || sessionInfo.sessionId) + '-9901.sessions.' + process.env.REACT_APP_URL} /> : null}\n                </Tab.Pane>\n                {sessionInfo.isLabRunning ? <BaseListIframes /> : null}\n                {sessionInfo.isLabRunning ? <LabsListIframes /> : null}\n              </Tab.Content>\n            </Col>\n          </Row>\n          <DestroySessionModal sessionInfo={sessionInfo} show={show} handleClose={handleClose} history={history} history_path=\"/labs\" />\n        </Tab.Container>\n        {apiError !== {} ? <AlertModal err={apiError} show={showError} onHide={() => { setShowError(false); setApiError({}) }} /> : null}\n      </Container>\n    </div>\n  )\n}\n\nexport default Sandbox\n","export const initialFormValues = {\n    labName: \"\",\n    description: \"\",\n    types: [],\n    categories: [],\n    resourcesCPUMEM: \"\",\n    timer: \"\",\n    active: false,\n    ide: false,\n    shell: false,\n    basePorts: [],\n    containerDefinition: [],\n    userUuid: \"\",\n    uuid: \"\",\n    baseGitUrl: \"\",\n    achievements: false,\n    achievementsImage: \"\",\n    achievementsDebug: false\n  }","\nexport function compare(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = a.value.toUpperCase();\n    const bandB = b.value.toUpperCase();\n  \n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n}\n\n","export const zipMimeOptions = [\n    \"application/zip\",\n    \"application/x-zip-compressed\"\n]","import * as Yup from \"yup\";\nimport JSZip from 'jszip';\nimport { zipMimeOptions } from \"./zipMimeOptions\";\n\nasync function zipValidation(file) {\n  if(file){\n    console.log(file)\n\n    let fileNames =[]\n    let readmeFound = false\n    let new_zip = new JSZip()\n    readmeFound = await new_zip.loadAsync(file)\n      .then(function(zip) {\n        zip.forEach(function (file) {\n          fileNames.push(file.toLowerCase())\n        })\n        return fileNames.includes('readme.md')\n      })\n    return readmeFound\n  }\n}\n\nexport const yupSchema = (props) => Yup.object().shape({\n    labName: Yup.string()\n      .min(2, \"* Names must have at least 2 characters\")\n      .max(100, \"* Names can't be longer than 100 characters\")\n      .required(\"* Name is required\"),\n    description: Yup.string().required(\"* Description is required\"),\n    baseGitUrl: Yup.string()\n      .notRequired()\n      .matches(/^(git@[\\w.-]+)(:(\\/\\/)?)([\\w.@:/~-]+)(\\.git)(\\/)?$/, \"* Please enter a valid ssh URL\"),\n    categories: Yup.array()\n      .nullable()\n      .required(\"* Pick at least 1 Category\")\n      .of(\n        Yup.object().shape({\n          label: Yup.string().required(),\n          value: Yup.string().required(),\n        })\n      ),\n    types: Yup.array()\n      .nullable()\n      .required(\"* Pick at least 1 Type\")\n      .of(\n        Yup.object().shape({\n          label: Yup.string().required(),\n          value: Yup.string().required(),\n        })\n      ),\n    resourcesCPUMEM: Yup.string()\n      .nullable()\n      .required(\"* Please select a Resource Setting\"),\n    timer: Yup.string().required(\"* Please select a Timer Duration\"),\n    containerDefinition: Yup.array().of(\n      Yup.object().shape({\n        shortName: Yup.string().required(\"* Enter a Short Name\"),\n        image: Yup.string().required(\"* Enter an image name\"),\n      })\n    ),\n    achievements: Yup.boolean(),\n    achievementsImage: Yup.string()\n    .when(\"achievements\", {\n        is: true,\n        then: Yup.string().required( \"* Achievements are enabled, an image name is required.\")\n    }),\n\n    // achievementsDebug can't be enabled if active is enabled\n    active: Yup.boolean(),\n    achievementsDebug: Yup.boolean()\n    .when(\"active\", {\n      is: true,\n      then: Yup.boolean().oneOf([false], '* Debug cannot be enabled for an active lab.')\n    })\n\n    // achievementsDebug can't be enabled if achievements is disabled\n    .when(\"achievements\", {\n      is: false,\n      then: Yup.boolean().oneOf([false], '* Debug cannot be enabled for disabled achievements.')\n    }),\n\n    file: Yup.mixed()\n    .nullable()\n    .notRequired()\n    .test(\n        \"required\",\n        \"* README is required\",\n        value => props.location.pathname.includes(\"/edititem\") || value\n    )\n    .test(\n      \"readme in zip\",\n      \"* Your zip file must include a readme\",\n      async file => {\n        if (file && zipMimeOptions.includes(file.type)) {\n          return await zipValidation(file)\n        } else {\n          return true \n        }\n      }\n    )\n    .test(\n      \"size\",\n      \"* Max attachment size is 20MB\",\n      value => !value || props.location.pathname.includes(\"/edititem\") || (value && value.size <= 20000000 )\n    )\n    .test(\n      \"fileFormat\",\n      \"* Unsupported Format\",\n      value => !value || props.location.pathname.includes(\"/edititem\") || (value && ( value.name.includes(\".md\") || value.name.includes(\".zip\") ))\n    )\n  });","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { TrashcanIcon, PlusIcon } from \"@primer/octicons-react\";\nimport { Formik, FieldArray } from \"formik\";\n\n// Import redux\nimport { useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/slices/userSlice\";\n\n// Import utils\nimport { getLabId, addLab, updateLab, s3Upload, getGroups } from \"../utils/aws\";\nimport { processZip } from \"../utils/lab\";\nimport { initialFormValues } from \"../utils/constants/initialFormValues\";\nimport { compare } from \"../utils/compare\";\nimport { yupSchema } from \"../utils/constants/yupSchema\";\nimport {\n  categoryOptions,\n  timerOptions,\n  resourceOptions,\n} from \"../utils/constants/categoryOptions\";\n\n// Import components\nimport AlertModal from \"../components/AlertModal\";\nimport FixedWhiteNavbar from \"components/Navbars/FixedWhiteNavbar.js\";\n\n// Import reactstrap\nimport {\n  Button,\n  Col,\n  Row,\n  Container,\n  Nav,\n  NavItem,\n  NavLink,\n  Breadcrumb,\n  BreadcrumbItem,\n  TabContent,\n  TabPane,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  CustomInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Form\n} from \"reactstrap\";\n\n// Import css\nimport \"./Editor.css\"\n\n\n\nconst EditItem = (props) => {\n  const userInfo = useSelector(getUser);\n\n  const history = useHistory();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [loadingData, setLoadingData] = useState(false);\n  const [appError, setAppError] = useState({});\n  const [initialState, setInitialState] = useState(initialFormValues);\n  const [hTabs, setHTabs] = React.useState(\"1\");\n  const [groups, setGroups] = useState([]);\n\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    const groupFilter = (data) => {\n      let grps = [];\n      data = data.filter((item) => item.GroupName !== \"Admin\");\n      data = data.filter((item) => item.GroupName !== \"Developer\");\n      if (\n        userInfo.userGroups.length === 0 ||\n        (userInfo.userGroups.length === 1 &&\n          userInfo.userGroups.includes(\"Developer\"))\n      ) {\n        data = data.filter((item) => item.GroupName === \"devopsplayground\");\n      } else if (userInfo.userGroups.includes(\"Admin\")) {\n        // nothing to do in Admin\n      } else {\n        data = data.filter(({ GroupName: id1 }) =>\n          userInfo.userGroups.some((item) => item === id1)\n        );\n      }\n      data.map((item) =>\n        grps.push({ value: item.GroupName, label: item.Description })\n      );\n      setGroups(grps);\n    };\n\n    const onLoad = async () => {\n      await getGroups().then((groups) => groupFilter(groups));\n      if (props.location.pathname.includes(\"/edititem\")) {\n        if (\n          props.match.params.id !== \"\" ||\n          props.match.params.id !== undefined\n        ) {\n          setLoadingData(true);\n          try {\n            await getLabId(props.match.params.id).then((item) => {\n              setInitialState(item);\n              setDisabled(!item.achievements)\n            });\n          } catch (error) {\n            alertErrorFnc(\n              \"Problem during loading\",\n              \"Lab loading failed, please refresh page or try again later.\",\n              error\n            );\n            console.error(error);\n          }\n          setLoadingData(false);\n        }\n      }\n    };\n    onLoad();\n  }, [props, userInfo.userGroups]);\n\n  const returnToLabs = () => history.push(\"/labs\");\n\n  const saveItem = async (values) => {\n    try {\n      if (props.location.pathname.includes(\"/edititem\")) {\n        await updateLab(values);\n      } else {\n        await addLab(values);\n      }\n      console.log(\"Saved\");\n    } catch (error) {\n      alertErrorFnc(\n        \"Warning\",\n        \"Lab creation error. Check your settings.\",\n        null\n      );\n      console.error(error);\n    }\n  };\n\n  const alertErrorFnc = (header, message, err) => {\n    setAppError({ header: header, message: message, data: err });\n    setShowAlert(true);\n  };\n\n  const submitForm = async (values, { setSubmitting }) => {\n    // Set form as submitting\n    setSubmitting(true);\n\n    // Store additional data required for new items\n    if (props.location.pathname.includes(\"/additem\")) {\n      values[\"userUuid\"] = userInfo.userUuid;\n    }\n\n    // Upload README or ZIP\n    if (values.file !== null && values.file !== undefined) {\n      if (values.file.name.toLowerCase().includes(\".zip\")) {\n        console.log(\"process zip\");\n        await processZip(values.uuid, values.file);\n      } else {\n        console.log(\"upload\");\n        await s3Upload(values.uuid, values.file, values.file.type);\n      }\n    }\n\n    // Remove file from values so doesnt get pushed to DB\n    delete values[\"file\"];\n\n    // Save the item to DB\n    await saveItem(values);\n\n    // Sets setSubmitting to false after form is reset\n    setSubmitting(false);\n\n    // Return the user to the labs page\n    returnToLabs();\n  };\n\n  return (\n    <>\n      <FixedWhiteNavbar />\n      <Container className=\"px-0\" fluid>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <a href=\"/\">Home</a>\n          </BreadcrumbItem>\n          {props.location.pathname.includes(\"/edititem\") ? (\n            <>\n              <BreadcrumbItem active>Edit item</BreadcrumbItem>\n              <BreadcrumbItem active>{props.match.params.id}</BreadcrumbItem>\n            </>\n          ) : (\n            <BreadcrumbItem active>Add item</BreadcrumbItem>\n          )}\n        </Breadcrumb>\n        <Nav className=\"nav-pills-primary p-3 justify-content-center\" pills>\n          <NavItem>\n            <NavLink\n              className={hTabs === \"1\" ? \"active\" : \"\"}\n              href=\"#pablo\"\n              onClick={(e) => {\n                e.preventDefault();\n                setHTabs(\"1\");\n              }}\n            >\n              General\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={hTabs === \"2\" ? \"active\" : \"\"}\n              href=\"#pablo\"\n              onClick={(e) => {\n                e.preventDefault();\n                setHTabs(\"2\");\n              }}\n            >\n              Base Container\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={hTabs === \"3\" ? \"active\" : \"\"}\n              href=\"#pablo\"\n              onClick={(e) => {\n                e.preventDefault();\n                setHTabs(\"3\");\n              }}\n            >\n              Custom Containers\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={hTabs === \"4\" ? \"active\" : \"\"}\n              href=\"#pablo\"\n              onClick={(e) => {\n                e.preventDefault();\n                setHTabs(\"4\");\n              }}\n            >\n              Achievements Container\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <Formik\n          validationSchema={yupSchema(props)}\n          initialValues={initialState}\n          enableReinitialize\n          onSubmit={submitForm}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            setFieldValue,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <Row className=\"justify-content-center\">\n              <Col md={6}>\n                <Form className=\"p-3 edit-form\" onSubmit={handleSubmit}>\n                  <TabContent className=\"tab-space\" activeTab={\"tabs\" + hTabs}>\n                    <TabPane tabId=\"tabs1\">\n                      <FormGroup>\n                        <Row>\n                          <Col>\n                            <Label>Lab Name:</Label>\n                          </Col>\n                          <Col>\n                            <FormText>\n                              {touched.labName && errors.labName ? (\n                                <div className=\"error-message\">\n                                  {errors.labName}\n                                </div>\n                              ) : null}\n                            </FormText>\n                          </Col>\n                        </Row>\n                        <Input\n                          value={values.labName}\n                          name=\"labName\"\n                          placeholder=\"Name\"\n                          disabled={loadingData}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          invalid={touched.labName && Boolean(errors.labName)}\n                        />\n                        <FormText>\n                          The name of the lab you want to create\n                        </FormText>\n                      </FormGroup>\n                      <FormGroup>\n                        <Row>\n                          <Col>\n                            <Label>Description:</Label>\n                          </Col>\n                          <Col>\n                            <FormText>\n                              {touched.description && errors.description ? (\n                                <div className=\"error-message\">\n                                  {errors.description}\n                                </div>\n                              ) : null}\n                            </FormText>\n                          </Col>\n                        </Row>\n                        <Input\n                          value={values.description}\n                          type=\"textarea\"\n                          name=\"description\"\n                          placeholder=\"Description\"\n                          disabled={loadingData}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          invalid={touched.description && Boolean(errors.description)}\n                        />\n                        <FormText>Description of the lab</FormText>\n                      </FormGroup>\n                      <div className=\"form-row\">\n                        <FormGroup className=\"col-md-6\">\n                          <Row>\n                            <Col>\n                              <Label>Categories:</Label>\n                            </Col>\n                            <Col>\n                              <FormText>\n                                {touched.categories && errors.categories ? (\n                                  <div className=\"error-message\">\n                                    {errors.categories}\n                                  </div>\n                                ) : null}\n                              </FormText>\n                            </Col>\n                          </Row>\n                          <Select\n                            isMulti\n                            value={values.categories}\n                            options={categoryOptions.sort(compare)}\n                            isDisabled={loadingData}\n                            className={`react-select ${\n                              touched.categories && errors.categories\n                                ? \"rounded-error\"\n                                : null\n                            }`}\n                            classNamePrefix=\"react-select\"\n                            closeMenuOnSelect={false}\n                            onBlue={handleBlur}\n                            onChange={(e) => setFieldValue(\"categories\", e)}\n                          />\n                          <FormText>\n                            Which technology categories are associated\n                          </FormText>\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Row>\n                            <Col>\n                              <Label>Type:</Label>\n                            </Col>\n                            <Col>\n                              <FormText>\n                                {touched.types && errors.types ? (\n                                  <div className=\"error-message\">\n                                    {errors.types}\n                                  </div>\n                                ) : null}\n                              </FormText>\n                            </Col>\n                          </Row>\n                          <Select\n                            isMulti\n                            value={values.types}\n                            options={groups.sort(compare)}\n                            isDisabled={loadingData}\n                            closeMenuOnSelect={false}\n                            onBlue={handleBlur}\n                            className={`react-select ${\n                              touched.types && errors.types\n                                ? \"rounded-error\"\n                                : null\n                            }`}\n                            classNamePrefix=\"react-select\"\n                            onChange={(e) => setFieldValue(\"types\", e)}\n                          />\n                          <FormText>\n                            What type of content the lab belongs to.\n                          </FormText>\n                        </FormGroup>\n                      </div>\n                      <div className=\"form-row\">\n                        <FormGroup className=\"col-md-6\">\n                          <Row>\n                            <Col>\n                              <Label>Resource Setting:</Label>\n                            </Col>\n                            <Col>\n                              <FormText>\n                                {touched.resourcesCPUMEM &&\n                                errors.resourcesCPUMEM ? (\n                                  <div className=\"error-message\">\n                                    {errors.resourcesCPUMEM}\n                                  </div>\n                                ) : null}\n                              </FormText>\n                            </Col>\n                          </Row>\n                          <Select\n                            value={values.resourcesCPUMEM}\n                            options={resourceOptions}\n                            isDisabled={loadingData}\n                            closeMenuOnSelect={true}\n                            className={`react-select ${\n                              touched.resourcesCPUMEM && errors.resourcesCPUMEM\n                                ? \"rounded-error\"\n                                : null\n                            }`}\n                            classNamePrefix=\"react-select\"\n                            onChange={(e) =>\n                              setFieldValue(\"resourcesCPUMEM\", e)\n                            }\n                          />\n                          <FormText>\n                            Memory and CPU settings for your lab\n                          </FormText>\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Row>\n                            <Col>\n                              <Label>Duration:</Label>\n                            </Col>\n                            <Col>\n                              <FormText>\n                                {touched.timer && errors.timer ? (\n                                  <div className=\"error-message\">\n                                    {errors.timer}\n                                  </div>\n                                ) : null}\n                              </FormText>\n                            </Col>\n                          </Row>\n                          <Select\n                            required\n                            options={timerOptions}\n                            value={values.timer}\n                            isDisabled={loadingData}\n                            closeMenuOnSelect={true}\n                            className={`react-select ${\n                              touched.timer && errors.timer\n                                ? \"rounded-error\"\n                                : null\n                            }`}\n                            classNamePrefix=\"react-select\"\n                            onChange={(e) => setFieldValue(\"timer\", e)}\n                          />\n                          <FormText>Maximum time for running lab</FormText>\n                        </FormGroup>\n                      </div>\n                      <div className=\"form-row\">\n                        <FormGroup check className=\"col-md-6\">\n                          <Label check className=\"p-0\">\n                            <CustomInput\n                              type=\"switch\"\n                              name=\"active\"\n                              label=\"Activate Lab\"\n                              size=\"lg\"\n                              id=\"active\"\n                              disabled={loadingData}\n                              checked={values.active}\n                              onChange={handleChange}\n                            />\n                          </Label>\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Row>\n                            <Col>\n                              <Label>File:</Label>\n                            </Col>\n                            <Col>\n                              <FormText>\n                                {errors.file ? (\n                                  <div className=\"error-message\">\n                                    {errors.file}\n                                  </div>\n                                ) : null}\n                              </FormText>\n                            </Col>\n                          </Row>\n                          <Input\n                            type=\"file\"\n                            name=\"file\"\n                            disabled={loadingData}\n                            onChange={(event) => {\n                              setFieldValue(\n                                \"file\",\n                                event.currentTarget.files[0]\n                              );\n                            }}\n                            className={errors.file ? \"error\" : null}\n                          />\n                          <FormText color=\"muted\">\n                            This is some placeholder block-level help text for\n                            the above input. It's a bit lighter and easily wraps\n                            to a new line.\n                          </FormText>\n                        </FormGroup>\n                      </div>\n                    </TabPane>\n                    <TabPane tabId=\"tabs2\">\n                      <FormGroup>\n                        <CustomInput\n                          type=\"switch\"\n                          name=\"ide\"\n                          label=\"IDE Required?\"\n                          id=\"ide\"\n                          disabled={loadingData}\n                          checked={values.ide}\n                          onChange={handleChange}\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"switch\"\n                          name=\"shell\"\n                          label=\"Shell Required?\"\n                          id=\"shell\"\n                          disabled={loadingData}\n                          checked={values.shell}\n                          onChange={handleChange}\n                        />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label>Git URL for file import</Label>\n                        <Input\n                          value={values.baseGitUrl}\n                          name=\"baseGitUrl\"\n                          placeholder=\"git@bitbucket.org:ecs-group/<repo>.git\"\n                          disabled={loadingData}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          invalid={touched.baseGitUrl && errors.baseGitUrl}\n                        />\n                        <FormText>\n                          Git URL to files you want to appear in the IDE. Should\n                          be in SSH format!\n                        </FormText>\n                      </FormGroup>\n                      <Label>Exposed Ports</Label>\n                      <FieldArray\n                        name=\"basePorts\"\n                        render={({ insert, remove, push }) => (\n                          <Container className=\"p-0\">\n                            {values.basePorts.map((basePorts, baseIndex) => (\n                              <div key={baseIndex} className=\"form-row pb-3 h-100  justify-content-center align-items-center\">\n                                <div className=\"col-md-11\">\n                                  <InputGroup className=\"m-0\" key={baseIndex}>\n                                    <Input\n                                      type=\"name\"\n                                      name=\"basePort\"\n                                      placeholder=\"8080\"\n                                      value={basePorts.port ?? \"8080\"}\n                                      onChange={(e) =>\n                                        setFieldValue(\n                                          `basePorts.${baseIndex}.port`,\n                                          String(e.target.value)\n                                        )\n                                      }\n                                    />\n                                    <InputGroupAddon addonType=\"append\">\n                                      <InputGroupText\n                                        className=\"m-0 p-1\"\n                                        style={{\n                                          borderTopRightRadius: \"30px\",\n                                          borderBottomRightRadius: \"30px\",\n                                        }}\n                                      >\n                                        <FormGroup className=\"m-0\" check>\n                                          <Label check>\n                                            <Input\n                                              defaultChecked={basePorts.visible}\n                                              onChange={(e) =>\n                                                setFieldValue(\n                                                  `basePorts.${baseIndex}.visible`,\n                                                  e.target.checked\n                                                )\n                                              }\n                                              className=\"form-control-sm\"                                              \n                                              type=\"checkbox\"\n                                            ></Input>\n                                            UI Visible?{\" \"}\n                                            <span className=\"form-check-sign form-control-sm\">\n                                              <span className=\"check\"></span>\n                                            </span>\n                                          </Label>\n                                        </FormGroup>\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                  </InputGroup>\n                                </div>\n                                <div className=\"col-md-1 text-center justify-content-center align-items-center\">\n                                  <Button\n                                    className=\"btn-icon btn-round m-0\"\n                                    color=\"danger\"\n                                    onClick={() => remove(baseIndex)}\n                                  >\n                                    <TrashcanIcon />\n                                  </Button>\n                                </div>\n                              </div>\n                            ))}\n                            <Button\n                              className=\"btn btn-primary btn-round m-2\"\n                              variant=\"danger\"\n                              onClick={() => push({})}\n                            >\n                              <PlusIcon /> Add a port\n                            </Button>\n                          </Container>\n                        )}\n                      />\n                    </TabPane>\n                    <TabPane tabId=\"tabs3\">\n                      <FieldArray\n                        name=\"containerDefinition\"\n                        render={({ insert, remove, push }) => (\n                          <FormGroup className=\"p-3\">\n                            {values.containerDefinition.map(\n                              (containerDefinition, index) => (\n                                <FormGroup className=\"p-3 mt-3\" key={index}>\n                                  <div className=\"form-row pb-3 h-100\">\n                                    <div className=\"col-md-11\">\n                                      <h3 className=\"m-0\">\n                                        Definition #{index + 1}\n                                      </h3>\n                                    </div>\n                                    <div className=\"col-md-1 text-center justify-content-center align-items-center\">\n                                      <Button\n                                        color=\"danger\"\n                                        className=\"btn-icon btn-round\"\n                                        style={{ float: \"right\" }}\n                                        onClick={() => remove(index)}\n                                      >\n                                        <TrashcanIcon />\n                                      </Button>\n                                    </div>\n                                  </div>\n                                  <Row>\n                                    <Col>\n                                      <FormGroup>\n                                        <Row>\n                                          <Col>\n                                            <Label>Short Name:</Label>\n                                          </Col>\n                                          <Col>\n                                            <FormText>\n                                              {errors.containerDefinition &&\n                                              touched.containerDefinition &&\n                                              touched.containerDefinition\n                                                .length > 0 &&\n                                              errors.containerDefinition[index]\n                                                .shortName &&\n                                              touched.containerDefinition[index]\n                                                .shortName !== undefined ? (\n                                                <div className=\"error-message\">\n                                                  {\n                                                    errors.containerDefinition[\n                                                      index\n                                                    ].shortName\n                                                  }\n                                                </div>\n                                              ) : null}\n                                            </FormText>\n                                          </Col>\n                                        </Row>\n                                        <Input\n                                          type=\"name\"\n                                          name=\"shortName\"\n                                          placeholder=\"jenkins\"\n                                          value={containerDefinition.shortName}\n                                          onBlur={handleBlur}\n                                          onChange={(e) =>\n                                            setFieldValue(\n                                              `containerDefinition.${index}.shortName`,\n                                              e.target.value\n                                            )\n                                          }\n                                          invalid={\n                                            errors.containerDefinition &&\n                                            touched.containerDefinition &&\n                                            touched.containerDefinition.length >\n                                              0 &&\n                                            touched.containerDefinition[index]\n                                              .shortName &&\n                                            errors.containerDefinition[index]\n                                              .shortName\n                                          }\n                                        />\n                                        <FormText>\n                                          Short word (no spaces) to identify\n                                          image. E.g. jenkins\n                                        </FormText>\n                                      </FormGroup>\n                                    </Col>\n                                    <Col>\n                                      <FormGroup>\n                                        <Row>\n                                          <Col>\n                                            <Label>Image:</Label>\n                                          </Col>\n                                          <Col>\n                                            <FormText>\n                                              {errors.containerDefinition &&\n                                              touched.containerDefinition &&\n                                              touched.containerDefinition\n                                                .length > 0 &&\n                                              touched.containerDefinition[index]\n                                                .image &&\n                                              errors.containerDefinition[index]\n                                                .image ? (\n                                                <div className=\"error-message\">\n                                                  {\n                                                    errors.containerDefinition[\n                                                      index\n                                                    ].image\n                                                  }\n                                                </div>\n                                              ) : null}\n                                            </FormText>\n                                          </Col>\n                                        </Row>\n                                        <Input\n                                          value={containerDefinition.image}\n                                          type=\"name\"\n                                          name=\"image\"\n                                          placeholder=\"myapp/myapp\"\n                                          onChange={(e) =>\n                                            setFieldValue(\n                                              `containerDefinition.${index}.image`,\n                                              e.target.value\n                                            )\n                                          }\n                                          invalid={\n                                            errors.containerDefinition &&\n                                            touched.containerDefinition &&\n                                            touched.containerDefinition.length >\n                                              0 &&\n                                            errors.containerDefinition[index]\n                                              .image &&\n                                            errors.containerDefinition[index]\n                                              .image\n                                          }\n                                        />\n                                        <FormText>\n                                          This is the name of the container\n                                          image\n                                        </FormText>\n                                      </FormGroup>\n                                    </Col>\n                                  </Row>\n                                  <Row>\n                                    <Col>\n                                      <FormGroup>\n                                        <Label>Environment Variables</Label>\n                                        <Input\n                                          type=\"name\"\n                                          value={containerDefinition.envVars}\n                                          name=\"envVars\"\n                                          placeholder=\"key1=value1,key2=value2\"\n                                          onChange={(e) =>\n                                            setFieldValue(\n                                              `containerDefinition.${index}.envVars`,\n                                              e.target.value\n                                            )\n                                          }\n                                        />\n                                        <FormText>\n                                          The image environment variables\n                                        </FormText>\n                                      </FormGroup>\n                                    </Col>\n                                    <Col>\n                                      <FormGroup>\n                                        <Label>Path</Label>\n                                        <Input\n                                          value={containerDefinition.path}\n                                          type=\"name\"\n                                          name=\"path\"\n                                          placeholder=\"/jenkins\"\n                                          onChange={(e) =>\n                                            setFieldValue(\n                                              `containerDefinition.${index}.path`,\n                                              e.target.value\n                                            )\n                                          }\n                                        />\n                                      </FormGroup>\n                                    </Col>\n                                  </Row>\n                                  <Label>Volume Mount</Label>\n                                  <FieldArray\n                                    name={`containerDefinition[${index}].mountPoints`}\n                                    render={({ insert, remove, push }) => (\n                                      <Container className=\"p-0\">\n                                        {values.containerDefinition[\n                                          index\n                                        ].mountPoints.map(\n                                          (mountPoints, volumeIndex) => (\n                                            <div key={volumeIndex} className=\"form-row pb-3 h-100  justify-content-center align-items-center\">\n                                              <div className=\"col-md-11\">\n                                                <Input\n                                                  value={mountPoints.directory}\n                                                  type=\"name\"\n                                                  name=\"path\"\n                                                  placeholder=\"/var/jenkins_home\"\n                                                  onChange={(e) =>\n                                                    setFieldValue(\n                                                      `containerDefinition.${index}.mountPoints.${volumeIndex}.directory`,\n                                                      e.target.value\n                                                    )\n                                                  }\n                                                />\n                                              </div>\n                                              <div className=\"col-md-1 text-center justify-content-center align-items-center\">\n                                                <Button\n                                                  className=\"btn-icon btn-round m-0\"\n                                                  color=\"danger\"\n                                                  onClick={() =>\n                                                    remove(volumeIndex)\n                                                  }\n                                                >\n                                                  <TrashcanIcon />\n                                                </Button>\n                                              </div>\n                                            </div>\n                                          )\n                                        )}\n                                        <Button\n                                          className=\"btn btn-primary btn-round m-2\"\n                                          variant=\"danger\"\n                                          onClick={() =>\n                                            push({ directory: \"\" })\n                                          }\n                                        >\n                                          <PlusIcon /> Add a volume mount\n                                        </Button>\n                                      </Container>\n                                    )}\n                                  />\n                                  <Label>Ports</Label>\n                                  <FieldArray\n                                    name={`containerDefinition[${index}].ports`}\n                                    render={({ insert, remove, push }) => (\n                                      <Container className=\"p-0\">\n                                        {values.containerDefinition[index]\n                                          .ports &&\n                                        values.containerDefinition[index].ports\n                                          .length > 0\n                                          ? values.containerDefinition[\n                                              index\n                                            ].ports.map((ports, portIndex) => (\n                                              <div key={portIndex} className=\"form-row pb-3 h-100  justify-content-center align-items-center\">\n                                                <div className=\"col-md-11\">\n                                                  <InputGroup\n                                                    className=\"m-0\"\n                                                    key={portIndex}\n                                                  >\n                                                    <Input\n                                                      value={ports.port ?? \"\"}\n                                                      type=\"name\"\n                                                      name=\"port\"\n                                                      placeholder=\"8080\"\n                                                      onChange={(e) =>\n                                                        setFieldValue(\n                                                          `containerDefinition.${index}.ports.${portIndex}.port`,\n                                                          String(e.target.value)\n                                                        )\n                                                      }\n                                                    />\n                                                    <InputGroupAddon addonType=\"append\">\n                                                      <InputGroupText\n                                                        className=\"m-0 p-1\"\n                                                        style={{\n                                                          borderTopRightRadius:\n                                                            \"30px\",\n                                                          borderBottomRightRadius:\n                                                            \"30px\",\n                                                        }}\n                                                      >\n                                                        <FormGroup\n                                                          className=\"m-0\"\n                                                          check\n                                                        >\n                                                          <Label check>\n                                                            <Input\n                                                              defaultChecked={\n                                                                ports.visible\n                                                              }\n                                                              onChange={(e) =>\n                                                                setFieldValue(\n                                                                  `containerDefinition.${index}.ports.${portIndex}.visible`,\n                                                                  e.target\n                                                                    .checked\n                                                                )\n                                                              }\n                                                              className=\"form-control-sm\"\n                                                              type=\"checkbox\"\n                                                            ></Input>\n                                                            UI Visible?{\" \"}\n                                                            <span className=\"form-check-sign form-control-sm\">\n                                                              <span className=\"check\"></span>\n                                                            </span>\n                                                          </Label>\n                                                        </FormGroup>\n                                                      </InputGroupText>\n                                                    </InputGroupAddon>\n                                                  </InputGroup>\n                                                </div>\n                                                <div className=\"col-md-1 text-center justify-content-center align-items-center\">\n                                                  <Button\n                                                    className=\"btn-icon btn-round m-0\"\n                                                    color=\"danger\"\n                                                    onClick={() =>\n                                                      remove(portIndex)\n                                                    }\n                                                  >\n                                                    <TrashcanIcon />\n                                                  </Button>\n                                                </div>\n                                              </div>\n                                            ))\n                                          : null}\n                                        <Button\n                                          className=\"btn btn-primary btn-round m-2\"\n                                          variant=\"danger\"\n                                          onClick={() => push({})}\n                                        >\n                                          <PlusIcon /> Add a port\n                                        </Button>\n                                      </Container>\n                                    )}\n                                  />\n                                </FormGroup>\n                              )\n                            )}\n                            <div className=\"form-row py-3 h-100\">\n                              <div className=\"col-md-12 text-center justify-content-center align-items-center\">\n                                <Button\n                                  color=\"primary\"\n                                  type=\"button\"\n                                  className=\"btn-round m-0\"\n                                  disabled={loadingData}\n                                  onClick={() =>\n                                    push({\n                                      shortName: \"\",\n                                      image: \"\",\n                                      path: \"\",\n                                      envVars: \"\",\n                                      mountPoints: [],\n                                    })\n                                  }\n                                >\n                                  Add Custom Container <PlusIcon />\n                                </Button>\n                              </div>\n                            </div>\n                          </FormGroup>\n                        )}\n                      />\n                    </TabPane>\n                    <TabPane tabId=\"tabs4\">\n                    <FormGroup check className=\"col-md-6\">\n                          <Label check className=\"p-0\">\n                            <CustomInput\n                              type=\"switch\"\n                              name=\"achievements\"\n                              label=\"Achievements Enabled?\"\n                              size=\"lg\"\n                              id=\"achievements\"\n                              disabled={loadingData}\n                              checked={values.achievements}\n                              onChange={handleChange}\n                              onClick={() => {\n                                setDisabled(!disabled);\n                              }}\n                            />\n                          </Label>\n                        </FormGroup>\n                        <FormGroup>\n                        <br></br>\n                        <Row>\n                          <Col>\n                            <Label>Image:</Label>\n                          </Col>\n                          <Col>\n                        <FormText>\n                              {touched.achievementsImage && errors.achievementsImage ? (\n                                <div className=\"error-message\">\n                                  {errors.achievementsImage}\n                                </div>\n                              ) : null}\n                            </FormText>\n                            </Col>\n                        </Row>\n                              <Input\n                                value={values.achievementsImage}\n                                name=\"achievementsImage\"\n                                placeholder=\"\"\n                                disabled={loadingData || disabled }\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                invalid={touched.achievementsImage && Boolean(errors.achievementsImage)}\n                              />\n                            <FormText>\n                              This is the name of the achievements\n                              image\n                            </FormText>\n                        </FormGroup>\n                        <br></br>\n                        <FormGroup check className=\"col-md-6\">\n                          <Label check className=\"p-0\">\n                            <CustomInput\n                              type=\"switch\"\n                              name=\"achievementsDebug\"\n                              label=\"Debug Shell Enabled?\"\n                              size=\"lg\"\n                              id=\"achievementsDebug\"\n                              disabled={loadingData || disabled}\n                              checked={values.achievementsDebug}\n                              onChange={handleChange}\n                            />\n                          </Label>\n                        </FormGroup>\n                        <FormText>\n                              Activates debug shell.\n                        </FormText>\n                        <FormText>\n                              {touched.achievementsDebug && errors.achievementsDebug ? (\n                                <div className=\"error-message\">\n                                  {errors.achievementsDebug}\n                                </div>\n                              ) : null}\n                            </FormText>\n                    </TabPane>\n                  </TabContent>\n                  <Container fluid>\n                    <Row>\n                      <Col style={{ textAlign: \"center\" }}>\n                        <Button\n                          color=\"danger\"\n                          onClick={returnToLabs}\n                          size=\"lg\"\n                          className=\"btn-round m-3\"\n                          disabled={isSubmitting || loadingData}\n                        >\n                          {\" \"}\n                          Back{\" \"}\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          type=\"submit\"\n                          size=\"lg\"\n                          className=\"btn-round m-3\"\n                          disabled={isSubmitting || loadingData}\n                        >\n                          {\" \"}\n                          Save\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Container>\n                </Form>\n              </Col>\n            </Row>\n          )}\n        </Formik>\n        <AlertModal\n          err={appError}\n          show={showAlert}\n          onHide={() => {\n            setShowAlert(false);\n            setAppError({});\n          }}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default EditItem;\n","\nimport React from 'react'\n\nimport { Container } from 'react-bootstrap'\n\nimport { CheckCircleIcon,  XCircleIcon } from \"@primer/octicons-react\";\n\nexport function sessionFormatter(cell, row) {\n    if (cell.length > 0) {\n      return <Container style={{color: 'green'}}><CheckCircleIcon style={{color: 'red'}} size={24} /></Container>\n    } else {\n      return <Container style={{color: 'red'}}><XCircleIcon size={24} /></Container>\n    }\n}\n\nexport function enabledFormatter(cell, row) {\n    if (cell) {\n      return <Container style={{color: 'green'}}><CheckCircleIcon style={{color: 'red'}} size={24} /></Container>\n    } else {\n      return <Container style={{color: 'red'}}><XCircleIcon size={24} /></Container>\n    }\n}\n\nexport function statusFormatter(cell, row) {\n    if (cell === \"CONFIRMED\") {\n      return <Container style={{color: 'green'}}><CheckCircleIcon style={{color: 'red'}} size={24} /></Container>\n    } else {\n      return <Container style={{color: 'red'}}><XCircleIcon fill='green' size={24} /></Container>\n    }\n}\n\nexport const arrayFormatter = (cell, row) => {\n    if (cell.length > 0) {\n      try {\n        return cell.map(a => a.GroupName).sort().join(',')\n      } catch (error) {\n        console.log(error)\n      }\n    } else {\n      return \"N/A\"\n    }\n}","import React, {useState} from 'react'\nimport { Form } from 'react-bootstrap'\nimport { apiFnc } from '../utils'\n\nimport { destroyLabSession } from '../utils/lab'\nimport { updateUserSettings } from '../utils/aws'\n\nconst ToggleButton = props => {\n\n  const [checked, setChecked] = useState(props.cell);\n  const [unactive, setUnactive] = useState(false);\n\n  const enableDisableUser = async (action, userId) => {\n    let body = {\n      action: action,\n      userId: userId\n    }\n    await updateUserSettings(body);\n  }\n\n  const handleToggleChange = async (value) => {\n    setUnactive(true);\n    setChecked(value);\n\n    // we already disable user so need to check active sessions and stops it\n    try {\n      if(!value){\n        if(props.row.session.length > 0){\n          apiFnc(destroyLabSession(null, props.row.session[0].uuid, props.row.session[0].taskId), \"Problem with Destroy Lab\", \"There is some problems with Destroy Lab, please refresh page or try it later.\")\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n\n    try {\n      if(value) {\n        await enableDisableUser(\"enable\",props.row.Username);\n      }\n      else {\n        await enableDisableUser(\"disable\",props.row.Username);\n      }\n    } catch (error) {\n      console.error(error);\n      //rollback setting of toggle if enable/disable user goes wrong\n      setChecked(!value);\n      setUnactive(false);\n      return;\n    }\n    \n    try {\n      if(!value){\n        // api calls signOff for user on all devices\n        await enableDisableUser(\"signOut\",props.row.Username);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    setUnactive(false);\n  }\n\n  return <Form>\n      <Form.Check \n        type=\"switch\"\n        id={props.row.Username}\n        label=\"\"\n        disabled={unactive}\n        checked={checked}\n        onChange={(e) => handleToggleChange(!checked)}\n      />\n    </Form>\n}\n\nexport default ToggleButton\n","import React, {useState, useEffect} from 'react'\nimport { Form, Col, Button} from 'react-bootstrap'\nimport Select from \"react-select\";\nimport { updateUserSettings } from '../utils/aws'\nimport { PlusIcon  } from \"@primer/octicons-react\";\n\nconst GroupSelect = props => {\n  const [ groups, setGroups ] = useState([]);\n  const [ change, setChange ] = useState(false);\n  const [ processing, setProcessing ] = useState(false); \n\n  useEffect(() => {\n    const onLoad = async () => {\n      let values = []\n      props.cell.map(obj=>values.push({value: obj.GroupName, label: obj.GroupName}))\n      setGroups(values);\n    }\n    onLoad()\n  },[props])\n\n  const handleStateChange = (newGroups, actualGroups) => {\n    if (newGroups == null)\n      setGroups([]);\n    else\n      setGroups(newGroups);\n    let grp = [];\n    actualGroups.map(obj=>grp.push({value: obj.GroupName, label: obj.GroupName}))\n    if (JSON.stringify(newGroups) === JSON.stringify(grp)){\n      setChange(false);\n    }\n    else {\n      setChange(true);\n    }\n\n  }\n\n  const groupUpdate = async (action, userId, grp) => {\n    let body = {\n      action: action,\n      userId: userId,\n      groups: grp\n    }\n    await updateUserSettings(body);\n  }\n\n  const handleUpdateGroups = async () => {\n    setProcessing(true);\n    let grp = [];\n\n    if(groups.length > 0){\n      groups.map(obj => grp.push(obj.value));\n    }\n    console.log(grp);\n    try {\n      await groupUpdate(\"updateUserGroups\",props.row.Username, grp);\n      setChange(false);\n    } catch (error) {\n      console.error(error);\n    }\n    setProcessing(false);\n  }\n\n  return <Form>\n          <Form.Row className=\"align-items-center\">\n            <Col xs={10}>\n              <Select\n                isMulti\n                value={groups}\n                options={props.groups}\n                closeMenuOnSelect={true}\n                onChange={(e) => { handleStateChange(e, props.cell)}}\n              />\n            </Col>{ change ? \n            <Col xs={1}>\n              <Button variant=\"success\" disabled={processing} onClick={() => { console.log(groups); handleUpdateGroups()}}> <PlusIcon /> </Button>\n            </Col> : <> </>\n            }\n          </Form.Row>\n        </Form>\n}\n\nexport default GroupSelect\n","import React from 'react'\n\nimport { arrayFormatter, statusFormatter, sessionFormatter } from '../admin'\nimport ToggleButton from '../../components/ToggleButton'\nimport GroupSelect from '../../components/GroupSelect'\n\nexport const expandRow = {\n    renderer: row => row.session.length > 0 ? (\n        <div>\n            <p>{ `Lab Name: ${row.session[0].labName}` }</p>\n            <p>{ `Time Remaining: ${(((row.session[0].startDateTime + row.session[0].timer.value* 60 * 1000) - Date.now()) / 60000).toFixed(0)} Minutes` }</p>\n        </div>\n    ) : (\n        <div>\n            <p>No session is active!</p>\n        </div>\n    ),\n    showExpandColumn: true,\n    expandByColumnOnly: true,\n};\n\nexport const columns = (groups) => [\n    { text: 'Name', dataField: 'Attributes.2.Value', sort:true, style: {verticalAlign: 'middle'} },\n    { text: 'Email', dataField: 'Attributes.3.Value', sort:true, style: {verticalAlign: 'middle'} },\n    { text: 'Created', dataField: 'UserCreateDate', sort:true, style: {verticalAlign: 'middle'} },\n    { text: 'Groups', dataField: 'group', formatter: (cell, row ) => <GroupSelect row={row} cell={cell} groups={groups} />, style: {'whiteSpace': 'nowrap'} },\n    { text: 'Account Confirmed', dataField: 'UserStatus', formatter: statusFormatter, sortValue: statusFormatter,  sort:true, style: {whiteSpace: 'nowrap', textAlign: 'center'}, headerStyle: (colum, colIndex) => {return { width: '5%', textAlign: 'left', whiteSpace: 'nowrap' };} },\n    { text: 'Account Enabled', dataField: 'Enabled', formatter: (cell, row) =>  <ToggleButton row={row} cell={cell} />, style: {whiteSpace: 'nowrap', textAlign: 'center'} , headerStyle: (colum, colIndex) => {return { width: '5%', textAlign: 'left', whiteSpace: 'nowrap' };}},\n    { text: 'Active Session', dataField: 'session', formatter: sessionFormatter, sortValue: arrayFormatter, sort:true, style: {whiteSpace: 'nowrap', textAlign: 'center'} , headerStyle: (colum, colIndex) => {return { width: '5%', textAlign: 'left', whiteSpace: 'nowrap' };}},\n  ]","import React, { useState, useEffect } from \"react\";\n\n// Import table2\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\n\n// Import utils\nimport { getUsers, getGroups } from \"../utils/aws\";\nimport { pagination } from \"../utils/constants/tableOptions\";\nimport { expandRow, columns } from \"../utils/constants/adminTableOptions\";\n\n// Import components\nimport AlertModal from \"../components/AlertModal\";\nimport NoDataIndication from \"../components/NoDataIndication\";\nimport FixedWhiteNavbar from \"components/Navbars/FixedWhiteNavbar.js\";\n\n// Import reactstrap components\nimport { Breadcrumb, BreadcrumbItem, Container, Col, Row } from \"reactstrap\";\n\n// Import css\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./Admin.css\";\n\nconst Admin = () => {\n  const [apiError, setApiError] = useState({});\n  const [showError, setShowError] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      let grps = [];\n      await Promise.all([\n        getGroups().then((item) =>\n          item.map((data) =>\n            grps.push({ value: data.GroupName, label: data.Description })\n          )\n        ),\n        getUsers().then((users) => setUsers(users)),\n      ]);\n      setGroups(grps);\n    };\n    onLoad();\n  }, []);\n\n  const AdminTable = (props) => {\n    return (\n      <ToolkitProvider\n        keyField=\"Username\"\n        data={props.data}\n        bootstrap4\n        columns={columns(groups)}\n      >\n        {(tableProps) => (\n          <Container className=\"m-0 mt-3\" fluid>\n            <Row>\n              <Col>\n                <BootstrapTable\n                  {...tableProps.baseProps}\n                  keyField=\"UserCreateDate\"\n                  pagination={paginationFactory(pagination)}\n                  expandRow={expandRow}\n                  noDataIndication={() => <NoDataIndication />}\n                />\n              </Col>\n            </Row>\n          </Container>\n        )}\n      </ToolkitProvider>\n    );\n  };\n\n  return (\n    <>\n      <FixedWhiteNavbar />\n      <Container className=\"px-0 h-100\" fluid>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <a href=\"/\">Home</a>\n          </BreadcrumbItem>\n          <BreadcrumbItem>Admin</BreadcrumbItem>\n          <BreadcrumbItem>User Management</BreadcrumbItem>\n        </Breadcrumb>\n        <AdminTable data={users} />\n        {apiError !== {} ? (\n          <AlertModal\n            err={apiError}\n            show={showError}\n            onHide={() => {\n              setShowError(false);\n              setApiError({});\n            }}\n          />\n        ) : null}\n      </Container>\n    </>\n  );\n};\n\nexport default Admin;\n","import React, {useState, useEffect} from 'react'\nimport { Form, Col, Button} from 'react-bootstrap'\nimport Select from \"react-select\";\nimport { getUsers, updateUserSettings } from '../utils/aws'\nimport { PlusIcon  } from \"@primer/octicons-react\";\n\nconst UsersSelect = props => {\n  const [ users, setUsers ] = useState([]);\n  const [ selectedUsers, setSelectedUsers ] = useState([])\n  const [ change, setChange ] = useState(false);\n  const [ processing, setProcessing ] = useState(false); \n  const [ addUsersToGroup,setAddUsersToGroup ] = useState([]);\n  const [ removeUsersFromGroup,setRemoveUsersFromGroup ] = useState([]);\n  const [ savedUsers, setSavedUsers ] = useState([])\n\n  useEffect(() => {\n    const onLoad = async () => {\n      let values = []\n      let selected = []\n      for (let user in props.users){\n        let name = props.users[user].Attributes.filter(item => item.Name === \"name\")\n        let email = props.users[user].Attributes.filter(item => item.Name === \"email\")\n        let groupName = props.users[user].group.map(value => value.GroupName);\n        let nameEmail = name[0].Value + \" / \" + email[0].Value\n        let group = props.users[user].group.filter(item => item.GroupName === props.row.GroupName)\n        if(group.length > 0){\n          selected.push({value:props.users[user].Username, label: nameEmail, groups: groupName})\n        }\n        values.push({value:props.users[user].Username, label: nameEmail, groups:groupName})\n      }\n      setSelectedUsers(selected);\n      setUsers(values);\n      setSavedUsers(selected)\n    }\n    onLoad()\n  },[props])\n\n  const handleUpdateLabs = async () => {\n    setProcessing(true)\n    let group = props.row.GroupName\n    try {\n      for(let idx in removeUsersFromGroup){\n        let newGroups = []\n        removeUsersFromGroup[idx].groups.map(value => {\n          if (value !== group)\n            newGroups.push(value)\n          return true\n        })\n        await groupUpdate(\"updateUserGroups\",removeUsersFromGroup[idx].value, newGroups);\n      }\n\n      for(let idx in addUsersToGroup){\n        let newGroups = []\n        addUsersToGroup[idx].groups.map(value => newGroups.push(value))\n        newGroups.push(group);\n        await groupUpdate(\"updateUserGroups\",addUsersToGroup[idx].value, newGroups);\n      }\n      setChange(false);\n      getUsers().then((users) => props.setUsers(users))\n    } catch (error) {\n      console.error(error);\n    }\n\n    setProcessing(false)\n\n  }\n\n  const groupUpdate = async (action, userId, grp) => {\n    let body = {\n      action: action,\n      userId: userId,\n      groups: grp\n    }\n    await updateUserSettings(body);\n  }\n\n  const handleStateChange = (actualItems) => {\n\n    if(actualItems === null)\n      actualItems = []\n    setSelectedUsers(actualItems);\n    let addUsersTmp = actualItems.filter(value => !savedUsers.includes(value))\n    let removeUsersTmp = savedUsers.filter(value => !actualItems.includes(value))\n    //Remove users which was removed and added without saving\n    let addUsers = addUsersTmp.filter(({ value: id1 }) => !removeUsersTmp.some(({ value: id2 }) => id2 === id1));\n    let removeUsers = removeUsersTmp.filter(({ value: id1 }) => !addUsersTmp.some(({ value: id2 }) => id2 === id1));\n\n    if(addUsers.length === 0 && removeUsers.length === 0){\n      setChange(false)\n    } else {\n      setChange(true)\n    }\n\n    setAddUsersToGroup(addUsers);\n    setRemoveUsersFromGroup(removeUsers)\n\n  }\n\n  return <Form>\n          <Form.Row className=\"align-items-center\">\n            <Col xs={11}>\n              <Select\n                isMulti\n                value={selectedUsers}\n                options={users}\n                closeMenuOnSelect={true}\n                onChange={(e) => { handleStateChange(e)}}\n              />\n              </Col>{ change ? \n            <Col xs={1}>\n              <Button variant=\"success\" size=\"sm\" disabled={processing} onClick={() => {handleUpdateLabs()}}> <PlusIcon /> </Button>\n            </Col> : <> </>\n            }\n          </Form.Row>\n        </Form>\n}\n\nexport default UsersSelect\n","import React, {useState, useEffect} from 'react'\nimport { Form, Col, Button} from 'react-bootstrap'\nimport Select from \"react-select\";\n// import { updateUserSettings } from '../utils/aws'\nimport { PlusIcon  } from \"@primer/octicons-react\";\nimport { refreshListOfLabs } from '../utils/lab'\nimport { updateLab } from \"../utils/aws\";\n\nconst LabsSelect = props => {\n\n  const [ labsInGroup, setLabsInGroup ] = useState([]);\n  const [ labs, setLabs ] = useState([]);\n  const [ savedLabs, setSavedLabs ] = useState([])\n  const [ change, setChange ] = useState(false);\n  const [ processing, setProcessing ] = useState(false); \n  const [ addLabsToGroup,setAddLabsToGroup ] = useState([]);\n  const [ removeLabsFromGroup, setRemoveLabsFromGroup ] = useState([]);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      // console.log(\"RELOAD\");\n      if(props.row.GroupName !== \"Admin\" || props.row.GroupName !== \"Developer\"){\n        let values = []\n        let allLabs = []\n        props.labs.filter(function (lab) {\n          // console.log(lab);\n          allLabs.push({value:lab.uuid, label: lab.labName, data: lab})\n          return lab.types.filter(function(group){\n            if(group.value === props.row.GroupName){\n              // console.log(\"CMP:\", group.value , props.row.GroupName)\n              // console.log(\"LABS:\", lab)\n              values.push({value:lab.uuid, label: lab.labName, data: lab})\n              return true;\n            }\n            else {\n              return false\n            }\n          })\n        })\n        // console.log(\"VALUES:\",values )\n        setLabs(allLabs);\n        setLabsInGroup(values);\n        setSavedLabs(values);\n      }\n    }\n    onLoad()\n  },[props])\n\n  const handleStateChange = (labsSelected) => {\n    console.log(\"E\",labsSelected)\n\n    if(labsSelected === null)\n      labsSelected = []\n    setLabsInGroup(labsSelected)\n    let addLabsTmp = labsSelected.filter(value => !savedLabs.includes(value))\n    let removeLabsTmp = savedLabs.filter(value => !labsSelected.includes(value))\n    //remove dupicit of same lab in add and remove incase user remove it and add it without saving we dont need to do this operation\n    let addLabs = addLabsTmp.filter(({ value: id1 }) => !removeLabsTmp.some(({ value: id2 }) => id2 === id1));\n    let removeLabs = removeLabsTmp.filter(({ value: id1 }) => !addLabsTmp.some(({ value: id2 }) => id2 === id1));\n    if(addLabs.length === 0 && removeLabs.length === 0){\n      setChange(false)\n    } else {\n      setChange(true)\n    }\n    setAddLabsToGroup(addLabs)\n    setRemoveLabsFromGroup(removeLabs)\n  }\n\n\n  const handleUpdateLabs = async () => {\n    setProcessing(true);\n    let group = {value: props.row.GroupName, label: props.row.GroupName}\n    try {\n      for(let idx in removeLabsFromGroup){\n        let newGroups = []  \n        removeLabsFromGroup[idx].data.types.map(value => {\n          if(value.value !== props.row.GroupName)\n            newGroups.push(value)\n          return true\n        })\n        let updatedLabValues = setLabValue(removeLabsFromGroup[idx].data, newGroups)\n        await updateLab(updatedLabValues);\n      }\n      for(let idx in addLabsToGroup){\n        let newGroups = []  \n        addLabsToGroup[idx].data.types.map(value => newGroups.push(value))\n        newGroups.push(group)\n        let updatedLabValues = setLabValue(addLabsToGroup[idx].data, newGroups)\n        await updateLab(updatedLabValues);\n      }\n      setChange(false);\n    } catch (error) {\n      console.error(error);\n    }\n    refreshListOfLabs(props.dispatch, [\"Admin\"])\n    setProcessing(false);\n  }\n\n  const setLabValue = (lab, groups) => {\n    let values = {\n      'labName': lab.labName,\n      'description': lab.description,\n      'types': groups,\n      'timer': lab.timer,\n      'containerDefinition': lab.containerDefinition,\n      'active': lab.active,\n      'ide': lab.ide,\n      'shell': lab.shell,\n      'basePorts': lab.basePorts,\n      'resourcesCPUMEM': lab.resourcesCPUMEM,\n      'categories': lab.categories,\n      'baseGitUrl': lab.baseGitUrl,\n      'uuid': lab.uuid,\n      'userUuid': lab.userUuid,\n      'achievements': lab.achievements,\n      'achievementsImage' : lab.achievementsImage,\n      'achievementsDebug' : lab.achievementsDebug\n    }\n    return values;\n  }\n\n  return (props.row.GroupName === \"Admin\" || props.row.GroupName === \"Developer\") ? \n      null :\n      <Form>\n          <Form.Row className=\"align-items-center\">\n            <Col xs={11}>\n              <Select\n                isMulti\n                value={labsInGroup}\n                options={labs}\n                closeMenuOnSelect={true}\n                onChange={(e) => { handleStateChange(e, props.cell)}}\n              />\n            </Col>{ change ? \n            <Col xs={1}>\n              <Button variant=\"success\" size=\"sm\" disabled={processing} onClick={() => {handleUpdateLabs()}}> <PlusIcon /> </Button>\n            </Col> : <> </>\n            }\n          </Form.Row>\n        </Form>\n}\n\nexport default LabsSelect\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getLabs } from \"../redux/slices/labsSlice\";\nimport { PlusCircleIcon, XCircleIcon } from \"@primer/octicons-react\";\nimport { Modal, Button, Form, Spinner} from 'react-bootstrap'\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\n// Import table2\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\n\n// Import utils\nimport { getUsers, getGroups, createGroup, deleteGroup } from \"../utils/aws\";\nimport { pagination } from \"../utils/constants/tableOptions\";\nimport { refreshListOfLabs } from \"../utils/lab\";\n\n// Import Components\nimport AlertModal from \"../components/AlertModal\";\nimport NoDataIndication from \"../components/NoDataIndication\";\nimport UsersSelect from \"../components/UsersSelect\";\nimport LabsSelect from \"../components/LabsSelect\";\nimport FixedWhiteNavbar from \"components/Navbars/FixedWhiteNavbar.js\";\n\n// Import reactstrap components\nimport { Breadcrumb, BreadcrumbItem, Container, Col, Row } from \"reactstrap\";\n\n// Import CSS\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./GroupsManagement.css\";\n\nconst GroupsManagement = () => {\n  const labsInfo = useSelector(getLabs);\n  const dispatch = useDispatch();\n  const [apiError, setApiError] = useState({});\n  const [showError, setShowError] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [processingCreating, setProcessingCreating] = useState(false);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await Promise.all([\n        getUsers().then((users) => setUsers(users)),\n        getGroups().then((groups) => {console.log(groups); setGroups(groups)}),\n        refreshListOfLabs(dispatch, [\"Admin\"]),\n      ]);\n\n    };\n    onLoad();\n  }, [dispatch]);\n\n\n  const schema = yup.object({\n    groupName: yup.string().required(),\n    groupDescription: yup.string().required(),\n  });\n\n  const submitForm = async (values) => {\n    setProcessingCreating(true);\n    let newGroupName = values.groupName.toLowerCase().trim();\n    let newGroupDesc = values.groupDescription;\n    let json = {\n      groupName: newGroupName,\n      groupDescription: newGroupDesc\n    }\n    await createGroup(json);\n    await getGroups().then((groups) => setGroups(groups));\n    setProcessingCreating(false);\n    handleClose();\n\n  }\n\n  const destroyGroup = async (cell) => {\n    if (window.confirm(\"Are you sure you want to delete group: '\" + cell + \"' ?\")) {\n      let json = {\n        groupName: cell,\n      }\n      await deleteGroup(json);\n      await getGroups().then((groups) => setGroups(groups));\n    }\n  }\n\n  const createGroupColumn = (cell, row) => {\n    console.log(labsInfo);\n    console.log(row);\n    console.log(cell);\n    if(cell === \"Admin\" || cell === \"Developer\")\n      return <div>{cell}</div>\n    else{\n      return <div><Button size=\"sm\" variant=\"danger\" onClick={()=>destroyGroup(cell)}> {cell} <XCircleIcon /> </Button></div>\n    }\n  }\n\n  const columns = [\n    {\n      text: <div>Groups <Button size=\"sm\" variant=\"success\" onClick={handleShow}> <PlusCircleIcon /> </Button></div>,\n      dataField: \"GroupName\",\n      sort: false,\n      formatter: (cell, row) => ( createGroupColumn(cell,row) ),\n      style: { width: \"10%\", verticalAlign: \"middle\" },\n    },\n    {\n      text: \"Users\",\n      dataField: \"users\",\n      formatter: (cell, row) => (\n        <UsersSelect row={row} cell={cell} users={users} setUsers={setUsers} />\n      ),\n      style: { width: \"45%\", whiteSpace: \"nowrap\" },\n    },\n    {\n      text: \"Labs\",\n      dataField: \"labs\",\n      formatter: (cell, row) => (\n        <LabsSelect\n          row={row}\n          cell={cell}\n          labs={labsInfo.data}\n          dispatch={dispatch}\n        />\n      ),\n      style: { width: \"45%\", whiteSpace: \"nowrap\" },\n    },\n  ];\n\n  const AdminGrpTable = (props) => {\n    return (\n      <ToolkitProvider\n        keyField=\"Username\"\n        data={props.data}\n        bootstrap4\n        columns={columns}\n      >\n        {(tableProps) => (\n          <Container className=\"m-0 mt-3\" fluid>\n            <Row>\n              <Col>\n                <BootstrapTable\n                  {...tableProps.baseProps}\n                  keyField=\"GroupName\"\n                  pagination={paginationFactory(pagination)}\n                  noDataIndication={() => <NoDataIndication />}\n                />\n              </Col>\n            </Row>\n          </Container>\n        )}\n      </ToolkitProvider>\n    );\n  };\n\n  return (\n    <>\n      <FixedWhiteNavbar />\n      <Container className=\"px-0 h-100\" fluid>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <a href=\"/\">Home</a>\n          </BreadcrumbItem>\n          <BreadcrumbItem>Admin</BreadcrumbItem>\n          <BreadcrumbItem>Groups Management</BreadcrumbItem>\n        </Breadcrumb>\n        <AdminGrpTable data={groups} />\n        {apiError !== {} ? (\n          <AlertModal\n            err={apiError}\n            show={showError}\n            onHide={() => {\n              setShowError(false);\n              setApiError({});\n            }}\n          />\n        ) : null}\n        <Modal centered show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Create Group</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Formik\n              validationSchema={schema}\n              onSubmit={submitForm}\n              initialValues={{\n                groupName: '',\n                groupDescription: '',\n              }}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n                <Form onSubmit={handleSubmit}>\n                  <Form.Row>\n                    <Form.Group controlid=\"validationGroupName\">\n                      <Form.Label>Group Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"groupName\"\n                        value={values.groupName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={(errors.groupName || groups.some(item => item.GroupName.toLowerCase() === values.groupName.toLowerCase())) && touched.groupName}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Name Invalid or Already Exists\n                      </Form.Control.Feedback>\n                      <Form.Text className=\"text-muted\">\n                          Group Name have to be one word lowercase, if not the Group Name will be transform to lowercase and trim it into one word.\n                      </Form.Text>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group controlid=\"validationGroupDescription\">\n                      <Form.Label>Group Description</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"groupDescription\"\n                        value={values.groupDescription}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isInvalid={errors.groupDescription && touched.groupDescription}\n                      />\n                      <Form.Text className=\"text-muted\">\n                          Group Desription is description of group who is using it or what kind part of project is belonging, there is no standard for desription can be empty.\n                      </Form.Text>\n                      <Form.Control.Feedback type=\"invalid\">\n                        Description is required\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    </Form.Row>\n                    {\n                    processingCreating ?  <Button disabled={processingCreating} type=\"submit\">Create Group  <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    /></Button> : <Button disabled={processingCreating} type=\"submit\">Create Group</Button>\n                  }\n                </Form>\n              )}\n            </Formik>\n\n          </Modal.Body>\n        </Modal>\n      </Container>\n    </>\n  );\n};\n\nexport default GroupsManagement;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/slices/userSlice\";\n\n// Import utils\nimport { changingPassword } from \"../utils/authentication\";\nimport { yupChangePasswordValidation } from \"../utils/constants/yupAuthSchema\";\n\n// Import components\nimport FixedWhiteNavbar from \"components/Navbars/FixedWhiteNavbar.js\";\n\n// Import reactstrap components\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  FormFeedback,\n  Breadcrumb,\n  BreadcrumbItem,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n  Button,\n} from \"reactstrap\";\n\nconst UserPreferences = () => {\n  const userInfo = useSelector(getUser);\n  const history = useHistory();\n\n  const [validationMessage, setValidationMessage] = useState(\"\");\n\n  const submitForm = async (values) => {\n    try {\n      await changingPassword(history, values);\n    } catch (error) {\n      setValidationMessage(error.message);\n    }\n  };\n\n  const initialState = {\n    oldPassword: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  return (\n    <>\n      <FixedWhiteNavbar />\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <a href=\"/\">Home</a>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>User Preferences</BreadcrumbItem>\n      </Breadcrumb>\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col md={6}>\n            <h4>Details</h4>\n            <Form>\n              <FormGroup controlid=\"userName\">\n                <Label>Name</Label>\n                <Input\n                  disabled\n                  value={userInfo.userName}\n                  type=\"string\"\n                  placeholder=\"Enter Password\"\n                />\n              </FormGroup>\n              <FormGroup controlid=\"userEmail\">\n                <Label>Email</Label>\n                <Input\n                  disabled\n                  value={userInfo.userEmail}\n                  type=\"email\"\n                  placeholder=\"Enter Password\"\n                />\n              </FormGroup>\n            </Form>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md={6}>\n            <h4>Password</h4>\n            {validationMessage === undefined ||\n            validationMessage === \"\" ? null : (\n              <Alert color=\"danger\">{validationMessage}</Alert>\n            )}\n            <Formik\n              validationSchema={yupChangePasswordValidation}\n              initialValues={initialState}\n              onSubmit={submitForm}\n            >\n              {({\n                values,\n                status,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                setFieldValue,\n                setFieldError,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                  <FormGroup>\n                    <Label>Current Password</Label>\n                    <Input\n                      name=\"oldPassword\"\n                      autoComplete=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      invalid={touched.oldPassword && errors.oldPassword}\n                      value={values.oldPassword}\n                      type=\"password\"\n                      placeholder=\"Enter Password\"\n                    />\n                    <FormFeedback type=\"invalid\">\n                      {errors.oldPassword}\n                    </FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>New Password</Label>\n                    <Input\n                      name=\"password\"\n                      autoComplete=\"new-password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      invalid={touched.password && errors.password}\n                      value={values.password}\n                      type=\"password\"\n                      placeholder=\"Enter Password\"\n                    />\n                    <FormFeedback type=\"invalid\">\n                      {errors.password}\n                    </FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Confirm New Password</Label>\n                    <Input\n                      name=\"confirmPassword\"\n                      autoComplete=\"new-password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      invalid={\n                        touched.confirmPassword && errors.confirmPassword\n                      }\n                      value={values.confirmPassword}\n                      type=\"password\"\n                      placeholder=\"Enter Password\"\n                    />\n                    <FormFeedback type=\"invalid\">\n                      {errors.confirmPassword}\n                    </FormFeedback>\n                  </FormGroup>\n\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Save Changes\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default UserPreferences;\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst AppliedRoute = ({ component: C, appProps, ...rest }) =>\n    <Route {...rest} render={props => <C {...props} {...appProps} />} />\n\nexport default AppliedRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { getUser } from '../redux/slices/userSlice'\nimport { getSession } from '../redux/slices/sessionSlice'\n\n\nexport const AuthenticatedRoute = ({ component: C, appProps, ...rest }) => {\n    const isAuthenticated = useSelector(getUser).isAuthenticated\n    return <Route {...rest} render={props => isAuthenticated ?\n        <C {...props} {...appProps} /> :\n        <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`}/>}\n    />\n}\n\nexport const AdminRoute = ({ component: C, appProps, ...rest }) => {\n    const user = useSelector(getUser)\n    \n    return <Route {...rest} render={props => !user.isLoaded\n        ? <></>\n        : !user.isAuthenticated \n            ? <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`}/>\n            : user.userAdmin \n                ? <C {...props} {...appProps} /> \n                : <Redirect to={`/`}/>}\n    />\n}\n\nexport const ActiveLabRoute = ({ component: C, appProps, ...rest }) => {\n\n    const user = useSelector(getUser)\n    const session = useSelector(getSession)\n\n    return <Route {...rest} render={props => !user.isLoaded\n        ? <></> \n        : user.isAuthenticated\n            ? !session.isLoaded \n                ? <></>\n                : session.isLabActive \n                    ? <C {...props} {...appProps} /> \n                    : <Redirect to={`/`}/>\n            : <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`}/>}\n    />\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { getUser } from '../redux/slices/userSlice'\nimport { querystring } from '../utils'\n\nconst UnauthenticatedRoute = ({ component: C, appProps, ...rest }) => {\n  const userInfo = useSelector(getUser)\n  const redirect = querystring('redirect', window.location.href)\n  return <Route {...rest} render={props => !userInfo.isAuthenticated ?\n      <C {...props} {...appProps} /> :\n      <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect}/>}\n  />\n}\n\nexport default UnauthenticatedRoute\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { alert } from \"react-bootstrap-confirmation\";\n\n// Import utils\nimport { yupForgotPasswordSchema } from \"../utils/constants/yupAuthSchema\";\n\n// Import components\nimport FixedTransparentNavbar from \"components/Navbars/FixedTransparentNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\n\n// Import reactstrap components\nimport {\n  Button,\n  FormGroup,\n  Card,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Form,\n  FormFeedback,\n  Input,\n  Container,\n  Col,\n  Row,\n  Alert,\n} from \"reactstrap\";\n\nconst ForgotPassword = () => {\n  const initialState = {\n    email: \"\",\n  };\n\n  const history = useHistory();\n\n  const passwordRedirect = async (setSubmitting, values) => {\n    await alert(\n      \"If the email is found in our system, a reset email has be sent\"\n    );\n\n    setSubmitting(false);\n\n    history.push({\n      pathname: \"/forgotpasswordsubmit\",\n      search: \"?email=\" + values.email,\n    });\n  };\n\n  const submitForm = async (values, { setSubmitting, setStatus }) => {\n    // Set form as submitting\n    setSubmitting(true);\n    setStatus();\n\n    // Register the user\n    try {\n      await Auth.forgotPassword(values.email);\n      await passwordRedirect(setSubmitting, values);\n    } catch (e) {\n      if (e.code === \"UserNotFoundException\") {\n        await passwordRedirect(setSubmitting, values);\n      } else {\n        setStatus(e.message);\n        setSubmitting(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <FixedTransparentNavbar />\n      <div className=\"page-header header-filter\" filter-color=\"blue-solid\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage: \"url(\" + require(\"assets/img/coding7.jpg\") + \")\",\n          }}\n        ></div>\n        <div className=\"content\">\n          <Container>\n            <Row>\n              <Col />\n              <Col className=\"mr-auto\" md=\"6\" lg=\"5\">\n                <Card\n                  className=\"card-signup\"\n                  style={{\n                    borderRadius: \".5rem\",\n                  }}\n                >\n                  <CardBody>\n                    <CardTitle className=\"text-center\" tag=\"h4\">\n                      Forgot Password\n                    </CardTitle>\n                    <Formik\n                      validationSchema={yupForgotPasswordSchema}\n                      initialValues={initialState}\n                      onSubmit={submitForm}\n                    >\n                      {({\n                        values,\n                        status,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        setFieldError,\n                        handleSubmit,\n                        isSubmitting,\n                      }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                          <Alert\n                            color=\"danger\"\n                            style={{ borderRadius: \"1rem\" }}\n                            isOpen={status !== undefined}\n                          >\n                            {status}\n                          </Alert>\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"email\"\n                              placeholder=\"Email\"\n                              type=\"text\"\n                              name=\"email\"\n                              onChange={handleChange}\n                              invalid={touched.email && errors.email}\n                            ></Input>\n                            <FormFeedback type=\"invalid\">\n                              {errors.email}\n                            </FormFeedback>\n                          </FormGroup>\n\n                          <CardFooter className=\"text-center m-0\">\n                            <Button\n                              className=\"btn-round m-3\"\n                              color=\"danger\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                              tag={Link}\n                              to={`/login`}\n                            >\n                              Go back\n                            </Button>\n                            <Button\n                              className=\"btn-round m-3\"\n                              color=\"info\"\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                            >\n                              Submit\n                            </Button>\n                          </CardFooter>\n                        </Form>\n                      )}\n                    </Formik>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col />\n            </Row>\n          </Container>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory, Link } from \"react-router-dom\";\n\n// Import utils\nimport { yupForgotPasswordSubmitSchema } from \"../utils/constants/yupAuthSchema\";\n\n// Import components\nimport PasswordField from \"../components/PasswordField\";\nimport FixedTransparentNavbar from \"components/Navbars/FixedTransparentNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\n\n// Import reactstrap components\nimport {\n  Button,\n  FormGroup,\n  Card,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Form,\n  FormFeedback,\n  Input,\n  Container,\n  Col,\n  Row,\n  Alert,\n} from \"reactstrap\";\n\nconst ForgotPasswordSubmit = (props) => {\n  const urlParams = new URLSearchParams(props.location.search);\n\n  const initialState = {\n    email: urlParams.get(\"email\"),\n    password: \"\",\n    passwordConfirmation: \"\",\n    code: \"\",\n  };\n\n  const history = useHistory();\n\n  const submitForm = async (\n    values,\n    { setSubmitting, setFieldError, setStatus }\n  ) => {\n    // Set form as submitting\n    setSubmitting(true);\n    setStatus();\n\n    // Register the user\n    try {\n      await Auth.forgotPasswordSubmit(\n        values.email,\n        values.code,\n        values.password\n      );\n      history.push({\n        pathname: \"/\",\n      });\n    } catch (e) {\n      setStatus(\n        \"Unable to change password. Check details have been entered correctly\"\n      );\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <FixedTransparentNavbar />\n      <div className=\"page-header header-filter\" filter-color=\"blue-solid\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage: \"url(\" + require(\"assets/img/coding7.jpg\") + \")\",\n          }}\n        ></div>\n        <div className=\"content\">\n          <Container>\n            <Row>\n              <Col />\n              <Col className=\"mr-auto\" md=\"6\" lg=\"5\">\n                <Card\n                  className=\"card-signup\"\n                  style={{\n                    borderRadius: \".5rem\",\n                  }}\n                >\n                  <CardBody>\n                    <CardTitle className=\"text-center\" tag=\"h4\">\n                      Change Password\n                    </CardTitle>\n                    <Formik\n                      validationSchema={yupForgotPasswordSubmitSchema}\n                      initialValues={initialState}\n                      onSubmit={submitForm}\n                    >\n                      {({\n                        values,\n                        status,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        setFieldError,\n                        handleSubmit,\n                        isSubmitting,\n                      }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                          <Alert\n                            color=\"danger\"\n                            style={{ borderRadius: \"1rem\" }}\n                            isOpen={status !== undefined}\n                          >\n                            {status}\n                          </Alert>\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"email\"\n                              placeholder=\"Email\"\n                              value={values.email}\n                              type=\"text\"\n                              name=\"email\"\n                              onChange={handleChange}\n                              invalid={touched.email && errors.email}\n                            ></Input>\n                            <FormFeedback type=\"invalid\">\n                              {errors.email}\n                            </FormFeedback>\n                          </FormGroup>\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              placeholder=\"Code\"\n                              type=\"text\"\n                              name=\"code\"\n                              onChange={handleChange}\n                              invalid={touched.code && errors.code}\n                            ></Input>\n                            <FormFeedback type=\"invalid\">\n                              {errors.email}\n                            </FormFeedback>\n                          </FormGroup>\n                          <PasswordField\n                            name=\"password\"\n                            value={values.password}\n                            handleChange={handleChange}\n                            handleBlur={handleBlur}\n                            touched={touched.password}\n                            error={errors.password}\n                          />\n                          <FormGroup className={\"input-lg\"}>\n                            <Input\n                              autoComplete=\"password\"\n                              placeholder=\"Confirm Password\"\n                              type=\"password\"\n                              name=\"passwordConfirmation\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              invalid={\n                                touched.passwordConfirmation &&\n                                errors.passwordConfirmation\n                              }\n                            />\n                            <FormFeedback type=\"invalid\">\n                              {errors.passwordConfirmation}\n                            </FormFeedback>\n                          </FormGroup>\n                          <CardFooter className=\"text-center m-0\">\n                            <Button\n                              className=\"btn-round m-3\"\n                              color=\"danger\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                              tag={Link}\n                              to={`/login`}\n                            >\n                              Go back\n                            </Button>\n                            <Button\n                              className=\"btn-round m-3\"\n                              color=\"info\"\n                              type=\"submit\"\n                              disabled={isSubmitting}\n                              size=\"lg\"\n                            >\n                              Submit\n                            </Button>\n                          </CardFooter>\n                        </Form>\n                      )}\n                    </Formik>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col />\n            </Row>\n          </Container>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordSubmit;\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../views/Home'\nimport Labs from '../views/Labs'\nimport Registration from '../views/Register'\nimport Login from '../views/Login'\nimport Activate from '../views/Activate'\nimport Sandbox from '../views/Sandbox'\nimport Editor from '../views/Editor'\nimport Admin from '../views/Admin'\nimport GroupsManagement from '../views/GroupsManagement'\nimport UserPreferences from '../views/UserPreferences'\nimport AppliedRoute from './AppliedRoute'\nimport {AuthenticatedRoute, AdminRoute, ActiveLabRoute} from './AuthenticatedRoute'\nimport UnauthenticatedRoute from './UnauthenticatedRoute'\nimport ForgotPassword from '../views/ForgotPassword'\nimport ForgotPasswordSubmit from '../views/ForgotPasswordSubmit'\n\n\nconst Routes = props =>\n    <Switch>\n      <AppliedRoute path=\"/\" exact component={Home} appProps={props} />\n      <UnauthenticatedRoute path=\"/register\" exact component={Registration} appProps={props}/>\n      <UnauthenticatedRoute path=\"/activate\" exact component={Activate} appProps={props}/>\n      <UnauthenticatedRoute path=\"/login\" exact component={Login} appProps={props}/>\n      <UnauthenticatedRoute path=\"/forgotpassword\" exact component={ForgotPassword} appProps={props}/>\n      <UnauthenticatedRoute path=\"/forgotpasswordsubmit\" exact component={ForgotPasswordSubmit} appProps={props}/>\n      <AuthenticatedRoute path=\"/labs\" exact component={Labs} appProps={props} />\n      <ActiveLabRoute path=\"/sandbox\" exact component={Sandbox} appProps={props} />\n      <AuthenticatedRoute path=\"/userdetails\" exact component={UserPreferences} />\n      <AuthenticatedRoute path=\"/edititem/:id\" exact component={Editor} appProps={props} />\n      <AuthenticatedRoute path=\"/additem\" exact component={Editor} appProps={props} />\n      <AdminRoute path=\"/usersmgmt\" exact component={Admin} appProps={props} />\n      <AdminRoute path=\"/groupsmgmt\" exact component={GroupsManagement} appProps={props} />\n      <Route component={Home} />\n    </Switch>\n\nexport default Routes\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport Routes from \"./routes/Routes\";\nimport \"./App.css\";\nimport { Auth } from \"aws-amplify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsLabRunning, getSession, setRemainingMins } from './redux/slices/sessionSlice';\nimport { setIsLoaded } from './redux/slices/userSlice';\nimport { setUserData } from \"./utils/authentication\";\nimport { loadSession } from \"./utils/session\";\n\nfunction App() {\n\n  // Set initial states\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const dispatch = useDispatch();\n  const sessionInfo = useSelector(getSession);\n  const minInMs = 60000;\n  const [ wasCalled, setWasCalled ] = useState(false);\n  const [ firstCall, setFirstCall ] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  // eslint-disable-next-line\n  },[]);\n\n  // This is the code that gets the timer\n  // eslint-disable-next-line\n  useEffect(() => {\n    if(sessionInfo.isLabActive && !wasCalled){\n      let timerVal = sessionInfo.session.timer.value * 60 * 1000;\n      if(firstCall){\n        setFirstCall(false);\n        remainingTime(timerVal);\n      }\n      setWasCalled(true);\n      let timerSec = sessionInfo.remainingMins === 0 ? 1000 : minInMs;\n      \n      setTimeout(() => {\n        remainingTime(timerVal);\n      }, timerSec);\n    }\n  });\n\n  async function onLoad() {\n\n  // Check if the user is authenticated\n    try {\n      await Auth.currentAuthenticatedUser({ bypassCache: false })\n        .then((user) => { \n          setUserData(dispatch, user);\n          loadSession(dispatch, user.username);\n          dispatch(setIsLabRunning(false));\n        })\n        .then(setIsAuthenticating(false))\n        .catch((err) => {\n          console.log(err)\n          dispatch(setIsLoaded(true))\n        });      \n    } catch (e) {\n      if (e !== \"No current user\") {\n        alert(e);\n      }\n    }\n  }\n\n  function remainingTime(timer) {\n      const endTime = sessionInfo.session.startDateTime + timer;\n      const timeNow = Date.now();\n      let mins = 0;\n      \n      if(endTime > timeNow){\n        mins = ((endTime-timeNow) / minInMs).toFixed(0);\n        dispatch(setIsLabRunning(true));\n      }\n\n      dispatch(setRemainingMins(mins));\n      setWasCalled(false);\n    // }\n    }\n    \n  return (\n    !isAuthenticating && (\n      <Container fluid className=\"px-0 vh-100\">\n        <Routes />\n      </Container>\n    )\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport userReducer from './slices/userSlice';\nimport sessionReducer from './slices/sessionSlice';\nimport labsReducer from './slices/labsSlice';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    session: sessionReducer,\n    labs: labsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Amplify, Auth } from 'aws-amplify';\nimport config from './config';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\n\n// styles for this kit\nimport \"assets/css/bootstrap.min.css\";\nimport \"assets/scss/now-ui-kit.scss?v=1.4.0\";\nimport \"assets/demo/demo.css?v=1.4.0\";\nimport \"assets/demo/react-demo.css?v=1.4.0\";\nimport \"assets/demo/nucleo-icons-page-styles.css?v=1.4.0\";\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"dpg\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION,\n        custom_header: () => { return { 'x-api-key': config.apiGateway.X_API_KEY } },\n      },\n      {\n        name: \"dpg-v2\",\n        endpoint: config.slsApi.URL,\n        custom_header: async () => { \n          return { \n            Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}` \n          }\n        }\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}